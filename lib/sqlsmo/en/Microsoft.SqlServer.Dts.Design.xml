<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.SqlServer.Dts.Design</name>
  </assembly>
  <members>
    <member name="T:Microsoft.SqlServer.Dts.Design.HelpContextAttribute">
      <summary>Defines a <see cref="T:Microsoft.SqlServer.Dts.Design.HelpContextAttribute" /> attribute for the <see cref="T:Microsoft.SqlServer.Dts.Design.HelpContextAttribute" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.HelpContextAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Design.HelpContextAttribute" /> class by using an F1 keyword parameter. </summary>
      <param name="f1Keyword">The keyword of the Help topic to display.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.HelpContextAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Design.HelpContextAttribute" /> class by using the F1 keyword, collection, and filter parameters. </summary>
      <param name="helpCollection">The Help collection from which to retrieve the Help.</param>
      <param name="helpFilter">The filter applied to the Help.</param>
      <param name="f1Keyword">The keyword of the Help topic to display.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.HelpContextAttribute.F1Keyword">
      <summary>Gets or sets a String containing the keyword to be used in looking up Help.</summary>
      <returns>A String containing the keyword to be used in looking up Help.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.HelpContextAttribute.HelpCollection">
      <summary>Gets or sets a String containing the Help collection from which to retrieve the Help.</summary>
      <returns>A String containing the Help collection from which to obtain the Help.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.HelpContextAttribute.HelpFilter">
      <summary>Gets or sets a String containing any filters that are in place to narrow down the search in the Help collection.</summary>
      <returns>A String containing any filters that are in place to narrow down the search in the Help collection.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo">
      <summary>Provides detailed information about an error or warning event generated by SSIS control flow or data flow components during design.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.Component">
      <summary>Returns the IComponent interface of the object that raised the event.</summary>
      <returns>An IComponent that is the component associated with the error.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.Description">
      <summary>Returns the text of the message.</summary>
      <returns>A String containing the error message.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.ErrorCode">
      <summary>Returns an Integer that identifies the error message.</summary>
      <returns>An Integer that identifies the error message.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.GetMessage">
      <summary>Returns a String that contains the error message, component, and the subcomponent, for each error.</summary>
      <returns>A String that contains the error message, component, and subcomponent.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.GetMessage(System.Boolean)">
      <summary>Returns a String that contains the error message.</summary>
      <returns>When true, a String that contains the error message. When false, a String that contains the error message, component and subcomponent information.</returns>
      <param name="descriptionOnly">A Boolean that indicates whether the error message only is returned, or the error message plus component and subcomponent information.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.HelpContext">
      <summary>Returns the identifier of the topic in the Help file.</summary>
      <returns>An Integer containing the topic identifier.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.HelpFile">
      <summary>Returns the path to the Help file that contains detailed information.</summary>
      <returns>A String containing the path to the Help file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.Level">
      <summary>Returns a TraceLevel enumeration value indicating what messages to output for the Debug, Trace and TraceSwitch classes.</summary>
      <returns>A TraceLevel enumeration value indicating what messages to output for the Debug, Trace and TraceSwitch classes.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.SourceComponent">
      <summary>Returns the name of the component where the error originated.</summary>
      <returns>A String containing the name of the component.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.SubComponent">
      <summary>Returns an arbitrary String that identifies the sub-module within a source: for example, the transform in a Pipeline task.</summary>
      <returns>A String containing the submodule that is the source of the error.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Design.IDtsClipboardService">
      <summary>Provides developers using the task and transform user interface the ability to query if their task or transform was generated as part of a copy/paste or cut/paste operation.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IDtsClipboardService.IsPasteActive">
      <summary>Gets a Boolean that indicates whether or not paste operations are currently active. Tasks and components can use this value to see if they were generated as a result of a paste operation.</summary>
      <returns>A Boolean indicating whether or not paste operations are currently active. A value of true indicates that the paste operations are currently active.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Design.IDtsDesignerUtilitiesService">
      <summary>Provides methods that let Integration Services developers invoke the Expression Builder dialog box programmatically.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.IDtsDesignerUtilitiesService.EditExpression(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.DtsContainer,System.Type,System.String@)">
      <summary>Displays the Expression Builder dialog box that lets the end user use the Integration Services expression language to create and test an expression.</summary>
      <returns>true if the expression has changed; otherwise, false.</returns>
      <param name="parentWindow">The IWin32Window handle to the Windows form from which the Expression Builder dialog box is invoked.</param>
      <param name="dtsContainer">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsContainer" /> that defines the scope for package variables that can be used in the expression.</param>
      <param name="expressionType">The Type of the return type of the expression.</param>
      <param name="expression">A string that is passed by reference and represents the expression.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.IDtsDesignerUtilitiesService.EditPropertyExpression(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.DtsContainer,Microsoft.SqlServer.Dts.Runtime.IDTSPropertiesProvider,System.String)">
      <summary>Displays the Expression Builder dialog box that lets the end user use the Integration Services expression language to create and test a property expression.</summary>
      <returns>true if the expression has changed; otherwise, false.</returns>
      <param name="parentWindow">The IWin32Window handle to the Windows form from which the Expression Builder dialog box is invoked.</param>
      <param name="dtsContainer">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsContainer" /> that defines the scope for package variables that can be used in the expression.</param>
      <param name="property">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPropertiesProvider" /> that represents the property to which the expression is assigned.</param>
      <param name="propertyName">The name of the property to which the expression is assigned.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Design.IDtsPipelineEnvironmentService">
      <summary>Gives data flow components access to the parent Data Flow task and its <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" /> container.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IDtsPipelineEnvironmentService.Pipeline">
      <summary>Gets the parent Data Flow task of a data flow component.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline100" /> that represents the parent Data Flow task.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Design.IDtsPipelineEnvironmentService.PipelineTaskHost">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" /> that represents the TaskHost container of the parent Data Flow task.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" /> that represents the TaskHost container of the parent Data Flow task.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Design.IErrorCollectionService">
      <summary>Captures events from data flow components when you need to capture all the errors and warnings raised by the component instead of receiving only the last error or warning.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.IErrorCollectionService.ClearErrors">
      <summary>Clears the error cache.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.IErrorCollectionService.GetErrorMessage">
      <summary>Returns a String that contains a combined error message, which includes the error message, the component, and the subcomponent, for each error.</summary>
      <returns>The error message.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.IErrorCollectionService.GetErrorMessage(System.Boolean)">
      <summary>Returns a String that contains the error message.</summary>
      <returns>When true, a String that contains the error message. When false, a String that contains the error message, component and subcomponent information.</returns>
      <param name="descriptionOnly">A Boolean that indicates whether the error message only is returned, or the error message plus component and subcomponent information.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.IErrorCollectionService.GetErrors">
      <summary>Retrieves the list of errors and stores them in an ICollection.</summary>
      <returns>An ICollection that contains the errors.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.IErrorCollectionService.HasErrors(System.Diagnostics.TraceLevel)">
      <summary>Indicates whether the collection service has errors.</summary>
      <returns>True if the collection service has errors; otherwise, false.</returns>
      <param name="level">The trace level.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Design.LocalizedEnumConverter">
      <summary>Represents the localized enumerator converter.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.LocalizedEnumConverter.#ctor(System.Type,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Design.LocalizedEnumConverter" /> class.</summary>
      <param name="type">The type.</param>
      <param name="valueNamePairs">the value name pairs.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.LocalizedEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the localized enumerator from an object.</summary>
      <returns>The converted object.</returns>
      <param name="context">The context.</param>
      <param name="culture">The culture.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.LocalizedEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the localized enumerator to an object.</summary>
      <returns>The converted object.</returns>
      <param name="context">The context.</param>
      <param name="culture">The culture.</param>
      <param name="value">The value.</param>
      <param name="destinationType">The destination type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Design.LocalizedEnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the standard values.</summary>
      <returns>The standard values.</returns>
      <param name="context">The context.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Pipeline.Design.CustomComponentViewHandlerAttribute">
      <summary>Notifies the data flow designer at design time that the user interface of the component will manage the component viewer by itself.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.CustomComponentViewHandlerAttribute.#ctor">
      <summary>Initializes a new instance of a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Design.CustomComponentViewHandlerAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI">
      <summary>Defines the methods called by SSIS Designer for the user interface of a data flow component.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI.Delete(System.Windows.Forms.IWin32Window)">
      <summary>Called when the component is deleted from the SSIS Designer surface.</summary>
      <param name="parentWindow">The IWin32Window interface of the designer hosting the component.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI.Edit(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.Variables,Microsoft.SqlServer.Dts.Runtime.Connections)">
      <summary>Called when a component is edited.</summary>
      <returns>A value of true specifies that the component has been modified.</returns>
      <param name="parentWindow">The System.Windows.Forms.IWin32Window of the SSIS Designer.</param>
      <param name="variables">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variables" /> collection that is accessible to the data flow task containing the component.</param>
      <param name="connections">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections" /> collection that is accessible to the data flow task containing the component.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI.Help(System.Windows.Forms.IWin32Window)">
      <summary>[Reserved for future use.]</summary>
      <param name="parentWindow">The IWin32Window interface of the designer hosting the component.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI.Initialize(Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData100,System.IServiceProvider)">
      <summary>Called to initialize the user interface of the component.</summary>
      <param name="dtsComponentMetadata">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData100" /> of the component.</param>
      <param name="serviceProvider">The http://go.microsoft.com/fwlink/?LinkId=33994 IServiceProvider  interface provided by the SSIS designer.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI.New(System.Windows.Forms.IWin32Window)">
      <summary>Called when a component is initially added to a Data Flow task.</summary>
      <param name="parentWindow">The System.Windows.Forms.IWin32Window of SSIS Designer.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs">
      <summary>Defines a base class for classes that provide the context of arguments that the SSIS Designer displays in the Connection Manager Editor when creating or editing connection managers. Currently the FILE and MULTIFILE connection manager editors support these parameters.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs" /> class. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs.Empty">
      <summary>An empty <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs" /> object.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs">
      <summary>Provides the context of arguments that the SSIS Designer displays in the File Connection Manager Editor when creating or editing File connection managers.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs" /> class. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs" /> class using a collection of usage types specific to this connection. </summary>
      <param name="supportedUsageTypes">A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType" /> enumerations available to choose from. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs" /> class using a String to specify what file types are valid for this connection.</summary>
      <param name="fileFilter">A file filter restricts the types of files offered in a user interface, such as *.txt.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.#ctor(System.String,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs" /> class, initializing both the file type filter and the usage types. </summary>
      <param name="fileFilter">A file filter restricts the types of files offered in a user interface, such as *.txt.</param>
      <param name="supportedUsageTypes">A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType" /> enumerations available to choose from. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.FileFilter">
      <summary>Gets or sets a pipe-delimited String containing the file types that are valid for the connection.</summary>
      <returns>A String containing the file types that are valid for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.SupportedUsageTypes">
      <summary>Gets or sets a collection containing the available usage types. Valid usage types are defined in <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType" />.</summary>
      <returns>A collection containing the available usage types.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionBaseService">
      <summary>Provides a base service that can be used to create new connection.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionBaseService.CreateConnection(System.String)">
      <summary>Creates a new connection using the specified connection type.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> containing the collection of connections created. An empty collection is returned if an error occurs or if the user cancels the request.</returns>
      <param name="connectionType">The type of connection you want to put in the array.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionBaseService.CreateConnection(System.String,Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs)">
      <summary>Creates a new connection using the specified connection type and argument.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> containing the collection of connections created. An empty collection is returned if an error occurs or if the user cancels the request.</returns>
      <param name="connectionType">The type of connection to create.</param>
      <param name="connectionUIArg">The contextual information of argument regarding the new connection manager.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionBaseService.GetConnections">
      <summary>Retrieves all connection managers in the current package.</summary>
      <returns>A collection of connections.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionBaseService.GetConnectionsOfType(System.String)">
      <summary>Returns all connections of the specified type found in the current package.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> that contains the connections.</returns>
      <param name="connectionType">The type of connection to return.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionBaseService.IsDesignerOnline">
      <summary>Gets a value that indicates whether the designer is working in an online mode.</summary>
      <returns>true if the designer is working in an online mode; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUI">
      <summary>Defines the interface for editing connection managers. This class is inherited by all connection manager user interfaces. It returns the connection manager user interface that is used for editing the connection manager.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUI.Delete(System.Windows.Forms.IWin32Window)">
      <summary>Provides notification for tasks. This method is called before an existing connection manager is removed from the package.</summary>
      <param name="parentWindow">The IWin32Window interface of the designer hosting the task.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUI.Edit(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs)">
      <summary>Edits an existing connection manager.</summary>
      <returns>true if the connection manager was modified.</returns>
      <param name="parentWindow">The IWin32Window interface of the designer hosting the task.</param>
      <param name="connections">The connections available for editing.</param>
      <param name="connectionUIArg">A class that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs" />, such as the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs" /> or <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUI.Initialize(Microsoft.SqlServer.Dts.Runtime.ConnectionManager,System.IServiceProvider)">
      <summary>Initializes the connection manager user interface. This method is called when you need to create connections of a specific type.</summary>
      <param name="connectionManager">The connection manager to initialize.</param>
      <param name="serviceProvider">The object used to get registered services. Defines a mechanism for retrieving services offered by the designer for such activities as monitoring changes to components.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUI.New(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs)">
      <summary>Provides notification to tasks of newly created connection managers. This method is called after a new connection manager is added to the package.</summary>
      <returns>true if a new connection was created.</returns>
      <param name="parentWindow">The IWin32Window interface of the designer hosting the task.</param>
      <param name="connections">The connections collection to add the new connection to, or the connections to show in a drop-down or other control in the user interface.</param>
      <param name="connectionUIArg">A class that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs" />, such as the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs" /> or <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs" />.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUIChangeEvents">
      <summary>Defines the interface for the change events of the connection manager.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUIChangeEvents.AreChangeEventsProperlyHandled">
      <summary>Gets a value that indicates whether the change events are properly handled.</summary>
      <returns>true if the change events are properly handled; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService">
      <summary>Provides a service that can be used by various user interfaces to create new connections. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.AddConnectionToPackage(Microsoft.SqlServer.Dts.Runtime.ConnectionManager)">
      <summary>Adds existing connections to a package designer so that the designer is aware of a new connection manager</summary>
      <returns>true if the connection is not null, false otherwise.</returns>
      <param name="connectionManager">The connect manager to register in the package designer.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.CreateConnectionFromDataSource">
      <summary>Displays a list of existing data sources and allows users to create connection managers based on data sources.</summary>
      <returns>An ArrayList that contains the collection of the connections created. An empty collection is returned if an error occurs, or if the user cancels the request.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.EditConnection(Microsoft.SqlServer.Dts.Runtime.ConnectionManager)">
      <summary>Edits a specific existing connection and returns a value that indicates whether the connection was modified.</summary>
      <returns>true if the connection was modified.</returns>
      <param name="connectionManager">The connection manager to edit.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.EditConnection(Microsoft.SqlServer.Dts.Runtime.ConnectionManager,Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs)">
      <summary>Edits a specific existing connection and returns a value to indicate whether the connection was modified.</summary>
      <returns>true if the connection was modified.</returns>
      <param name="connectionManager">The connection manager to edit.</param>
      <param name="connectionUIArg">The context argument. For FILE connection managers, this argument is of type <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs" />. For MULTIFILE connection managers, this argument is of type <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.GetAMOObject(Microsoft.SqlServer.Dts.Runtime.ConnectionManager)">
      <summary>Retrieves the AMO object for an OLAP connection.</summary>
      <returns>An AMO object.</returns>
      <param name="connectionManager">A connection manager for the OLAP connection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.GetDataSource(Microsoft.SqlServer.Dts.Runtime.ConnectionManager)">
      <summary>Retrieves the DataSource object for a connection.</summary>
      <returns>An object that contains the DataSource of the connection.</returns>
      <param name="connectionManager">The connection manager that you want the data source for.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.SetDataSourceID(Microsoft.SqlServer.Dts.Runtime.ConnectionManager,System.String)">
      <summary>Allows the connection string for a run-time connection manager to be in synchronization with the connection string of a Data Source object, if both are in the same project. This synchronization is done whenever a package is opened in the designer.</summary>
      <param name="connectionManager">The connection manager that contains the reference to the <paramref name="dataSourceID" />.</param>
      <param name="dataSourceId">The GUID of the data source or data source view.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.SetReferencedProject(Microsoft.SqlServer.Dts.Runtime.ConnectionManager,System.String)">
      <summary>Sets the referenced project to a connection manager.</summary>
      <param name="connectionManager">The connection manager to assign.</param>
      <param name="projectUniqueName">The unique name of the project.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI">
      <summary>Defines the collection of methods and properties called by the SSIS Designer to initialize and display the user interface associated with log providers.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.Edit(System.Windows.Forms.IWin32Window)">
      <summary>Opens a user interface to edit a task.</summary>
      <returns>true indicates that the task properties were modified.</returns>
      <param name="parentWindow">The IWin32Window interface of the designer hosting the task.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.GetEnumerableValues">
      <summary>Returns an ArrayList of all the connection managers.</summary>
      <returns>An ArrayList.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.Initialize(Microsoft.SqlServer.Dts.Runtime.LogProvider,Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.Variables,System.IServiceProvider)">
      <summary>Initializes the log provider user interface.</summary>
      <param name="logProvider">The log provider being used.</param>
      <param name="connections">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections" /> collection for the package.</param>
      <param name="variables">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variables" /> collection for the package.</param>
      <param name="serviceProvider">The object used to get registered services. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.IsEditable">
      <summary>Indicates whether the <see cref="P:Microsoft.SqlServer.Dts.Runtime.LogProvider.ConfigString" /> property on the log provider is editable. </summary>
      <returns>true if the <see cref="P:Microsoft.SqlServer.Dts.Runtime.LogProvider.ConfigString" /> property on the log provider is editable.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.IsEnumerable">
      <summary>Indicates whether the user interface is modal or enumerable.</summary>
      <returns>true indicates enumerable; false if modal.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.SetValue(System.String,System.Int32)">
      <summary>Allows the user interface to do special handling for the &lt;New Connection...&gt; user interface.</summary>
      <param name="configString">The configuration string to use for the log provider. </param>
      <param name="index">The index in the ArrayList returned from <see cref="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.GetEnumerableValues" /> pointing to the log entry to be modified.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsMultiTaskUI">
      <summary>Represents the DTS multi task UI.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsMultiTaskUI.Delete(Microsoft.SqlServer.Dts.Runtime.TaskHost,System.Windows.Forms.IWin32Window)">
      <summary>Removes the specified object from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsMultiTaskUI" /> object.</summary>
      <param name="taskHost">The task host.</param>
      <param name="parentWindow">The parent window.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsMultiTaskUI.GetView">
      <summary>Returns the multi task view of the specified object.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ContainerControl" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsMultiTaskUI.Initialize(Microsoft.SqlServer.Dts.Runtime.TaskHost[],System.IServiceProvider)">
      <summary>Initializes the current instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsMultiTaskUI" /> class with the specified service provider and task hosts.</summary>
      <param name="taskHosts">The task hosts.</param>
      <param name="serviceProvider">The service provider.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsMultiTaskUI.New(Microsoft.SqlServer.Dts.Runtime.TaskHost,System.Windows.Forms.IWin32Window)">
      <summary>Creates a new instance from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsMultiTaskUI" /> class with the specified task host and parent window.</summary>
      <param name="taskHost">The task host.</param>
      <param name="parentWindow">The parent window.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsTaskUI">
      <summary>Defines the collection of methods and properties called by the SSIS Designer to initialize and display the user interface associated with a task.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsTaskUI.Delete(System.Windows.Forms.IWin32Window)">
      <summary>Deletes an existing task from the package.</summary>
      <param name="parentWindow">The name of the parent window.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsTaskUI.GetView">
      <summary>Retrieves the user interface to show. This method is called by the client.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsTaskUI.Initialize(Microsoft.SqlServer.Dts.Runtime.TaskHost,System.IServiceProvider)">
      <summary>Associates a user interface with its task. Called by the client, which is usually the designer application.</summary>
      <param name="taskHost">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" /> of the task.</param>
      <param name="serviceProvider">The http://go.microsoft.com/fwlink/?LinkId=33994 IServiceProvider  interface provided by the designer.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsTaskUI.New(System.Windows.Forms.IWin32Window)">
      <summary>Adds a new task to a package.</summary>
      <param name="parentWindow">The name of the parent window.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsVariableService">
      <summary>Accesses existing variables or creates new variables in a package.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsVariableService.PromptAndCreateVariable(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.DtsContainer)">
      <summary>Prompts for and then creates a new variable.</summary>
      <returns>A new <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable" /> instance.</returns>
      <param name="parentWindow">The <see cref="T:System.Windows.Forms.IWin32Window" /> of the designer.</param>
      <param name="dtsContainer">The default container that the variable belongs to.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsVariableService.PromptAndCreateVariable(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.DtsContainer,System.String)">
      <summary>Prompts for and then creates a variable for a specified window and container. This method is a helper method for working with variables in a user interface.</summary>
      <returns>A new <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable" /> instance.</returns>
      <param name="parentWindow">The <see cref="T:System.Windows.Forms.IWin32Window" /> of the designer.</param>
      <param name="dtsContainer">The default container that the variable belongs to.</param>
      <param name="defaultName">The default name of the variable.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsVariableService.PromptAndCreateVariable(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.DtsContainer,System.String,System.String,System.Type)">
      <summary>Prompts for and creates a variable for the specified window, container, and namespace. This method is a helper method for working with variables in a user interface.</summary>
      <returns>A new <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable" /> instance.</returns>
      <param name="parentWindow">The <see cref="T:System.Windows.Forms.IWin32Window" /> of the designer.</param>
      <param name="dtsContainer">The default container that the variable belongs to.</param>
      <param name="defaultName">The default name of the variable.</param>
      <param name="defaultNamespace">The default namespace that the variable will belong in.</param>
      <param name="defaultType">The default type of the variable.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs">
      <summary>Provides the context of arguments that the SSIS Designer displays in the Multifile Connection Manager Editor when creating or editing File connection managers that can reference multiple files.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs" /> class. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs" /> class, using a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType" /> usage types specific to this connection. </summary>
      <param name="supportedUsageTypes">A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType" /> enumerations available to choose from. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs" /> class using a String to specify what file types are valid for this connection.</summary>
      <param name="fileFilter">A file filter restricts the types of files offered in a user interface, such as *.txt.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs.#ctor(System.String,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs" /> class, initializing both the file type filter and the usage types.</summary>
      <param name="fileFilter">A file filter restricts the types of files offered in a user interface, such as *.txt.</param>
      <param name="supportedUsageTypes">A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType" /> enumerations for usage types. </param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint">
      <summary>Provides information about how expensive it is to recreate the user interface for a task. The lifetime hint enumeration is used as an attribute on a task.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint.RecreationExpensive">
      <summary>Recreating the user interface is expensive.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint.RecreationInexpensive">
      <summary>Recreating the user interface is not expensive.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHintAttribute">
      <summary>Defines a task lifetime attribute that specifies how expensive a user interface is to re-create.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHintAttribute.#ctor(Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHintAttribute" /> class. </summary>
      <param name="taskUILifetimeHint">A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint" /> enumeration that describes how expensive this user interface is to re-create. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHintAttribute.TaskUILifetimeHint">
      <summary>Provides an estimate, stored as a lifetime hint, about how expensive it is to re-create a user interface. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint" /> enumeration, with valid values of <paramref name="RecreationExpensive" /> and <paramref name="RecreationInexpensive" />.</returns>
    </member>
  </members>
</doc>