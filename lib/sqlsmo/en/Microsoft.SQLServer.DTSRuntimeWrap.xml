<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.SqlServer.DTSRuntimeWrap</name>
  </assembly>
  <members>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper._FILETIME">
      <summary>Specifies the file time for the runtime.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper._FILETIME.dwHighDateTime">
      <summary>The high date time.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper._FILETIME.dwLowDateTime">
      <summary>The low date time.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper._LARGE_INTEGER">
      <summary>Specifies the large integer for the runtime wrapper.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper._LARGE_INTEGER.QuadPart">
      <summary>The quad part.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER">
      <summary>Provides a 64-bit data type which is accessible as two DWORDs or as a single DWORDLONG. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER.QuadPart">
      <summary>Specifies the 64-bit unsigned integer.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Application">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass">
      <summary>Discovers and accesses Package objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.CheckSignatureOnLoad">
      <summary>Gets or sets a value that indicates whether the runtime should check the digital signature of the package when loading the package.</summary>
      <returns>true if the runtime checks the digital signature when loading a package; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.CloseProject(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100)">
      <summary>Closes a specified project.</summary>
      <param name="pProject">The project to be closed.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.ComponentStorePath">
      <summary>Returns the path where pipeline components are stored. This property is read-only.</summary>
      <returns>The location of the pipeline components.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.ConnectionInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" /> objects.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.CreateFolderOnDtsServer(System.String,System.String,System.String)">
      <summary>Creates a folder on the server that appears in the Stored Packages node of the Integration Services service hierarchy.</summary>
      <param name="bstrParent">The name of the top level folder to save this folder under.</param>
      <param name="bstrNewFolderName">The name to give the newly created folder.</param>
      <param name="bstrServerName">The name of the server running the Integration Services service.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.CreateFolderOnSQLServer(System.String,System.String,System.String,System.String,System.String)">
      <summary>Creates a folder on the specified instance of SQL Server.</summary>
      <param name="bstrParent">The name of the parent folder.</param>
      <param name="bstrNewFolderName">The name of the folder to create.</param>
      <param name="bstrServerName">The name of the instance of SQL Server.</param>
      <param name="bstrServerUserName">The user name to use when authenticating on the server.</param>
      <param name="bstrServerPassword">The password associated with the <paramref name="bstrServerUserName" /> account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.CreateSsisServerExecution(System.String,System.String,System.String,System.Boolean)">
      <summary>Creates SSIS server execution.</summary>
      <returns>The created SSIS server.</returns>
      <param name="bstrServerName">The server name.</param>
      <param name="bstrPackagePath">The path for the package.</param>
      <param name="bstrReferenceId">The reference identifier.</param>
      <param name="bUse32BitRuntime">true to indicate that the 32-bit runtime is used to run the package on a 64-bit operating system; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.DataTypeInfoFromDataType(Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType)">
      <summary>Returns the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" /> object for the specified data type.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" /> object.</returns>
      <param name="dt">The data type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.DataTypeInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfos" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfos" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" /> objects.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.DBProviderInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfos" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" /> objects in the application. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfos" /> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" /> objects for the application.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.ExistsOnDtsServer(System.String,System.String)">
      <summary>Returns a Boolean that indicates whether the specified package already exists on the Integration Services service.</summary>
      <returns>true if the package specified by <paramref name="bstrPackagePath" /> exists on the server named by <paramref name="bstrServerName" />; otherwise, false.</returns>
      <param name="bstrPackagePath">The fully qualified path of the package.</param>
      <param name="bstrServerName">The name of the server to search for the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.ExistsOnSQLServer(System.String,System.String,System.String,System.String)">
      <summary>Indicates whether the specified package exists on the instance of SQL Server.</summary>
      <returns>true if the package exists on the specified instance of SQL Server. false if the package does not exist</returns>
      <param name="bstrPackagePath">The package you are looking for.</param>
      <param name="bstrServerName">The name of the instance of SQL Server to search for the package.</param>
      <param name="bstrServerUserName">The user name to authenticate against the instance of SQL Server.</param>
      <param name="bstrServerPassword">The password for the specified <paramref name="bstrServerUserName" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.FolderExistsOnDtsServer(System.String,System.String)">
      <summary>Indicates whether the specified folder already exists on the file system.</summary>
      <returns>true if the folder specified exists on the server; false if the folder does not exist.</returns>
      <param name="bstrFolderName">The name of the folder.</param>
      <param name="bstrServerName">The name of the server to search for the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.FolderExistsOnSQLServer(System.String,System.String,System.String,System.String)">
      <summary>Indicates whether the specified folder already exists on the instance of SQL Server.</summary>
      <returns>true if the folder exists on the specified instance of SQL Server; false if the folder does not exist.</returns>
      <param name="bstrFolderName">The name of the folder.</param>
      <param name="bstrServerName">The name of the instance of SQL Server to search for the package.</param>
      <param name="bstrServerUserName">The user name to authenticate against the instance of SQL Server.</param>
      <param name="bstrServerPassword">The password for the given <paramref name="bstrServerUserName" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.FolderFromPath(System.String,System.String,System.String,System.String)">
      <summary>Returns a folder from a specified path.</summary>
      <returns>A folder from a specified path.</returns>
      <param name="bstrFolderName">The name of the folder.</param>
      <param name="bstrServerName">The name of the instance of SQL Server to search for the package.</param>
      <param name="bstrServerUserName">The user name to authenticate against the instance of SQL Server.</param>
      <param name="bstrServerPassword">The password for the given <paramref name="bstrServerUserName" />.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.ForEachEnumeratorInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfos" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfos" /> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" /> objects in the application.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetDtsServerPackageInfos(System.String,System.String)">
      <summary>Gets a PackageInfos collection that contains the packages stored in the SSIS Package Store on an instance of SQL Server, within the specified folder.</summary>
      <returns>A PackageInfos collection that contains PackageInfo objects.</returns>
      <param name="bstrPackageFolder">The folder under Stored Packages that contains the packages.</param>
      <param name="bstrServerName">The name of the SQL Server instance where the packages reside.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetDtsServerRoles(System.String,System.String)">
      <summary>Returns an array of Strings that lists the roles available for a folder.</summary>
      <returns>An array of Strings, each string containing a role name.</returns>
      <param name="bstrFolderPath">The folder whose roles you are interested in.</param>
      <param name="bstrServerName">The name of the instance that is running the Integration Services service.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetPackageInfos(System.String,System.String,System.String,System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos" /> collection that contains the packages stored in an instance of SQL Server, within the specified logical folder, by using the server name, user name, and password.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos" /> collection.</returns>
      <param name="bstrPackageFolder">The logical folder that contains the packages.</param>
      <param name="bstrServerName">The name of the SQL Server instance where the packages reside.</param>
      <param name="bstrServerUserName">The account name used to log on to the instance of SQL Server.</param>
      <param name="bstrServerPassword">The password of the user account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetPackageInfos2(System.String,System.Object)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos" /> collection that contains the packages stored in an instance of SQL Server, within the specified logical folder, by using the server name, user name, and password.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos" /> collection.</returns>
      <param name="bstrPackageFolder">The logical folder that contains the packages</param>
      <param name="vConnectionObject">The connection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetPackageRoles(System.String,System.String,System.String@,System.String@)">
      <summary>Returns the database roles that have read access and write access to the package.</summary>
      <param name="bstrServerName">Specifies the name and instance of the server that contains the package.</param>
      <param name="bstrPackagePath">Specifies the name of the package.</param>
      <param name="pbstrReaderRole">When this method returns, contains the roles with read access. This parameter is passed uninitialized.</param>
      <param name="pbstrWriterRole">When this method returns, contains the roles with write access. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetRunningPackages(System.String)">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackages" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" /> objects.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackages" /> collection that contains the <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" /> objects that represent all the packages that are currently executing on the computer.</returns>
      <param name="bstrMachineName">The instance of SQL Server that the application is running on</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetServerInfo(System.String,System.String@)">
      <summary>Returns the SQL Server version number of the SQL Server product installed on the target server.</summary>
      <param name="bstrMachineName">The name of the server hardware to check for the SQL Server product version.</param>
      <param name="serverVersion">When this method returns, contains the version number of the SQL Server product. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetServerVersionEx(System.String,System.UInt32@,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel@,System.String@,System.String@)">
      <summary>Returns the edition, product level, and other values that indicate the version of SSIS installed.</summary>
      <param name="bstrServerName">The name of the server to get the product version information from.</param>
      <param name="pdwEditionID">When this method returns, contains an integer that indicates the edition of the product. This parameter is passed uninitialized.</param>
      <param name="peSsisEditionID">When this method returns, contains one of the values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel" /> enumeration. This parameter is passed uninitialized.</param>
      <param name="pbstrProductVersion">When this method returns, contains the build number. This parameter is passed uninitialized.</param>
      <param name="pbstrProductLevel">When this method returns, contains the service pack level of the SSIS server. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.LoadFromDtsServer(System.String,System.String,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package from the specified server.</summary>
      <returns>The package that was loaded.</returns>
      <param name="bstrPackagePath">The fully qualified path of the package.</param>
      <param name="bstrServerName">The server where the package is stored.</param>
      <param name="bLoadNeutral">true to load the package as neutral threaded. false to load the package as apartment threaded.</param>
      <param name="pEvents">An IDTSEvents interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.LoadFromSQLServer(System.String,System.String,System.String,System.String,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package from SQL Server by specifying the server name, user name, and password.</summary>
      <returns>The package that was loaded.</returns>
      <param name="bstrPackagePath">The name and path of the package to load.</param>
      <param name="bstrServerName">The name of the instance of SQL Server that the package is loaded from.</param>
      <param name="bstrServerUserName">The account name used to log on to the server.</param>
      <param name="bstrServerPassword">The password of the account.</param>
      <param name="bLoadNeutral">true to load the package as neutral threaded. false to load the package as apartment threaded.</param>
      <param name="pEvents">An IDTSEvents interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.LoadFromSQLServer2(System.String,System.Object,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package from SQL Server.</summary>
      <returns>The package that was loaded.</returns>
      <param name="bstrPackagePath">The name and path of the package to load.</param>
      <param name="vConnectionObject">The connection object.</param>
      <param name="bLoadNeutral">true to load the package as neutral threaded. false to load the package as apartment threaded.</param>
      <param name="pEvents">An IDTSEvents interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.LoadPackage(System.String,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package from the file system, and specifies the threading model.</summary>
      <returns>The package that was loaded.</returns>
      <param name="FileName">The name of the file that contains the package to load.</param>
      <param name="loadNeutral">true to load the package as neutral threaded. false to load the package as apartment threaded.</param>
      <param name="pEvents">An IDTSEvents interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.LogProviderInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfos" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfos" /> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" /> objects for the application.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.OpenProject(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Opens a package from the file system</summary>
      <returns>The opened project.</returns>
      <param name="bstrProjectFileName">The project file name.</param>
      <param name="pEvents">An IDTSEvents interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.PackagePassword">
      <summary>Sets the value of the password for the package. This property is write-only.</summary>
      <returns>The password for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.PackageUpgradeOptions">
      <summary>Gets or sets a value that indicates which upgrade options will be applied to a collection of Integration Services packages during the upgrade process.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageUpgradeOptions" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.PipelineComponentInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfos" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" /> objects.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfos" /> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" /> objects for the application.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.ProjectPassword">
      <summary>Sets the value of the project password for the package.</summary>
      <returns>The value of the project password for the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RemoveFolderFromDtsServer(System.String,System.String)">
      <summary>Removes the specified folder from the specified server.</summary>
      <param name="bstrFolderName">The name of the folder to remove.</param>
      <param name="bstrServerName">The name of the server where the folder is located.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RemoveFolderFromSQLServer(System.String,System.String,System.String,System.String)">
      <summary>Removes the specified folder from the specified instance of SQL Server.</summary>
      <param name="bstrFolderName">The name of the folder to delete</param>
      <param name="bstrServerName">The name of the instance of SQL Server to remove the folder from.</param>
      <param name="bstrServerUserName">The user name to authenticate against the instance of SQL Server.</param>
      <param name="bstrServerPassword">The password for the specified <paramref name="bstrServerUserName" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RemoveFromDtsServer(System.String,System.String)">
      <summary>Removes a package from the specified server.</summary>
      <param name="bstrPackagePath">The fully qualified path of the package.</param>
      <param name="bstrServerName">The name of the server where the package is located.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RemoveFromSQLServer(System.String,System.String,System.String,System.String)">
      <summary>Removes a package from the specified instance of SQL Server.</summary>
      <param name="bstrPackagePath">The name of the package to remove.</param>
      <param name="bstrServerName">The name of the instance of SQL Server.</param>
      <param name="bstrServerUserName">The user name to use when authenticating against the server.</param>
      <param name="bstrServerPassword">The password associated with the <paramref name="bstrServerUserName" /> account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RenameFolderOnDtsServer(System.String,System.String,System.String,System.String)">
      <summary>Renames a folder on the specified instance of SQL Server.</summary>
      <param name="bstrParent">The name of the parent folder.</param>
      <param name="bstrOldName">The name of the existing folder.</param>
      <param name="bstrNewName">The new name of the folder.</param>
      <param name="bstrServerName">The name of the server where the folder is located.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RenameFolderOnSQLServer(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Renames a folder on the specified instance of SQL Server.</summary>
      <param name="bstrParent">The name of the parent folder.</param>
      <param name="bstrOldName">The name of the existing folder.</param>
      <param name="bstrNewName">The new name of the folder.</param>
      <param name="bstrServerName">The name of the instance of SQL Server.</param>
      <param name="bstrServerUserName">The user name to use when authenticating on the server.</param>
      <param name="bstrServerPassword">The password associated with the <paramref name="bstrServerUserName" /> account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SavePackage(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the package.</summary>
      <param name="bstrFileName">The file name.</param>
      <param name="pPackage">The package to save.</param>
      <param name="pEvents">An IDTSEvents object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SaveToDtsServer(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,System.String,System.String)">
      <summary>Saves a package to the file system</summary>
      <param name="pPackage">The package to save.</param>
      <param name="pEvents">An IDTSEvents object.</param>
      <param name="bstrPackagePath">The name to give the package when saved.</param>
      <param name="bstrServerName">The name of the server to save the package to.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SaveToSQLServer(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,System.String,System.String,System.String)">
      <summary>Saves a package to an instance of SQL Server.</summary>
      <param name="Package">The package to save.</param>
      <param name="pEvents">An IDTSEvents object.</param>
      <param name="ServerName">The name of the instance of SQL Server to save the package to.</param>
      <param name="ServerUserName">The user name used to log on to the server.</param>
      <param name="ServerPassword">The password for the user account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SaveToSQLServerAs(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,System.String,System.String,System.String,System.String)">
      <summary>Saves a package to an instance of SQL Server with a new name.</summary>
      <param name="pPackage">The package to save.</param>
      <param name="pEvents">An IDTSEvents object.</param>
      <param name="bstrPackagePath">The path and new name to assign to the package.</param>
      <param name="bstrServerName">The name of the instance of SQL Server.</param>
      <param name="bstrServerUserName">The name of the account used to log on to the instance of SQL Server.</param>
      <param name="bstrServerPassword">The password of the user account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SaveToXML(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the XML definition of a package to a file</summary>
      <param name="FileName">The name of the file to save.</param>
      <param name="pPersistObj">The package object to save.</param>
      <param name="pEvents">An IDTSEvents object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SetPackageRoles(System.String,System.String,System.String,System.String)">
      <summary>Sets the database roles that have read access and write access to the package.</summary>
      <param name="bstrServerName">Specifies the name and instance of the server that contains the package.</param>
      <param name="bstrPackagePath">Specifies the name of the package.</param>
      <param name="bstrReaderRole">Specifies a role to have read access.</param>
      <param name="bstrWriterRole">Specifies a role to have write access.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.TaskInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfos" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfos" /> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" /> objects in the application.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.UpdateObjects">
      <summary>Gets or sets a Boolean that indicates whether extensible objects can be updated at package load time if an updated version is found.</summary>
      <returns>true if extensible objects can be updated at package load time when an updated version is found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.UpdatePackage">
      <summary>Gets or sets a Boolean that indicates whether packages can be updated when an updated version is found.</summary>
      <returns>true if packages can be updated when an updated version is found; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdo">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass">
      <summary>Provides the connection information to a data source.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An instance of the connection type.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>The connection string value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.GetConnectionForSchema">
      <summary>Returns the connection for the schema.</summary>
      <returns>An instance of the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.InitialCatalog">
      <summary>Gets or sets the value of the initial catalog.</summary>
      <returns>The value of the initial catalog.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.Password">
      <summary>Sets the connection password.</summary>
      <returns>The connection password.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>The level of encryption performed on sensitive data that is contained in the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during AcquireConnection. Called at design time and runtime.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.RetainSameConnection">
      <summary>Gets or sets whether the connection retains the same connection.</summary>
      <returns>True if the connection retains the same connection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.Scope">
      <summary>Gets the scope of the connection manager.</summary>
      <returns>The scope of the connection manager.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.ServerName">
      <summary>Gets or sets the name of the server.</summary>
      <returns>The name of the server.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.SupportsDTCTransactions">
      <summary>Returns a Boolean that indicates if the connection supports Microsoft Distributed Transaction Coordinator (MS DTC) transactions.</summary>
      <returns>True if the connection supports Microsoft Distributed Transaction Coordinator (MS DTC) transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.UserName">
      <summary>Gets or sets the username for the connection.</summary>
      <returns>The username for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection.</summary>
      <returns>The validated object.</returns>
      <param name="pEvents">The IDTSInfoEvents100 object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNet">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass">
      <summary>Represents a connection manager that utilizes .Net provider for the data connection.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>A String that contains the connection string value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.GetConnectionForSchema">
      <summary>Gets the connection for the schema.</summary>
      <returns>The connection for the schema.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.InitialCatalog">
      <summary>Gets or sets the initial catalog for the connection.</summary>
      <returns>The initial catalog for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.InitializeConnectionManager(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Initializes the properties of the connection manager instance using the given parameters.</summary>
      <param name="bstrQualifier">The qualifier to set on the connection manager.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
      <param name="pLog">The object that implements the logging session.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.Password">
      <summary>Gets or sets the password for the connection.</summary>
      <returns>The password for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.AcquireConnection(System.Object)" />. Called at design time and runtime.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.RetainSameConnection">
      <summary>Gets or sets a Boolean that indicates whether the connection manager retains the same connection.</summary>
      <returns>true if the connection manager retains the same connection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.Scope">
      <summary>Gets the scope of the connection manager.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.ServerName">
      <summary>Gets or sets the server name.</summary>
      <returns>The server name.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.SupportsDTCTransactions">
      <summary>Gets a Boolean that indicates whether the connection supports Microsoft Distributed Transaction Coordinator (MS DTC) transactions.</summary>
      <returns>true if the connection supports MS DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.UserName">
      <summary>Gets or sets the username for the connection.</summary>
      <returns>The username for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCache">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass">
      <summary>Represents a connection manager that utilizes a Cache Transform or a cache file for the data connection.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.Columns">
      <summary>Gets or sets the columns in the cache.</summary>
      <returns>The columns in the cache.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>A String that contains the connection string value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.GetFileColumns(System.String)">
      <summary>Reads and returns the columns from the specified cache file.</summary>
      <returns>The columns from the specified cache file.</returns>
      <param name="bstrFileName">The name of the cache file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.AcquireConnection(System.Object)" />. Called at design time and runtime.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.RetainData">
      <summary>Gets or sets a Boolean that indicates whether the connection manager retains the data in the cache.</summary>
      <returns>true if the connection manager retains the data in the cache; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.Scope">
      <summary>Gets the scope of the connection manager.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.SupportsDTCTransactions">
      <summary>Gets a Boolean that indicates whether the connection supports Microsoft Distributed Transaction Coordinator (MS DTC) transactions.</summary>
      <returns>true if the connection supports MS DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.UseEncryption">
      <summary>Gets or sets a Boolean that indicates whether to use encryption.</summary>
      <returns>true if connection manager uses encryption; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.UseFile">
      <summary>Gets or sets a Boolean that indicates whether the connection manager uses a cache file.</summary>
      <returns>true if the connection manager uses a cache file; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerCacheClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcel">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass">
      <summary>Represents a connection manager that connects to an Excel workbook file.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>A String that contains the connection string value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.ExcelFilePath">
      <summary>Gets or sets the path of the Excel workbook file.</summary>
      <returns>The path of the Excel workbook file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.ExcelVersionNumber">
      <summary>Gets or sets the version of Excel that was used to create the file.</summary>
      <returns>The version of Excel that was used to create the file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.FirstRowHasColumnName">
      <summary>Gets or sets a Boolean that indicates whether the first contains the column name.</summary>
      <returns>true if the first row contains the column name; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.GetConnectionForSchema">
      <summary>Gets the connection for the schema.</summary>
      <returns>The connection for the schema.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.InitialCatalog">
      <summary>Gets or sets the initial catalog for the connection.</summary>
      <returns>The initial catalog for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.Password">
      <summary>Gets or sets the password for the connection.</summary>
      <returns>The password for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.AcquireConnection(System.Object)" />. Called at design time and runtime.</summary>
      <param name="varConnection">The variable connection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.RetainSameConnection">
      <summary>Gets or sets a Boolean that indicates whether the connection manager retains the same connection.</summary>
      <returns>true if the connection manager retains the same connection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.Scope">
      <summary>Gets the scope of the connection manager.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.ServerName">
      <summary>Gets or sets the server name.</summary>
      <returns>The server name.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.SupportsDTCTransactions">
      <summary>Gets a Boolean that indicates whether the connection supports Microsoft Distributed Transaction Coordinator (MS DTC) transactions.</summary>
      <returns>true if the connection supports MS DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.UserName">
      <summary>Gets or sets the username for the connection.</summary>
      <returns>The username for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass">
      <summary>Represents a connection manager class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>The connection string used to establish a connection to a data source.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.FileUsageType">
      <summary>Gets or sets the file connection usage type.</summary>
      <returns>The file connection usage type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.AcquireConnection(System.Object)" />.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.Scope">
      <summary>Gets or sets the scope for the connection.</summary>
      <returns>The scope for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.SupportsDTCTransactions">
      <summary>Gets a value that indicates whether the connection supports DTC transactions.</summary>
      <returns>true if the connection supports DTC transactions; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass">
      <summary>Represents a connection manager flat file class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.AlwaysCheckForRowDelimiters">
      <summary>Gets or sets a value that indicates whether the connection always check for row delimiters.</summary>
      <returns>true if the connection always check for row delimiters; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.CodePage">
      <summary>Gets or sets the code page for the connection.</summary>
      <returns>The code page for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.ColumnNamesInFirstDataRow">
      <summary>Gets or sets a value that indicates whether the column names is in first row.</summary>
      <returns>true if the column names is in first row; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.Columns">
      <summary>Gets the collection of columns from the connection.</summary>
      <returns>The collection of columns from the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>The connection string used to establish a connection to a data source.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.DataRowsToSkip">
      <summary>Gets or sets the data rows to skip from the connection.</summary>
      <returns>The data rows to skip from the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.FileUsageType">
      <summary>Gets or sets the file connection usage type.</summary>
      <returns>The file connection usage type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.Format">
      <summary>Gets or sets the connection format.</summary>
      <returns>The connection format.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.HeaderRowDelimiter">
      <summary>Gets or sets the header row delimiter.</summary>
      <returns>The header row delimiter.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.HeaderRowsToSkip">
      <summary>Gets or sets the header rows to skip from the connection.</summary>
      <returns>The header rows to skip from the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.LocaleID">
      <summary>Gets or sets the locale identifier of the connection.</summary>
      <returns>The locale identifier of the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.AcquireConnection(System.Object)" />.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.RowDelimiter">
      <summary>Gets or sets the row delimiter.</summary>
      <returns>The row delimiter.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.Scope">
      <summary>Gets or sets the scope for the connection.</summary>
      <returns>The scope for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.SupportsDTCTransactions">
      <summary>Gets a value that indicates whether the connection supports DTC transactions.</summary>
      <returns>true if the connection supports DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.TextQualifier">
      <summary>Gets or sets the text qualifier of the current instance.</summary>
      <returns>The text qualifier of the current instance.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.Unicode">
      <summary>Gets or sets a value that indicates whether the connection supports Unicode functionality.</summary>
      <returns>true if the connection supports Unicode functionality; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtp">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" />. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass">
      <summary>Represents a connection manager FTP class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>The transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.ChunkSize">
      <summary>Gets or sets the minimum number of bytes to retrieve or send.</summary>
      <returns>The minimum number of bytes to retrieve or send.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>The connection string used to establish a connection to a data source.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>The level of encryption performed on sensitive data that is contained in the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.ReleaseConnection(System.Object)">
      <summary>Releases the connection.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.Retries">
      <summary>Gets or sets the number of times the task attempts an operation.</summary>
      <returns>The number of times the task attempts an operation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.Scope">
      <summary>Gets or sets the scope of the connection.</summary>
      <returns>The scope of the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.ServerName">
      <summary>Gets or sets the name of the FTP server.</summary>
      <returns>The name of the FTP server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.ServerPassword">
      <summary>Sets the password for the server specified in the server name.</summary>
      <returns>The password for the server specified in the server name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.ServerPort">
      <summary>Gets or sets the port number on the server.</summary>
      <returns>The server port number.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.ServerUserName">
      <summary>Gets or sets the logon alias of the user.</summary>
      <returns>The logon alias of the user.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.SetQualifier(System.String)">
      <summary>Sets a qualifier on the connection manager.</summary>
      <param name="bstrQualifier">The qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.SupportsDTCTransactions">
      <summary>Gets a value that indicates whether the connection supports DTC transactions.</summary>
      <returns>true if the connection supports DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.Timeout">
      <summary>Gets or sets a value that indicates how long to attempt the connection before timing out.</summary>
      <returns>A value that indicates how long to attempt the connection before timing out.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.UsePassiveMode">
      <summary>Gets or sets a value that indicates whether the task sends and receives files in passive mode.</summary>
      <returns>true if the task sends and receives files in passive mode; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates a configuration.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHost">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass" />. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass">
      <summary>Represents a connection manager that connects to a task host.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>A String that contains the connection string value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.CreationName">
      <summary>Gets the string that is used by the runtime to create an instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass" /> object. This property is read-only.</summary>
      <returns>A String that contains the connection manager name. The name may be the fully qualified assembly name (for managed assemblies), it may be the ProgID or CLSID (for COM DLLs), or it may be one of the STOCK monikers used to create the connection manager for a file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.DelayValidation">
      <summary>Gets or sets a Boolean that indicates whether package validation is delayed until the package runs.</summary>
      <returns>true if validation is delayed until package run time; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.Description">
      <summary>Gets or sets the description of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass" /> object.</summary>
      <returns>A String that contains the description given to the connection manager.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.HostType">
      <summary>Gets an enumeration that describes the type of host that the connection is being used by. This property is read-only.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.ID">
      <summary>Gets the ID of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass" />. This property is read-only.</summary>
      <returns>A String that contains the connection manager GUID.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.InnerObject">
      <summary>Gets the specific connection type that was created. This property is read-only.</summary>
      <returns>The object that contains the hosted item.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass" /> object.</summary>
      <returns>A String that contains the name that you gave to the connection manager object when it was created.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.AcquireConnection(System.Object)" />. Called at design time and runtime.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.Scope">
      <summary>Gets the scope of the connection manager.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.SupportsDTCTransactions">
      <summary>Returns a Boolean that indicates if the connection supports Microsoft Distributed Transaction Coordinator (MS DTC) transactions.</summary>
      <returns>true if the connection supports MS DTC transactions; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttp">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass" />. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass">
      <summary>Represents a connection manager http class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.Certificate">
      <summary>Gets or sets the certificate to use for the connection.</summary>
      <returns>The certificate to use for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.CertificateIdentifier">
      <summary>Gets or sets the certificate identifier.</summary>
      <returns>The certificate identifier.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ChunkSize">
      <summary>Gets or sets the value that indicates the minimum number of bytes to retrieve from or send to the server during a read/write operation.</summary>
      <returns>The minimum number of bytes to retrieve or send.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>The connection string used to establish a connection to a data source.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProxyBypassList">
      <summary>Gets or sets the addresses that do not use a proxy server.</summary>
      <returns>The addresses that do not use a proxy server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProxyDomain">
      <summary>Gets or sets the domain setting that is used to log on to the proxy.</summary>
      <returns>The domain setting that is used to log on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProxyPassword">
      <summary>Sets the password used to log on to the proxy.</summary>
      <returns>The password used to log on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProxyURL">
      <summary>Gets or sets the URL that specifies the location of the connection.</summary>
      <returns>The URL that specifies the location of the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ProxyUserName">
      <summary>Gets or sets the username that is used when logging on to the proxy.</summary>
      <returns>The username that is used when logging on to the proxy.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.AcquireConnection(System.Object)" />.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.Scope">
      <summary>Gets or sets the scope for the connection.</summary>
      <returns>The scope for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ServerDomain">
      <summary>Gets or sets the domain used to log on to the server.</summary>
      <returns>The domain used to log on to the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ServerPassword">
      <summary>Sets the password used to log on to the server.</summary>
      <returns>The password used to log on to the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ServerURL">
      <summary>Gets or sets the server URL for the connection.</summary>
      <returns>The server URL for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ServerUserName">
      <summary>Gets or sets the username used to log on to the server.</summary>
      <returns>The username used to log on to the server.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.SupportsDTCTransactions">
      <summary>Gets a value that indicates whether the connection supports DTC transactions.</summary>
      <returns>true if the connection supports DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.Timeout">
      <summary>Gets or sets the connection timeout.</summary>
      <returns>The connection timeout.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.UseProxy">
      <summary>Gets or sets a value that indicates whether the connection uses a proxy for requests.</summary>
      <returns>true if the connection uses a proxy for request; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.UseProxyCredentials">
      <summary>Gets or sets a value that indicates whether the connection uses proxy credentials.</summary>
      <returns>true if the connection uses proxy credentials; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.UseSecureConnection">
      <summary>Gets or sets a value that indicates whether to use a secure connection.</summary>
      <returns>true to use a secure connection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.UseServerCredentials">
      <summary>Gets or sets a Boolean that indicates whether the connection uses network credentials.</summary>
      <returns>true if the connection uses network credentials; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass" />. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass">
      <summary>Represents a connection manager multi-file class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>The connection string used to establish a connection to a data source.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.FileUsageType">
      <summary>Gets or sets the file connection usage type.</summary>
      <returns>The file connection usage type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.AcquireConnection(System.Object)" />.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.Scope">
      <summary>Gets or sets the scope for the connection.</summary>
      <returns>The scope for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.SupportsDTCTransactions">
      <summary>Gets a value that indicates whether the connection supports DTC transactions.</summary>
      <returns>true if the connection supports DTC transactions; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass">
      <summary>Represents a connection manager for accessing multiple flat files.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.AlwaysCheckForRowDelimiters">
      <summary>Gets or sets a value that indicates whether connection manager always checks for row delimiter in unquoted data.</summary>
      <returns>true if the connection manager always checks for row delimiters; otherwise, false. Default is true.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.CodePage">
      <summary>Gets or sets the code page to use for converting non-Unicode string to Unicode.</summary>
      <returns>The code page to use for converting non-Unicode string to Unicode.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.ColumnNamesInFirstDataRow">
      <summary>Gets or sets a value that indicates whether first row in the file contains the column names.</summary>
      <returns>true if first row contains the column names; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.Columns">
      <summary>Gets the collection of columns in the file.</summary>
      <returns>The collection of columns in the file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>The connection string used to establish a connection to a data source.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.DataRowsToSkip">
      <summary>Gets or sets the number of initial data rows to skip in the file.</summary>
      <returns>The number of initial data rows to skip in the file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.FileUsageType">
      <summary>Gets or sets the file usage type.</summary>
      <returns>The file usage type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.Format">
      <summary>Gets or sets the data format in the file.</summary>
      <returns>The file data format.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.HeaderRowDelimiter">
      <summary>Gets or sets the header row delimiter.</summary>
      <returns>The header row delimiter.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.HeaderRowsToSkip">
      <summary>Gets or sets the number of header rows to skip in the file.</summary>
      <returns>The number of header rows to skip in the file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.LocaleID">
      <summary>Gets or sets the locale identifier.</summary>
      <returns>The locale identifier.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.AcquireConnection(System.Object)" />.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.RowDelimiter">
      <summary>Gets or sets the row delimiter.</summary>
      <returns>The row delimiter.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.Scope">
      <summary>Gets or sets the scope for the connection.</summary>
      <returns>The scope for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.SupportsDTCTransactions">
      <summary>Gets a value that indicates whether the connection supports DTC transactions.</summary>
      <returns>true if the connection supports DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.TextQualifier">
      <summary>Gets or sets the text qualifier for the column.</summary>
      <returns>The text qualifier for the column.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.Unicode">
      <summary>Gets or sets a value that indicates whether to use Unicode.</summary>
      <returns>true if Unicode is used; false if CodePage is used.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbc">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass" />. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass">
      <summary>Represents a connection manager that connects to a data source using ODBC.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>A String that contains the connection string value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.GetConnectionForSchema">
      <summary>Gets the connection for the schema.</summary>
      <returns>The connection for the schema.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.InitialCatalog">
      <summary>Gets or sets the initial catalog for the connection.</summary>
      <returns>The initial catalog for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.Password">
      <summary>Gets or sets the password for the connection.</summary>
      <returns>The password for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.AcquireConnection(System.Object)" />. Called at design time and runtime.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.RetainSameConnection">
      <summary>Gets or sets a Boolean that indicates whether the connection manager retains the same connection.</summary>
      <returns>true if the connection manager retains the same connection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.Scope">
      <summary>Gets the scope of the connection manager.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.ServerName">
      <summary>Gets or sets the server name.</summary>
      <returns>The server name.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.SupportsDTCTransactions">
      <summary>Gets a Boolean that indicates whether the connection supports Microsoft Distributed Transaction Coordinator (MS DTC) transactions.</summary>
      <returns>true if the connection supports MS DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.UserName">
      <summary>Gets or sets the username for the connection.</summary>
      <returns>The username for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAP">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass" />. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass">
      <summary>Represents a connection manager OLAP class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>The connection string used to establish a connection to a data source.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.GetConnectionForSchema">
      <summary>Gets the connection for the schema.</summary>
      <returns>The connection for the schema.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.InitialCatalog">
      <summary>Gets or sets the name of the database associated with the connection.</summary>
      <returns>The name of the database associated with the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.Password">
      <summary>Sets the password used to log on to the connection.</summary>
      <returns>The password used to log on to the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.AcquireConnection(System.Object)" />.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.RetainSameConnection">
      <summary>Gets or sets a value that indicates whether the connection manager retains the same connection.</summary>
      <returns>true if the connection manager retains the same connection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.Scope">
      <summary>Gets or sets the scope for the connection.</summary>
      <returns>The scope for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.ServerName">
      <summary>Gets or sets the server name.</summary>
      <returns>The server name.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.SupportsDTCTransactions">
      <summary>Gets a value that indicates whether the connection supports DTC transactions.</summary>
      <returns>true if the connection supports DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.UserName">
      <summary>Gets or sets the username for the connection.</summary>
      <returns>The username for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDb">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass" />. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass">
      <summary>Represents a connection manager that connects to a data source using OLE DB provider.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>A String that contains the connection string value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.GetConnectionForSchema">
      <summary>Gets the connection for the schema.</summary>
      <returns>The connection for the schema.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.InitialCatalog">
      <summary>Gets or sets the initial catalog for the connection.</summary>
      <returns>The initial catalog for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.Password">
      <summary>Gets or sets the password for the connection.</summary>
      <returns>The password for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.AcquireConnection(System.Object)" />. Called at design time and runtime.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.RetainSameConnection">
      <summary>Gets or sets a Boolean that indicates whether the connection manager retains the same connection.</summary>
      <returns>true if the connection manager retains the same connection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.Scope">
      <summary>Gets the scope of the connection manager.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.ServerName">
      <summary>Gets or sets the server name.</summary>
      <returns>The server name.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.SupportsDTCTransactions">
      <summary>Gets a Boolean that indicates whether the connection supports Microsoft Distributed Transaction Coordinator (MS DTC) transactions.</summary>
      <returns>true if the connection supports MS DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.UserName">
      <summary>Gets or sets the username for the connection.</summary>
      <returns>The username for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass" />. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass">
      <summary>Represents a connection manager sql mobile class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>The connection string used to establish a connection to a data source.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.GetConnectionForSchema">
      <summary>Gets the connection for the schema.</summary>
      <returns>The connection for the schema.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.InitialCatalog">
      <summary>Gets or sets the name of the database associated with the connection.</summary>
      <returns>The name of the database associated with the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.InitializeConnectionManager(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Initializes a connection manager instance.</summary>
      <param name="bstrQualifier">The qualifier on the connection.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface.</param>
      <param name="pLog">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.Password">
      <summary>Sets the password used to log on to the connection.</summary>
      <returns>The password used to log on to the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.AcquireConnection(System.Object)" />.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.RetainSameConnection">
      <summary>Gets or sets a value that indicates whether the connection manager retains the same connection.</summary>
      <returns>true if the connection manager retains the same connection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.Scope">
      <summary>Gets or sets the scope for the connection.</summary>
      <returns>The scope for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.ServerName">
      <summary>Gets or sets the server name.</summary>
      <returns>The server name.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.SupportsDTCTransactions">
      <summary>Gets a value that indicates whether the connection supports DTC transactions.</summary>
      <returns>true if the connection supports DTC transactions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.UserName">
      <summary>Gets or sets the username for the connection.</summary>
      <returns>The username for the connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType">
      <summary>Indicates the data type of columns in data flow components and the data flow buffer.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BOOL">
      <summary>A Boolean value. The numeric value is 11.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_BOOL">
      <summary>A pointer to a Boolean value. The numeric value is 16395.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_CY">
      <summary>A pointer to a currency value. This data type is an 8-byte value with a scale of 4 and a maximum precision of 19. The numeric value is 16390.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DATE">
      <summary>A pointer to a date structure that consists of year, month, date, and hour.  The numeric value is 16391.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DBDATE">
      <summary>A pointer to a date structure that consists of year, month, and date. The numeric value is 16517.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DBTIME">
      <summary>A pointer to a time structure that consists of hour, minute, and second.  The numeric value is 16518.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DBTIME2">
      <summary>A pointer to a time structure that consists of hour, minute, second, and fractional seconds. The fractional seconds have a maximum scale of 7 digits.  The numeric value is 16520.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DBTIMESTAMP">
      <summary>A pointer to a timestamp structure that consists of year, month, day, hour, minute, second, and fractional seconds. The fractional seconds have a maximum scale of 3 digits. The numeric value is 16519.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DBTIMESTAMP2">
      <summary>A pointer to a timestamp structure that consists of year, month, day, hour, minute, second, and fractional seconds. The fractional seconds have a maximum scale of 7 digits. The numeric value is 16522.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DBTIMESTAMPOFFSET">
      <summary>A pointer to a timestamp structure that consists of year, month, day, hour, minute, second, and fractional seconds. The fractional seconds have a maximum scale of 7 digits.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DECIMAL">
      <summary>A pointer to an exact numeric value with a fixed precision and a fixed scale. This data type is a 12-byte value with a separate sign, a scale of 0 to 28, and a maximum precision of 29. The numeric value is 16398.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_FILETIME">
      <summary>A pointer to a 64-bit value that represents the number of 100-nanosecond intervals since January 1, 1601. The numeric value is 16448.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_GUID">
      <summary>A pointer to a GUID. The numeric value is 16456.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_I1">
      <summary>A pointer to a 1-byte, signed integer. The numeric value is 16400.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_I2">
      <summary>A pointer to a 2-byte, signed integer. The numeric value is 16386.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_I4">
      <summary>A pointer to a 4-byte, signed integer. The numeric value is 16387.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_I8">
      <summary>A pointer to an 8-byte, signed integer.  The numeric value is 16404.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_NUMERIC">
      <summary>A pointer to an exact numeric value with a fixed precision and scale. This data type is a 16-byte value with a separate sign, a scale of 0 to 38, and a maximum precision of 38. The numeric value is 16515.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_R4">
      <summary>A pointer to a single-precision floating-point value. The numeric value is 16388.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_R8">
      <summary>A pointer to a double-precision floating-point value. The numeric value is 16389.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_UI1">
      <summary>A pointer to a 1-byte, unsigned integer. The numeric value is 16401.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_UI2">
      <summary>A pointer to a 2-byte, unsigned integer. The numeric value is 16402.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_UI4">
      <summary>A pointer to a 4-byte, unsigned integer. The numeric value is 16403.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_UI8">
      <summary>A pointer to an 8-byte, unsigned integer. The numeric value is 16405.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYTES">
      <summary>A binary data value. The length is variable and the maximum length is 8,000 bytes. The numeric value is 128.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_CY">
      <summary>A currency value. This data type is an 8-byte value with a scale of 4 and a maximum precision of 19. The numeric value is 6.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DATE">
      <summary>A date structure that consists of year, month, day, and hour.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DBDATE">
      <summary>A date structure that consists of year, month, and date.  The numeric value is 133.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DBTIME">
      <summary>A time structure that consists of hour, minute, and second. The numeric value is 134.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DBTIME2">
      <summary>A time structure that consists of hour, minute, second, and fractional seconds. The fractional seconds have a maximum scale of 7 digits. The numeric value is 145.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DBTIMESTAMP">
      <summary>A timestamp structure that consists of year, month, day, hour, minute, second, and fractional seconds. The fractional seconds have a maximum scale of 3 digits. The numeric value is 135.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DBTIMESTAMP2">
      <summary>A timestamp structure that consists of year, month, day, hour, minute, second, and fractional seconds. The fractional seconds have a maximum scale of 7 digits. The numeric value is 304.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DBTIMESTAMPOFFSET">
      <summary>A timestamp structure that consists of year, month, day, hour, minute, second, and fractional seconds. The fractional seconds have a maximum scale of 7 digits.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DECIMAL">
      <summary>An exact numeric value with a fixed precision and a fixed scale. This data type is a 12-byte value with a separate sign, a scale of 0 to 28, and a maximum precision of 29. The numeric value is 14.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_EMPTY">
      <summary>A data type that does not have a value. The numeric value is 0.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_FILETIME">
      <summary>A 64-bit value that represents the number of 100-nanosecond intervals since January 1, 1601. The numeric value is 64.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_GUID">
      <summary>A globally unique identifier (GUID). The numeric value is 72.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_I1">
      <summary>A 1-byte, signed integer. The numeric value is 16.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_I2">
      <summary>A 2-byte, signed integer. The numeric value is 2.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_I4">
      <summary>A 4-byte, signed integer. The numeric value is 3.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_I8">
      <summary>An 8-byte, signed integer. The numeric value is 20.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_IMAGE">
      <summary>A binary value with a maximum size of 231–1 (2,147,483,647) bytes. The numeric value is 301.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_NTEXT">
      <summary>A Unicode character string with a maximum length of 2^30–1 (1,073,741,823) characters. The numeric value is 303.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_NULL">
      <summary>A data type with a value of NULL.  The numeric value is 1.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_NUMERIC">
      <summary>An exact numeric value with a fixed precision and scale. This data type is a 16-byte value with a separate sign, a scale of 0 to 38, and a maximum precision of 38. The numeric value is 131.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_R4">
      <summary>A single-precision floating-point value.  The numeric value is 4.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_R8">
      <summary>A double-precision floating-point value. The numeric value is 5.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_STR">
      <summary>A null-terminated ANSI/MBCS character string. The numeric value is 129.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_TEXT">
      <summary>An ANSI/MBCS character string with a maximum length of 231–1 (2,147,483,647) characters. The numeric value is 302.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_UI1">
      <summary>A 1-byte, unsigned integer. The numeric value is 17.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_UI2">
      <summary>A 2-byte, unsigned integer. The numeric value is 18.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_UI4">
      <summary>A 4-byte, unsigned integer. The numeric value is 19.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_UI8">
      <summary>An 8-byte, unsigned integer. The numeric value is 21.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_WSTR">
      <summary>A null-terminated Unicode character string. The numeric value is 130.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION">
      <summary>Specifies a union data types.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.boolVal">
      <summary>Specifies a value of type BOOL.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.bytesVal">
      <summary>Specifies a value of type BYTES.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.byteVal">
      <summary>Specifies a value of type BYTE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.charVal">
      <summary>Specifies a value of type CHAR.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.cyVal">
      <summary>Specifies a value of CURRENCY type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.dateVal">
      <summary>Specifies a value of type DATE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.dbdateVal">
      <summary>Specifies a value of type DBDATE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.dbtime2Val">
      <summary>Specifies a value of type DBTIME.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.dbtimestamp2Val">
      <summary>Specifies a value of type DBTIMESTAMP2.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.dbtimestampoffsetVal">
      <summary>Specifies a date and time value that provides the year, month, day, hour, minute, second, and fractional second up to seven digits.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.dbtimestampVal">
      <summary>Specifies a value of type DBTIMESTAMP.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.dbtimeVal">
      <summary>Specifies a value of type DBTIME.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.decVal">
      <summary>Specifies a value of type DECIMAL.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.doubleVal">
      <summary>Specifies a value of type DOUBLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.dwVal">
      <summary>Specifies a dwVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.filetimeVal">
      <summary>Specifies a value of type FILETIME.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.floatVal">
      <summary>Specifies a value of type FLOAT.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.imageVal">
      <summary>Specifies a value of type IMAGE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.intVal">
      <summary>Specifies a value of type INT.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.llVal">
      <summary>Specifies a llVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pboolVal">
      <summary>Specifies a pboolVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pbyteVal">
      <summary>Specifies a pbyteVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pcharVal">
      <summary>Specifies a pcharVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pdoubleVal">
      <summary>Specifies a pdoubleVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pdwVal">
      <summary>Specifies a pdoubleVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pfloatVal">
      <summary>Specifies a pfloatVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pintVal">
      <summary>Specifies a pintVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pllVal">
      <summary>Specifies a pllVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pshortVal">
      <summary>Specifies a pshortVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pullVal">
      <summary>Specifies a pullVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.pushortVal">
      <summary>Specifies a pushortVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.shortVal">
      <summary>Specifies a shortVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.ullVal">
      <summary>Specifies a ullVal data type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DATA_UNION.ushortVal">
      <summary>Specifies a ushortVal data type.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBDATE">
      <summary>Specifies an enumeration of date structure.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBDATE.day">
      <summary>Specifies the date by day.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBDATE.month">
      <summary>Specifies the date by month.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBDATE.year">
      <summary>Specifies the date by year.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIME">
      <summary>Specifies a data type time structure.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIME.hour">
      <summary>Specifies the time by hour.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIME.minute">
      <summary>Specifies the time by minute.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIME.second">
      <summary>Specifies the time by second.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIME2">
      <summary>Specifies a time structure that consists of hour, minute, second, and fractional seconds.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIME2.fraction">
      <summary>The fraction time structure.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIME2.hour">
      <summary>The hour time structure.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIME2.minute">
      <summary>The minute time structure.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIME2.second">
      <summary>The second time structure.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP">
      <summary>A timestamp structure that consists of year, month, day, hour, minute, second, and fractional seconds. The fractional seconds have a maximum scale of 3 digits.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP.day">
      <summary>Specifies the day of the month.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP.fraction">
      <summary>Specifies the fractional seconds.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP.hour">
      <summary>Specifies the hour.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP.minute">
      <summary>Specifies the minute.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP.month">
      <summary>Specifies the month.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP.second">
      <summary>Specifies the second.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP.year">
      <summary>Specifies the year.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP2">
      <summary>A timestamp structure that consists of year, month, day, hour, minute, second, and fractional seconds. The fractional seconds have a maximum scale of 7 digits.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP2.day">
      <summary>Specifies the day of the month.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP2.fraction">
      <summary>Specifies the fractional seconds.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP2.hour">
      <summary>Specifies the hour.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP2.minute">
      <summary>Specifies the minute.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP2.month">
      <summary>Specifies the month.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP2.second">
      <summary>Specifies the second.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMP2.year">
      <summary>Specifies the year.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMPOFFSET">
      <summary>A timestamp structure that consists of year, month, day, hour, minute, second, and fractional seconds, and has a time zone offset from the Coordinated Universal Time (UTC) that is used to obtain the local time. The fractional seconds have a maximum scale of 7 digits.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMPOFFSET.day">
      <summary>Specifies the day of the month.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMPOFFSET.fraction">
      <summary>Specifies the fractional seconds.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMPOFFSET.hour">
      <summary>Specifies the hour.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMPOFFSET.minute">
      <summary>Specifies the minute.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMPOFFSET.month">
      <summary>Specifies the month.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMPOFFSET.second">
      <summary>Specifies the second.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMPOFFSET.timezone_hour">
      <summary>Specifies the timezone hour offset.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMPOFFSET.timezone_minute">
      <summary>Specifies the timezone minute offset.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_DBTIMESTAMPOFFSET.year">
      <summary>Specifies the year.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_FILETIME">
      <summary>Specifies an enumeration of data filetime structure.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_FILETIME.dwHighDateTime">
      <summary>Specifies the high 32 bits of the FILETIME.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_FILETIME.dwLowDateTime">
      <summary>Specifies the low 32 bits of the FILETIME.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_NUMERIC">
      <summary>Specifies an enumeration of data numeric structure.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_NUMERIC.Precision">
      <summary>Specifies the numeric by precision.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_NUMERIC.Scale">
      <summary>Specifies the numeric by scale.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_NUMERIC.sign">
      <summary>Specifies the numeric by sign.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_NUMERIC.val">
      <summary>Specifies the numeric value.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT">
      <summary>Specifies the data type of the column. This is a value from the DataType enumeration that determines the type of DTP_VARIANT structure stored in each cell of this column. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT.dwLength">
      <summary>Represents an unsigned integer that contains the length of the data in the union.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT.u">
      <summary>Contains the data union.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT.vt">
      <summary>Represents an enumeration of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" />. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.Computer">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" />.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.DataBytes">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" />.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.ExecutionID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" />.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.MessageText">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" />.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.Operator">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" />.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.SourceID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" />.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.SourceName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO">
      <summary>Specifies a data managed information structure.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrClassID">
      <summary>Specifies the bstrClassID information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrContactInfo">
      <summary>Specifies the bstrContactInfo.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrDescription">
      <summary>Specifies the bstrDescription information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrFileName">
      <summary>Specifies the bstrFileName information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrFileNameVersionString">
      <summary>Specifies the bstrFileNameVersionString information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrHelpCollection">
      <summary>Specifies the bstrHelpCollection information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrHelpKeyword">
      <summary>Specifies the bstrHelpKeyword information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrIconFile">
      <summary>Specifies the bstrIconFile information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrIconResource">
      <summary>Specifies the bstrIconResource information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrName">
      <summary>Specifies the bstrName information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrObjectType">
      <summary>Specifies the bstrObjectType information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrSamplesTag">
      <summary>Specifies the bstrSamplesTag information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrShapeProgId">
      <summary>Specifies the bstrShapeProgId information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.bstrUITypeName">
      <summary>Specifies the bstrUITypeName information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.lNoEditor">
      <summary>Specifies the lNoEditor information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.mitType">
      <summary>Specifies the mitType information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO.pctType">
      <summary>Specifies the pctType information.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE">
      <summary>An enumeration that specifies the managed data type information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE.TypeComponent">
      <summary>The managed TypeComponent information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE.TypeConnection">
      <summary>The managed TypeConnection information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE.TypeForEachEnumerator">
      <summary>The managed TypeForEachEnumerator information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE.TypeLogProvider">
      <summary>The managed TypeLogProvider information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE.TypeTask">
      <summary>The managed TypeTask information.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY">
      <summary>Specifies an enumeration of managed data property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.bGet">
      <summary>The managed bGet property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.bSensitive">
      <summary>The managed bSensitive property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.bSet">
      <summary>The managed bSet property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.bstrConnectionType">
      <summary>The managed bstrConnectionType property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.bstrName">
      <summary>The managed bstrName property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.bstrTypeConverter">
      <summary>The managed bstrTypeConverter property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.bstrUITypeEditor">
      <summary>The managed bstrUITypeEditor property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.ePropertyKind">
      <summary>The managed ePropertyKind property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.Index">
      <summary>The managed Index property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.vtTYPE">
      <summary>The managed vtTYPE property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY.vValue">
      <summary>The managed vValue property.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_PACKAGE_UPGRADE_OPTIONS">
      <summary>A structure used for specifying options during a package upgrade.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_PACKAGE_UPGRADE_OPTIONS.RegeneratePackageID">
      <summary>Specifies to regenerate the package with a new globally unique identifier.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_PACKAGE_UPGRADE_OPTIONS.UpgradeConnectionProviders">
      <summary>Specifies to update the connection string to use the new provider names.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSBreakpointHitTest">
      <summary>Enumerates the values for the hit count types. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSBreakpointHitTest.DTSBHT_ALWAYS">
      <summary>Execution is always suspended when the breakpoint is hit.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSBreakpointHitTest.DTSBHT_EQUAL">
      <summary>Execution is suspended when the number of times the breakpoint has occurred is equal to the hit count.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSBreakpointHitTest.DTSBHT_EXPRESSION">
      <summary>Execution is suspended when the expression changes.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSBreakpointHitTest.DTSBHT_GREATER_OR_EQUAL">
      <summary>Execution is suspended when the number of times the breakpoint has occurred is equal to or greater than the hit count.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSBreakpointHitTest.DTSBHT_MULTIPLE">
      <summary>Execution is suspended when a multiple of the hit count occurs.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSCheckpointUsage">
      <summary>Specifies values that describe if, or when, a package is restarted. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSCheckpointUsage.DTSCU_ALWAYS">
      <summary>Specifies that the package always restarts.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSCheckpointUsage.DTSCU_IFEXISTS">
      <summary>Specifies that the package restarts if the file specified by the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Package.CheckpointFileName" /> is found.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSCheckpointUsage.DTSCU_NEVER">
      <summary>Specifies that the package never restarts. This is the default value.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType">
      <summary>Specifies the ways that a configuration for a package can be saved.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_CONFIGFILE">
      <summary>Specifies that the configuration is stored in a configuration file. In the SSIS Package Configuration Wizard, the Configuration File Name column is where you specify the location and name of the configuration file that the wizard generates.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_ENVVARIABLE">
      <summary>Specifies that the configuration is stored in an environment variable.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_ICONFIGFILE">
      <summary>Specifies that the configuration is stored in an environment variable that contains the information about configuration flat file.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_IINIFILE">
      <summary>This member is reserved for future use.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_INIFILE">
      <summary>This member is reserved for future use.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_IPARENTVARIABLE">
      <summary>Specifies that the configuration information is stored in an environment variable that contains the information about the package variable.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_IREGENTRY">
      <summary>Specifies that the configuration information is stored in an environment variable that contains the information about the registry entry.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_ISQLSERVER">
      <summary>Specifies that the location of the configuration information is stored in an environment variable that contains information about the SQL Server.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_PARENTVARIABLE">
      <summary>Specifies that the configuration information is stored in a package variable.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_REGENTRY">
      <summary>Specifies that the configuration information is stored in a registry entry.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType.DTSCT_SQLSERVER">
      <summary>Specifies that the configuration is stored in the SQL Server msdb database. This field is constant.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSConnectionManagerScope" />. Specifies the scope levels of a connection manager.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope.DTSCMS_PACKAGE">
      <summary>Specifies the scope is for a package level.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope.DTSCMS_PROJECT">
      <summary>Specifies the scope is for a project level.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSEvaluatorContextOption">
      <summary>Specifies the options for the evaluator context.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSEvaluatorContextOption.DTSECO_NOOPTION">
      <summary>The no option of the evaluator context.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSEvaluatorContextOption.DTSECO_REPLACE_SENSITIVEVALUE_WITH_FIXEDVALUE">
      <summary>The option to replace sensitive value with fixed value.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSEventFilterKind">
      <summary>Describes the kind of event filter that is set on logging.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSEventFilterKind.DTSEFK_EXCLUSION">
      <summary>Indicates that the events added to the event filter are excluded from the event log.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSEventFilterKind.DTSEFK_INCLUSION">
      <summary>Indicates that the events added to the event filter are included in the event log.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion">
      <summary>This enumeration maps the Extended Properties from the connection string in an OLEDB provider to the correct version of the Excel connection manager. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass" />. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion.DTSExcelVer_2007">
      <summary>Uses Excel 2007.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion.DTSExcelVer_3">
      <summary>Uses Excel Version 3.0.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion.DTSExcelVer_4">
      <summary>Uses Excel Version 4.0.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion.DTSExcelVer_5">
      <summary>Uses Excel Version 5.0.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion.DTSExcelVer_8">
      <summary>Uses Excel 97 through Excel 2000.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult">
      <summary>Provides values that describe the result of a task execution.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult.DTSER_CANCELED">
      <summary>The task was cancelled.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult.DTSER_COMPLETION">
      <summary>The task run to completion.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult.DTSER_FAILURE">
      <summary>The task failed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult.DTSER_SUCCESS">
      <summary>The task ran successfully.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus">
      <summary>Contains values that indicate the current status of task execution or a container object at the time of the call.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus.DTSES_ABEND">
      <summary>The task experienced an internal error and terminated execution abnormally.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus.DTSES_COMPLETED">
      <summary>Task has completed executing with a success or failed result.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus.DTSES_EXECUTING">
      <summary>Task is currently running.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus.DTSES_NONE">
      <summary>Task is idle (default value).</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus.DTSES_SUSPENDED">
      <summary>Task is currently suspended because the runtime has called suspend because of a breakpoint hit.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus.DTSES_VALIDATING">
      <summary>Task is currently validating.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecutionLocation">
      <summary>Specifies the DTS execution location.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecutionLocation.DTSEL_INPROC_SERVER">
      <summary>The execution location is in process.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecutionLocation.DTSEL_LOCAL_SERVER">
      <summary>The execution location is out of process.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecutionLocation.DTSEL_REMOTE_SERVER">
      <summary>The execution location is remote.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSFileConnectionUsageType">
      <summary>Provides information about how a connection is used by a component client.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSFileConnectionUsageType.DTSFCU_CREATEFILE">
      <summary>Creates a file. The option creates the file only if it does not already exist.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSFileConnectionUsageType.DTSFCU_CREATEFOLDER">
      <summary>Creates a folder.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSFileConnectionUsageType.DTSFCU_FILEEXISTS">
      <summary>The file exists.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSFileConnectionUsageType.DTSFCU_FOLDEREXISTS">
      <summary>The folder exists.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult">
      <summary>Specifies the execution result of a container when the container's <see cref="P:Microsoft.SqlServer.Dts.Runtime.DtsContainer.ForceExecutionValue" /> is set to true.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult.DTSFER_COMPLETION">
      <summary>The execution result is set to Completion.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult.DTSFER_FAILURE">
      <summary>The execution result is set to Failure.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult.DTSFER_NONE">
      <summary>The execution result is set to None. The event handler returns the actual execution result; the result is not forced.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult.DTSFER_SUCCESS">
      <summary>The execution result is set to Success.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLogEntryFrequency">
      <summary>Provides values that correspond to a log scheme used to assist in log planning.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLogEntryFrequency.DTSLEF_CONSISTENT">
      <summary>The entry is logged a consistent number of times, not proportional to the workload. For example, a log that is created at the beginning and in the end of a task.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLogEntryFrequency.DTSLEF_OCCASIONAL">
      <summary>The entry is logged sometimes, usually in exceptional cases.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLogEntryFrequency.DTSLEF_PROPORTIONAL">
      <summary>The entry is logged a number of times proportional to the workload.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode">
      <summary>Specifies the logging behavior of the container. The container can turn on logging, disable logging, or specify that the setting to use is the setting found on the parent container.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode.DTSLM_DISABLED">
      <summary>Logging is disabled.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode.DTSLM_ENABLED">
      <summary>Logging is enabled.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode.DTSLM_USEPARENTSETTING">
      <summary>Logging value is taken from the logging mode setting of the parent container.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType">
      <summary>Describes the type of container that is hosting the other task or container.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType.DTSOHT_CONNECTIONMANAGER">
      <summary>The host is a connection manager.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType.DTSOHT_FOREACHENUMERATOR">
      <summary>The host is a Foreach enumerator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType.DTSOHT_LOGPROVIDER">
      <summary>The host is a log provider.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType.DTSOHT_TASK">
      <summary>The host is a task.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectReferenceType">
      <summary>Specifies the types of objects that the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker" /> class will provide impact analysis for. This enumeration is used by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects" /> class, which in turn is used by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package" /> class in its <see cref="M:Microsoft.SqlServer.Dts.Runtime.Package.FindReferencedObjects(System.Object)" /> method.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectReferenceType.DTSORT_CONNECTION">
      <summary>A connection.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectReferenceType.DTSORT_VARIABLE_READONLY">
      <summary>A read-only variable.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectReferenceType.DTSORT_VARIABLE_READWRITE">
      <summary>A read/write variable.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageInformationFlags">
      <summary>Describes whether a package is a folder or package. It is used for setting a valid value in the <see cref="P:Microsoft.SqlServer.Dts.Runtime.PackageInfo.Flags" /> property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageInformationFlags.DTSPIF_FOLDER">
      <summary>This is a folder.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageInformationFlags.DTSPIF_PACKAGE">
      <summary>This is a package.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType">
      <summary>Identifies the tool that created the package.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType.DTSPKT_DEFAULT">
      <summary>Undefined.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType.DTSPKT_DTSDESIGNER">
      <summary>Specifies that the package was created in the designer in SQL Server 2000.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType.DTSPKT_DTSDESIGNER100">
      <summary>Specifies that the package was created in SSIS Designer in SQL Server 2008 Integration Services (SSIS).</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType.DTSPKT_DTSWIZARD">
      <summary>Specifies that the package was created by the SQL Server Import and Export Wizard.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType.DTSPKT_SQLDBMAINT">
      <summary>Specifies that the DBMaint client created the package.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType.DTSPKT_SQLREPL">
      <summary>Specifies that the package was generated to support transformable subscriptions.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPipelineComponentType">
      <summary>Classifies pipeline components by category. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPipelineComponentType.DTSPCT_DESTINATIONADAPTER">
      <summary>The component is a destination.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPipelineComponentType.DTSPCT_SOURCEADAPTER">
      <summary>The component is a source.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPipelineComponentType.DTSPCT_TRANSFORM">
      <summary>The component is a transformation.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPipelineComponentType.DTSPCT_VIEW">
      <summary>The component is a view.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPrecedenceEvalOp">
      <summary>Indicates the evaluation operations that the precedence constraint uses.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPrecedenceEvalOp.DTSPEO_CONSTRAINT">
      <summary>Specifies that the execution outcome determines whether the constrained container or task runs.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPrecedenceEvalOp.DTSPEO_EXPRESSION">
      <summary>Specifies that the value of an expression determines whether the constrained container or task runs.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPrecedenceEvalOp.DTSPEO_EXPRESSIONANDCONSTRAINT">
      <summary>Specifies that the constraint outcome must occur and the expression must evaluate for the constrained container or task to run.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPrecedenceEvalOp.DTSPEO_EXPRESSIONORCONSTRAINT">
      <summary>Specifies that either the constraint outcome must occur, or the expression must evaluate, for the constrained container or task to run.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPriorityClass">
      <summary>Describes the priority of a thread in a class.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPriorityClass.DTSPC_ABOVE_NORMAL">
      <summary>The thread is scheduled after threads with Default priority and before those with Normal priority.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPriorityClass.DTSPC_BELOW_NORMAL">
      <summary>The thread is scheduled after threads with Default, AboveNormal, and Normal priority and before those with Lowest priority.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPriorityClass.DTSPC_DEFAULT">
      <summary>The thread is scheduled before threads with any other priority. This is the highest thread priority.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPriorityClass.DTSPC_IDLE">
      <summary>This thread is scheduled after threads with any other priority.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPriorityClass.DTSPC_NORMAL">
      <summary>The thread is scheduled after threads with Default and AboveNormal priority, and before those with BelowNormal and Lowest priority.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel">
      <summary>Specifies the SQL Server product edition. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel.DTSPL_ENTERPRISE">
      <summary>Specifies the Enterprise edition.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel.DTSPL_EXPRESS">
      <summary>Specifies the Express edition.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel.DTSPL_NONE">
      <summary>Specifies no edition in particular.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel.DTSPL_STANDARD">
      <summary>Specifies the Standard edition.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel.DTSPL_WORKGROUP">
      <summary>Specifies the Workgroup edition.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPropertyKind">
      <summary>Contains values that describe the type of property.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPropertyKind.DTSPK_CONNECTION">
      <summary>The property is a connection.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPropertyKind.DTSPK_OTHER">
      <summary>The property is not described by any of the available enumerations.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPropertyKind.DTSPK_SENSITIVE">
      <summary>The property is sensitive.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPropertyKind.DTSPK_VARIABLE_READONLY">
      <summary>The property is a read-only variable.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPropertyKind.DTSPK_VARIABLE_READWRITE">
      <summary>The property is a read/write variable.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel">
      <summary>Controls the handling of sensitive information in the package.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel.DTSPL_DONTSAVESENSITIVE">
      <summary>Sensitive information is not saved in the package. The sensitive information is removed and replaced with blanks.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel.DTSPL_ENCRYPTALL_PASSWORD">
      <summary>Encrypts the entire package by using a password.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel.DTSPL_ENCRYPTALL_USERKEY">
      <summary>Encrypts the entire package by using keys based on the user profile. Only the same user using the same profile can load the package.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel.DTSPL_ENCRYPTSENSITIVE_PASSWORD">
      <summary>Encrypts only sensitive information contained in the package by using a password. DPAPI is used for this encryption.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel.DTSPL_ENCRYPTSENSITIVE_USERKEY">
      <summary>Encrypts sensitive properties only by using keys based on the current user. Only the same user using the same profile can load the package. If a different user opens the package, the sensitive information is replaced with blanks. DPAPI is used for this encryption. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel.DTSPL_SERVERSTORAGE">
      <summary>Encrypts the package within a SQL Server msdb database. This option is supported only when a package is saved to SQL Server. It is not supported when a package is saved to the File System. The access control of who can decrypt the package is controlled by SQL Server database roles. For more information, see Database-Level Roles and sysssispackages (Transact-SQL).</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType">
      <summary>Identifies a specific OLE DB provider. The enumeration value also identifies the data type format used by that provider when the <see cref="P:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo.ProviderType" /> is OLE DB.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType.DTSPST_ACCESS">
      <summary>The provider is the Microsoft OLE DB Provider for Microsoft Jet 4.0.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType.DTSPST_DB2">
      <summary>The provider is Microsoft OLE DB Provider for DB2.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType.DTSPST_DBASE">
      <summary>The provider is dBASE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType.DTSPST_EXCEL">
      <summary>The provider is the Microsoft OLE DB Provider for Microsoft Jet 4.0.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType.DTSPST_FLATFILE">
      <summary>The provider is a flat file.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType.DTSPST_NONE">
      <summary>The provider is not specified using this enumeration.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType.DTSPST_ORACLE">
      <summary>The provider is Microsoft OLE DB Provider for Oracle. This provider supports versions up to Oracle 8.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType.DTSPST_PARADOX">
      <summary>The provider is Corel Paradox.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType.DTSPST_SQLSERVER">
      <summary>The provider is Microsoft SQL Server Native Client OLE DB Provider.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderType">
      <summary>Describes the kind of provider that is stored.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderType.DTSPT_DTS_DEST">
      <summary>The provider is a destination.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderType.DTSPT_DTS_SOURCE">
      <summary>The provider is a source of data.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderType.DTSPT_ODBC">
      <summary>The provider is an ODBC provider.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderType.DTSPT_OLEDB">
      <summary>The provider is an OLEDB provider.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderType.DTSPT_UNKNOWN">
      <summary>The provider is of an unknown type.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSServerParameterType">
      <summary>Specifies the DTS server parameter type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSServerParameterType.PackageParameter">
      <summary>The type is a package parameter.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSServerParameterType.ProjectParameter">
      <summary>The type is a project parameter.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSServerParameterType.ServerOption">
      <summary>The type is a server option parameter.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSSignatureStatus">
      <summary>Describes the status of the digital signature.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSSignatureStatus.DTSSS_GOOD">
      <summary>The signature is valid.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSSignatureStatus.DTSSS_INVALID">
      <summary>The signature is not valid.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSSignatureStatus.DTSSS_NOTPRESENT">
      <summary>The signature is not present.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSSignatureStatus.DTSSS_UNTRUSTED">
      <summary>The signature is from an untrusted source.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption">
      <summary>Describes transaction supportability and specifies whether a container participates in transactions.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption.DTSTO_NotSupported">
      <summary>Specifies that no transaction will be started for this container, and consequently, the outcome of the current transaction, if one has been started by a parent container, will not affect the data that may be altered during execution of this container. This means that changes will not roll back, even if the parent container started a transaction.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption.DTSTO_Required">
      <summary>Specifies that this container will cause a new transaction to be started unless the parent container already has a transaction, in which case, the parent’s transaction will be joined.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption.DTSTO_Supported">
      <summary>Specifies that this container will not start a transaction. However, it will participate in a transaction if the parent container started one. This is the default.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandler">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass">
      <summary>A container on a package or other containers that holds executable objects to run when specific events occur.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)">
      <summary>Passes a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100" /> to a task. The task will use the breakpoint manager to create, remove, and check the status of breakpoints. This method is called by the runtime and is not used in code.</summary>
      <param name="pBreakpointManager">The breakpoint manager specific for this task.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ComputeExpressions(System.Boolean)">
      <summary>Computes the expressions of this <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> object.</summary>
      <param name="recursive">true to include the compute expressions of the package object or other container objects recursively; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.CreationName">
      <summary>Gets the name that is used by the runtime engine to create an instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" />. This property is read-only.</summary>
      <returns>A String that contains the name. The name may be the fully qualified assembly name (for managed assemblies), or it may be the PROGID or CLSID (for COM DLLs).</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.DebugMode">
      <summary>Gets or sets a Boolean that indicates whether a task should check if breakpoints are enabled. </summary>
      <returns>true if the task should check if breakpoints are enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.DelayValidation">
      <summary>Gets or sets a Boolean that indicates whether validation of the task is delayed until run time. The default value is false.</summary>
      <returns>true if validation of the package is delayed until run time. false if the package is validated, and errors and warnings are returned before the package is actually executed. false may prevent the package from running if errors or warnings occur that exceed the MaximumErrorCount property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.Description">
      <summary>Gets or sets the description of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> object.</summary>
      <returns>A String that contains the description given to the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.Disable">
      <summary>Gets a Boolean that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> object is disabled. </summary>
      <returns>A Boolean that indicates if the object is disabled. If true, the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> is disabled and the object will not execute.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.Executables">
      <summary>Gets a collection of executable objects in this container which run when the event occurs. This property is read-only.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100" /> object that represents the collection of executable objects in this container.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the application, container, or package as part of a package workflow.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the execution.</returns>
      <param name="pConnections">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> collection for the container.</param>
      <param name="pVariables">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100" /> collection for the container.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The transaction object that the container is a part of, depending on the value found in the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.TransactionOption" /> property. This value can be null.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ExecutionDuration">
      <summary>Gets a value that indicates the amount of time that the container spent in execution, in milliseconds. This property is read-only. </summary>
      <returns>An Integer that contains the time that the container spent executing. The time is given in milliseconds.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ExecutionResult">
      <summary>Gets a value that indicates the success or failure of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> object. </summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ExecutionStatus">
      <summary>Gets a value that indicates the current status of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> object at the time of the call.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.FailPackageOnFailure">
      <summary>Gets or sets a Boolean that indicates whether the package fails when a child container fails. This property is used on containers, not the package itself.</summary>
      <returns>true if the package fails; otherwise, false. true indicates that a failure in the container will set the package execution results to failure.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.FailParentOnFailure">
      <summary>Gets or sets a Boolean that indicates whether the parent container fails when a child container fails.</summary>
      <returns>true if the parent container fails; otherwise, false. The default value of this property is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ForcedExecutionValue">
      <summary>If the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ForceExecutionValue" /> property is set to true, gets or sets a value that specifies the optional execution value the package returns.</summary>
      <returns>An object that represents the optional execution value the package returns. The default value of this property is 0.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ForceExecutionResult">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration value that specifies the forced execution result of the container.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration that that specifies the forced execution result of the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ForceExecutionValue">
      <summary>Gets or sets a Boolean that indicates whether the execution value of the container should be forced to contain a particular value.</summary>
      <returns>true if the execution value of the container should be forced to contain a particular value; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.GetExpression(System.String)">
      <summary>Returns the expression for the specified property or null if no expression is assigned.</summary>
      <returns>A String that contains the expression used to evaluate the property or null if no expression is assigned.</returns>
      <param name="bstrPropertyName">The name of the property whose expression you want to see.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.GetParentID">
      <summary>Gets the parent identifier of this container.</summary>
      <returns>A String value that represents the parent identifier of this container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ID">
      <summary>Gets the ID, which is a GUID, of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" />. The value is read-only.</summary>
      <returns>A GUID that identifies the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.IDTSSuspend100_ResumeExecution">
      <summary>Resumes execution of the task after pausing. The task or container is resumed by the runtime engine. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.IDTSSuspend100_SuspendExecution">
      <summary>Notifies that the executable needs to suspend. This method is called by the runtime engine. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.IDTSSuspend100_SuspendRequired">
      <summary>Gets or sets a Boolean that indicates if tasks should suspend when they encounter a breakpoint. This value is set by the runtime engine for tasks and containers when a breakpoint is encountered.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.IsDefaultLocaleID">
      <summary>Gets a Boolean that indicates whether the container uses the default locale. This property is read-only.</summary>
      <returns>true if the container uses the default locale; otherwise, false. The default value for this property is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> object. </summary>
      <returns>An integer value that corresponds to the isolation level.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> from the specified XML document.</summary>
      <param name="pNode">The XmlNode that contains the information to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.LocaleID">
      <summary>Gets or sets an Integer that indicates the Microsoft Win32® localeID to use when the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> object is executed. </summary>
      <returns>An Integer that represents the locale. A value of –1 indicates that the parent locale should be used. Otherwise, the LocaleID set on this container is used.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.LogEntryInfos">
      <summary>Gets a collection of log entry definitions. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.LoggingMode">
      <summary>Gets or sets a value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode" /> enumeration that indicates the logging mode of the container.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode" /> enumeration that indicates the logging mode of the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.LoggingOptions">
      <summary>Gets an object that contains properties that indicates the filtering and logging resource for containers. This property is read-only.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100" /> object that contains the available logging provider options and filters for containers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.MaximumErrorCount">
      <summary>Gets or sets an Integer value that specifies the maximum number of errors that can occur before the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> object stops running.</summary>
      <returns>An Integer that specifies the maximum number of errors allowed. The default value of this property is 1.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" />.</summary>
      <returns>A String value that specifies the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.Parent">
      <summary>Gets the parent container. The value is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object that is the parent of this <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> instance. Returns null if there is no parent.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.PrecedenceConstraints">
      <summary>Gets a collection of precedence constraints, if any, found on the executable objects in this container. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.Properties">
      <summary>Gets a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> object that represents the collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> objects.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.RegenerateID">
      <summary>Creates a new GUID for the container and updates the container ID property.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ResumeExecution">
      <summary>Resumes execution of the task after pausing. The task or container is resumed by the runtime engine. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass" /> to the specified XML document.</summary>
      <param name="pDoc">The XML document to which to save the information.</param>
      <param name="pNode">The node within the above document to which to save the information.</param>
      <param name="pEvents">An object that implements the events to raise errors, warnings, or informational events.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property. Specify null to remove an existing expression from the property.</summary>
      <param name="bstrPropertyName">The name of the property to which to assign the expression.</param>
      <param name="bstrExpression">The expression to set.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.StartTime">
      <summary>Gets the time when the container starts execution. This property is read-only. </summary>
      <returns>A DateTime value that represents the date and time when the container starts execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.StopTime">
      <summary>Gets the time when the container stops execution. This property is read-only. </summary>
      <returns>A DateTime value that represents the date and time when the container stops execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.SuspendExecution">
      <summary>Notifies that the executable needs to suspend. This method is called by the runtime engine. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.SuspendRequired">
      <summary>Gets or sets a Boolean that indicates if tasks should suspend when they encounter a breakpoint. This value is set by the runtime engine for tasks and containers when a breakpoint is encountered.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.TransactionOption">
      <summary>Gets or sets a value that indicates whether the container participates in transactions.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration that indicates if this container can be part of transactions.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the container to determine if it contains invalid settings that will prevent it from executing successfully.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the validation.</returns>
      <param name="pConnections">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> collection for the container.</param>
      <param name="pVariables">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100" /> collection for the container.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.VariableDispenser">
      <summary>Gets a variable dispenser object so that variables associated with the container can be locked for reading or writing. </summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object that can be used to locked variables associated with the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.Variables">
      <summary>Gets a collection object that contains the variables associated with this container. This property is read-only.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100" /> object that represents a collection of variables associated with this container.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluator">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass">
      <summary>Provides virtual properties and methods for <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100" /> interface.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass.Evaluate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,System.Object@,System.Boolean)">
      <summary>Calls an external expression evaluator that evaluates the expression.</summary>
      <param name="pVariableDispenser">The object that is used to access the collection of variables.</param>
      <param name="pvResult">When this method returns, contains the result of the evaluation. This parameter is passed uninitialized.</param>
      <param name="vbSetVariable">true to indicate that the result is assigned to a variable; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass.EvaluatorContext">
      <summary>Sets the context of the evaluator.</summary>
      <returns>Property is write-only and does not return a value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass.Events">
      <summary>Sets the events that can be raised during evaluation.</summary>
      <returns>Property is write-only and does not return a value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass.Expression">
      <summary>Sets the string expression to evaluate.</summary>
      <returns>Property is write-only and does not return a value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass.IsAssignmentExpression(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,System.Boolean@)">
      <summary>Determines whether the expression is an assignment expression.</summary>
      <param name="pVariableDispenser">The object that is used to access the collection of variables.</param>
      <param name="pvbIsBoolean">When this method returns, contains a value that indicates whether the expression is an assignment expression.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass.IsBooleanExpression(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,System.Boolean@)">
      <summary>Determines whether the expression is a Boolean expression.</summary>
      <param name="pVariableDispenser">The object that is used to access the collection of variables.</param>
      <param name="pvbIsBoolean">When this method returns, contains a value that indicates whether the expression is a Boolean expression.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass.LocaleID">
      <summary>Gets or sets the locale identifier.</summary>
      <returns>The locale identifier.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHost">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass">
      <summary>Defines the host class for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" />. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.CollectionEnumerator">
      <summary>Gets or sets a Boolean that indicates if the hosting enumerator is enumerating collections of objects or enumerating collections of collections.</summary>
      <returns>true if the hosting enumerator is enumerating collections of objects; false if the hosting enumerator is enumerating collections of collections.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.ComputeExpressions(System.Boolean)">
      <summary>Computes the expressions in the property collection.</summary>
      <param name="recursive">true to apply recursive action on the expressions in the property collection; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.CreationName">
      <summary>Returns the string that is used by the run-time to create an instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" /> object. This property is read-only.</summary>
      <returns>A String that contains the name. The name may be the fully qualified assembly name (for managed assemblies), or it may be the PROGID or CLSID (for COM DLLs).</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.DelayValidation">
      <summary>Gets or sets a Boolean that indicates whether <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" /> validation is delayed until the package runs.</summary>
      <returns>true if validation is delayed until package runtime; otherwise, false. The default value for this property is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.Description">
      <summary>Gets or sets description for the host.</summary>
      <returns>A String that contains the description.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.GetEnumerator(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Returns an IEnumerator interface for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" />.</summary>
      <returns>An IEnumerator object for iterating through the collection.</returns>
      <param name="pConnections">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> collection of the package.</param>
      <param name="pVariableDispenser">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object for locking variables.</param>
      <param name="pEvents">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> supplied by the package.</param>
      <param name="pLog">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.GetExpression(System.String)">
      <summary>Returns a String that contains the expression for the specified property. Null means no expression is assigned.</summary>
      <returns>A String that contains the expression used to evaluate the property.</returns>
      <param name="bstrPropertyName">The name of the property whose expression you want to get.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.HostType">
      <summary>Gets an enumeration that describes the type of host that the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" /> is being used by. This property is read-only.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.ID">
      <summary>Returns the GUID assigned to the host.</summary>
      <returns>A String that contains the GUID assigned to the host.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.InitializeForEachEnumerator(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker100)">
      <summary>Initializes the properties associated with the task.</summary>
      <param name="pConnections">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> collection of the package.</param>
      <param name="pEvents">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> supplied by the package.</param>
      <param name="pRefTracker">Reserved for future use. Use null.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.InnerObject">
      <summary>Returns the inner object of the host, which is the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" /> that is being hosted.</summary>
      <returns>The object that represents the inner object of the host.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.Name">
      <summary>Gets or sets a name for the host.</summary>
      <returns>A String that contains the name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.Properties">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> objects. Each <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> has additional information about each task in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" />.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property. Specify null to remove an existing expression from the property.</summary>
      <param name="bstrPropertyName">The name of the property to which to assign the expression.</param>
      <param name="bstrExpression">The expression to associate with the property.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the host to determine if there are invalid settings that will prevent the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" /> from executing successfully.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the validation.</returns>
      <param name="pConnections">A collection of connections used by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" />.</param>
      <param name="pVariableDispenser">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object for locking variables.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface.</param>
      <param name="pLog">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumerator">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass">
      <summary>Implements an enumerator over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItem100" /> collection.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.CreationName">
      <summary>Returns the string that is used by the run-time to create an instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass" /> object.</summary>
      <returns>A String that contains the name. The name may be the fully qualified assembly name (for managed assemblies), or it may be the PROGID or CLSID (for COM DLLs).</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.Description">
      <summary>Gets or sets description for the enumerator class.</summary>
      <returns>A String that contains the description.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.ExportXML(System.String)">
      <summary>Exports data to an .xml file.</summary>
      <param name="bstrFileName">The name of the .xml file to which to export data.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.ID">
      <summary>Returns the GUID assigned to the enumerator class.</summary>
      <returns>A String that contains the GUID assigned to the enumerator class.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.ImportXML(System.String)">
      <summary>Imports XML into the collection.</summary>
      <param name="bstrFileName">The name of the .xml file from which to import data.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.Items">
      <summary>Gets or sets a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100" />.</summary>
      <returns>A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.Name">
      <summary>Gets or sets a name for the enumerator class.</summary>
      <returns>A String that contains the name.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoop">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass">
      <summary>Provides a container that defines an iterative workflow in a package using the foreach iteration statement.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)">
      <summary>Accepts an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100" /> manager, that is called by the run-time engine when a task or container is created, to allow the task to create, remove, and check the status of breakpoints. This method is called by the runtime and is not used in code.</summary>
      <param name="pBreakpointManager">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100" /> to use for controlling breakpoints on this task or container.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ComputeExpressions(System.Boolean)">
      <summary>Computes the expressions in the property collection.</summary>
      <param name="recursive">true to apply recursive action on the expressions in the property collection; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.CreationName">
      <summary>Returns the string that is used to create an instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> object. This property is read-only.</summary>
      <returns>A String that contains the name. The name may be the fully qualified assembly name (for managed assemblies), the PRogID, or the CLSID (for COM DLLs).</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.DebugMode">
      <summary>Gets or sets a Boolean that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> object is in debug mode and whether it should fire the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnBreakpointHit(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100)" /> event while running. </summary>
      <returns>true if the object is in debug mode and fires the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnBreakpointHit(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100)" /> event; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.DelayValidation">
      <summary>Gets or sets a Boolean that indicates whether validation of the task is delayed until run time. The default value is false.</summary>
      <returns>true if validation of the package is delayed until run time. false if the package is validated, and errors and warnings are returned before the package is actually executed. false may prevent the package from running if errors or warnings occur that exceed the MaximumErrorCount property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.Description">
      <summary>Gets or sets the description of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> object.</summary>
      <returns>A String that contains the description given to the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.Disable">
      <summary>Gets a Boolean that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> object is disabled. </summary>
      <returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> is disabled and the object will not execute; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.DisableEventHandlers">
      <summary>Gets a Boolean that indicates whether event handlers on task are disabled.</summary>
      <returns>true if event handlers on task are disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.EventHandlers">
      <summary>Gets a collection of event handler objects. This field is read-only.</summary>
      <returns>A collection of event handlers in a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.EventInfos">
      <summary>Gets a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> objects. This field is read-only.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.Executables">
      <summary>Gets a collection of executable objects.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100" /> object that contains a collection of executable objects.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Executes the executable.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> collection.</param>
      <param name="pVariables">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100" /> collection.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The handle to a transaction type if participating in a transaction. This value can be null.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ExecutionDuration">
      <summary>Returns a value that indicates the amount of time that the container spent in execution, in milliseconds. This property is read-only. </summary>
      <returns>An Integer that contains the time that the container spent executing. The time is given in milliseconds.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ExecutionResult">
      <summary>Returns a value that indicates the success or failure of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ExecutionStatus">
      <summary>Returns a value that indicates the current status of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> object at the time of the call.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the status of the execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.FailPackageOnFailure">
      <summary>Gets or sets a Boolean that indicates whether the package fails when a child container fails. </summary>
      <returns>true if a failure in the container will set the package execution results to failure; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.FailParentOnFailure">
      <summary>Gets or sets a Boolean that defines whether the parent container fails when a child container fails.</summary>
      <returns>true if the package fails if an error occurs in a child container; otherwise, false. The default value of this property is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ForcedExecutionValue">
      <summary>If the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ForceExecutionValue" /> property is set to true, gets or sets a value that specifies the optional execution value that the package returns.</summary>
      <returns>A value that specifies the optional execution value that the package returns.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ForceExecutionResult">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration value that specifies the forced execution result of the container. </summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ForceExecutionValue">
      <summary>Gets or sets a Boolean that indicates whether the execution value of the container should be forced to contain a particular value.</summary>
      <returns>true if the execution value of the container should be forced to contain a particular value; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ForEachEnumerator">
      <summary>Gets or sets a host for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumerator100" />.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumerator100" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.GetExpression(System.String)">
      <summary>Returns a String that contains the expression for the specified property. Null means no expression is assigned.</summary>
      <returns>A String that contains the expression used to evaluate the property.</returns>
      <param name="bstrPropertyName">The name of the property whose expression you want to get.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.GetParentID">
      <summary>Gets the ID of the parent container.</summary>
      <returns>A string that represents the ID of the parent container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ID">
      <summary>Gets the GUID of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" />. The value is read-only.</summary>
      <returns>A GUID that identifies the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.IDTSForEachLoop100_Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Executes the executable.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> collection.</param>
      <param name="pVariables">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100" /> collection.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The handle to a transaction type if participating in a transaction. This value can be null.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.IDTSForEachLoop100_Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verify that the executable will successfully execute by validating all its dependencies and other items before executing it. </summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> collection.</param>
      <param name="pVariables">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100" /> collection.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.IDTSSuspend100_ResumeExecution">
      <summary>Resumes execution of the task after pausing. The task or container is resumed by the runtime engine. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.IDTSSuspend100_SuspendExecution">
      <summary>Indicates that the executable needs to suspend. This method is called by the runtime engine. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.IDTSSuspend100_SuspendRequired">
      <summary>Gets or sets a Boolean that indicates if tasks should suspend when they encounter a breakpoint. This value is set by the runtime engine for tasks and containers when a breakpoint is encountered.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; false if it ignores the breakpoint.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.IsDefaultLocaleID">
      <summary>A Boolean that indicates whether the container uses the default locale. This property is read-only.</summary>
      <returns>true if the container uses the default locale; otherwise, false. The default value for this property is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> object.</summary>
      <returns>An integer value that corresponds to the isolation level.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads data stored in XML format.</summary>
      <param name="pNode">The node that contains the data to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for raising events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.LocaleID">
      <summary>Gets or sets an Integer that indicates the Microsoft Win32® localeID to use when the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> object is executed.</summary>
      <returns>An Integer that represents the locale. A value of –1 indicates that the parent locale should be used. Otherwise, the LocaleID set on this container is used.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.LogEntryInfos">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100" /> object for the container. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.LoggingMode">
      <summary>Gets or sets a valid value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode" /> enumeration that indicates the logging mode of the container.</summary>
      <returns>One of the values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.LoggingOptions">
      <summary>Gets an object that contains properties that indicates the filtering and logging resource for containers. This property is read-only.</summary>
      <returns>An object that contains the available logging provider options and filters for containers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.MaximumErrorCount">
      <summary>Gets or sets an Integer value that indicates the maximum number of errors that can occur before the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> object stops running.</summary>
      <returns>An Integer that indicates the maximum number of errors allowed. The default value of this property is 1.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" />.</summary>
      <returns>A String that indicates the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.Parent">
      <summary>Gets the parent container. The value is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object that is the parent of the current <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass" /> instance. Returns null if there is no parent.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.PrecedenceConstraints">
      <summary>Gets an <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection that contains all of the precedence constraints associated with the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop" />.</summary>
      <returns>An <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.Properties">
      <summary>Returns a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> objects associated with the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoop" />.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.RegenerateID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ResumeExecution">
      <summary>Resumes execution of the task after pausing. The task or container is resumed by the runtime engine. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves information to an XML document.</summary>
      <param name="pDoc">The XML document to which to save the information.</param>
      <param name="pNode">The node in the above document to which to save the information.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for raising events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property. Specify null to remove an existing expression from the property.</summary>
      <param name="bstrPropertyName">The name of the property to which to assign the expression.</param>
      <param name="bstrExpression">The expression string.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.StartTime">
      <summary>Gets the time that the container began execution. This property is read-only.</summary>
      <returns>A DateTime value that indicates when the container started running.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.StopTime">
      <summary>Gets the time that the container ended execution. This property is read-only.</summary>
      <returns>A DateTime value that indicates when the container completed.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.SuspendExecution">
      <summary>Indicates that the executable needs to suspend. This method is called by the runtime engine. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.SuspendRequired">
      <summary>Gets or sets a Boolean that indicates if tasks should suspend when they encounter a breakpoint. This value is set by the runtime engine for tasks and containers when a breakpoint is encountered.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; false if it ignores the breakpoint.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.TransactionOption">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration value that indicates whether the container participates in transactions.</summary>
      <returns>One of the values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration that indicates if this container can be part of transactions.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verify that the executable will successfully execute by validating all its dependencies and other items before executing it. </summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> collection.</param>
      <param name="pVariables">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100" /> collection.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.VariableDispenser">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object so variables associated with the container can be locked. </summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.VariableMappings">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100" /> collection that contains the variable mappings for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoop" />.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.Variables">
      <summary>Returns a collection that contains the variables associated with this container. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100" /> collection.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoop">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass">
      <summary>Provides a container that defines an iterative workflow in a package, using the for iteration statement.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)">
      <summary>Passes a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100" /> to a task. The task will use the breakpoint manager to create, remove, and check the status of breakpoints. This method is called by the runtime and is not used in code.</summary>
      <param name="pBreakpointManager">The breakpoint manager specific for this task.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.AssignExpression">
      <summary>Gets or sets an expression to increment or decrement the loop counter.</summary>
      <returns>A String that contains the expression that increments or decrements the loop counter.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ComputeExpressions(System.Boolean)">
      <summary>Computes the expressions of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass" /> object.</summary>
      <param name="recursive">true to include the compute expressions of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass" /> object recursively; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.CreationName">
      <summary>Returns the name that is used by the runtime to create an instance of the object and add it to its collection, if there is a collection for the object. This property is read-only.</summary>
      <returns>A String that contains the name. The name may be the fully qualified assembly name (for managed assemblies), or it may be the PROGID or CLSID (for COM DLLs).</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.DebugMode">
      <summary>Gets or sets a Boolean that indicates whether a task should check if breakpoints are enabled.</summary>
      <returns>true if the task should check if breakpoints are enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.DelayValidation">
      <summary>Gets or sets a value that indicates whether validation of the task is delayed until run time.</summary>
      <returns>true if the validation of the task is delayed until run time; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.Description">
      <summary>Gets or sets a description about the object.</summary>
      <returns>A String that contains information about the object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.Disable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object is disabled.</summary>
      <returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object is disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.DisableEventHandlers">
      <summary>Gets or sets a Boolean that indicates whether the event handlers on task are disabled. </summary>
      <returns>true if the event handlers on task are disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.EvalExpression">
      <summary>Gets or sets the expression that is evaluated on each pass of the loop.</summary>
      <returns>A String that contains the expression used to test whether the loop should stop or continue looping.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.EventHandlers">
      <summary>Returns a collection of event handler objects. This field is read-only.</summary>
      <returns>A collection of event handlers in a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.EventInfos">
      <summary>Returns a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> objects. This field is read-only.</summary>
      <returns>Returns an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.Executables">
      <summary>Returns a collection of executable objects that are processed during the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass" /> iteration.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100" /> collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Executes the executable.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">The interface that raises events.</param>
      <param name="pLog">The logging interface.</param>
      <param name="pTransaction">The handle to a transaction type if participating in a transaction.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ExecutionDuration">
      <summary>Returns a value that indicates the amount of time that the container spent in execution, in milliseconds. This property is read-only.</summary>
      <returns>An Integer that contains the amount of time that the container spent executing. The time is given in milliseconds.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ExecutionResult">
      <summary>Gets a value that indicates the success or failure of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object.</summary>
      <returns>The result of an execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ExecutionStatus">
      <summary>Gets the current status of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object at the time of the call.</summary>
      <returns>The current status of the execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.FailPackageOnFailure">
      <summary>Gets or sets a value that indicates whether the package fails when a child container fails.</summary>
      <returns>true if the package fails when a child container fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.FailParentOnFailure">
      <summary>Gets or sets a value that indicates whether the parent container fails when a child container fails.</summary>
      <returns>true if the parent container fails when a child container fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ForcedExecutionValue">
      <summary>When <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ForceExecutionValue" /> is true, gets or sets a value that specifies the optional execution value that the package returns.</summary>
      <returns>An object that specifies the optional execution value that the package returns.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ForceExecutionResult">
      <summary>Gets or sets the forced execution result of the container.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration that reports the forced success or failure of the package or container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ForceExecutionValue">
      <summary>Gets or sets a value that indicates whether the execution value of the container should be forced to contain a particular value.</summary>
      <returns>true if the execution value of the container should be forced to contain a particular value; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.GetExpression(System.String)">
      <summary>Returns a String that contains the expression for the specified property. Null means no expression is assigned.</summary>
      <returns>A String that contains the expression used to evaluate the property.</returns>
      <param name="bstrPropertyName">The name of the property whose expression you want to see.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.GetParentID">
      <summary>Gets the parent identifier of this container.</summary>
      <returns>The parent identifier of this container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ID">
      <summary>Returns a unique ID assigned to the object. This is usually a GUID. This property is read-only.</summary>
      <returns>A String that contains a unique ID, usually a GUID.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.IDTSForLoop100_Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Executes the executable.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">The interface that raises events.</param>
      <param name="pLog">The logging interface.</param>
      <param name="pTransaction">The handle to a transaction type if participating in a transaction.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.IDTSForLoop100_Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verify that the executable will successfully execute by validating all its dependencies and other items before executing it.</summary>
      <returns>The result that indicates success, failure, or other status from validating the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">The interface that raises events.</param>
      <param name="pLog">The logging interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.IDTSSuspend100_ResumeExecution">
      <summary>Resumes execution of the task after pausing. The task or container is resumed by the runtime engine.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.IDTSSuspend100_SuspendExecution">
      <summary>Indicates that the executable needs to suspend. This method is called by the runtime engine.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.IDTSSuspend100_SuspendRequired">
      <summary>Gets or sets a Boolean that indicates whether tasks should suspend when they encounter a breakpoint. This value is set by the runtime engine for tasks and containers when a breakpoint is encountered.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.InitExpression">
      <summary>Gets or sets an optional initialization expression.</summary>
      <returns>A String that contains an optional initialization expression.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.IsDefaultLocaleID">
      <summary>Gets a value that indicates whether the container uses the default locale.</summary>
      <returns>true if the container uses the default locale; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object.</summary>
      <returns>The isolation level of the transaction in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads data stored in XML format.</summary>
      <param name="pNode">The node that contains the data to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for raising events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.LocaleID">
      <summary>Gets or sets the identifier of the locale to use when the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object is executed.</summary>
      <returns>The identifier of the locale.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.LogEntryInfos">
      <summary>Gets a collection of information about a log entry.</summary>
      <returns>A collection of information about a log entry.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.LoggingMode">
      <summary>Gets or sets the logging mode of the container.</summary>
      <returns>The logging mode of the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.LoggingOptions">
      <summary>Gets an object that contains properties that indicates the filtering and logging resource for containers.</summary>
      <returns>The filtering and logging resource for containers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.MaximumErrorCount">
      <summary>Gets or sets the maximum number of errors that can occur before the container stops running.</summary>
      <returns>The maximum number of errors allowed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.Name">
      <summary>Gets or sets a name assigned to the object.</summary>
      <returns>A String that contains the object name. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.Parent">
      <summary>Gets the parent of the container.</summary>
      <returns>The parent of the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.PrecedenceConstraints">
      <summary>Returns a <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection. This field is read-only.</summary>
      <returns>A <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.Properties">
      <summary>Returns a set of properties for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass" /> into a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.RegenerateID">
      <summary>Creates a new identifier for the container and updates the container identifier.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ResumeExecution">
      <summary>Resumes execution of the task after pausing. The task or container is resumed by the runtime engine.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves information to an XML document.</summary>
      <param name="pDoc">The XML document to which to save the information.</param>
      <param name="pNode">The node in the above document to which to save the information.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property. Specify null to remove an existing expression from the property.</summary>
      <param name="bstrPropertyName">The name of the property that will store the expression.</param>
      <param name="bstrExpression">The expression to assign.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.StartTime">
      <summary>Returns the time that the container began execution. This property is read-only.</summary>
      <returns>A DateTime value that indicates when the container started running.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.StopTime">
      <summary>Returns the time that the container ended execution. This property is read-only. </summary>
      <returns>A DateTime value that indicates when the container completed.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.SuspendExecution">
      <summary>Indicates that the executable needs to suspend. This method is called by the runtime engine.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.SuspendRequired">
      <summary>Gets or sets a Boolean that indicates whether tasks should suspend when they encounter a breakpoint. This value is set by the runtime engine for tasks and containers when a breakpoint is encountered.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.TransactionOption">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration value that indicates whether the container participates in transactions.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration that indicates if this container can be part of transactions.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verify that the executable will successfully execute by validating all its dependencies and other items before executing it.</summary>
      <returns>The result that indicates success, failure, or other status from validating the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">The interface that raises events.</param>
      <param name="pLog">The logging interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.VariableDispenser">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object so variables associated with the container can be locked.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object so variables associated with the container can be locked.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.Variables">
      <summary>Gets a collection that contains the variables associated with this container.</summary>
      <returns>A collection of variables.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class">
      <summary>Provides properties and methods for an FTP client task.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.ChunkSize">
      <summary>Gets or sets the amount of data in bytes for the data transfer.</summary>
      <returns>The amount of data in bytes for the data transfer.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.Close">
      <summary>Closes connection to the FTP server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.Connect">
      <summary>Attempts to establish a connection to FTP server.</summary>
      <returns>true if connection is successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.CreateRemoteDirectory(System.String)">
      <summary>Creates the specified folder on the FTP server.</summary>
      <param name="remoteDirectoryPath">The folder to create on the FTP server.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.DeleteFiles(System.String[])">
      <summary>Deletes the list of files on the FTP server.</summary>
      <param name="remoteFiles">The list of files to delete on the FTP server.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.DeleteRemoteDirectory(System.String)">
      <summary>Deletes the specified folder on the FTP server.</summary>
      <param name="remoteDirectoryPath">The folder to delete on the FTP server.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.GetListing(System.String[]@,System.String[]@)">
      <summary>Gets a listing of files on the current working directory.</summary>
      <param name="pFolderNames">When this method returns, contains the list of folders found on the current working directory.</param>
      <param name="pFileNames">When this method returns, contains the list of files found on the current working directory.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.GetWorkingDirectory">
      <summary>Gets the current working directory.</summary>
      <returns>The current working directory.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.ReceiveFiles(System.String[],System.String,System.Boolean,System.Boolean)">
      <summary>Receives the files from the FTP server.</summary>
      <param name="remoteFileNames">A list of files to receive from the FTP server.</param>
      <param name="localPath">The local folder into which the received files are saved.</param>
      <param name="overWrite">true to overwrite destination files if it exist; otherwise, false.</param>
      <param name="transferASCII">true to transfer files from FTP server in ASCII mode; false, to transfer files from FTP server in binary mode.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.Retries">
      <summary>Gets or sets the number of times the task attempts an operation.</summary>
      <returns>The number of times the task attempts an operation.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.SendFiles(System.String[],System.String,System.Boolean,System.Boolean)">
      <summary>Sends the files from the local computer to the FTP server.</summary>
      <param name="localFileNames">A list of files to send to the FTP server.</param>
      <param name="remotePath">The remote folder to which the sent files are saved.</param>
      <param name="overWrite">true to overwrite destination files if it exist; otherwise, false.</param>
      <param name="transferASCII">true to transfer files to FTP server in ASCII mode; false, to transfer files to FTP server in binary mode.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.ServerName">
      <summary>Gets or sets the name of the FTP server.</summary>
      <returns>The name of the FTP server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.ServerPassword">
      <summary>Gets or sets the password for authentication.</summary>
      <returns>The password for authentication.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.ServerPort">
      <summary>Gets or sets the FTP server port.</summary>
      <returns>The FTP server port.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.ServerUserName">
      <summary>Gets or sets the logon alias of the user.</summary>
      <returns>The logon alias of the user.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.SetWorkingDirectory(System.String)">
      <summary>Sets the current working directory to the specified path.</summary>
      <param name="currentDirectory">The path to set as the current working directory.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.Timeout">
      <summary>Gets or sets a value that indicates how long to attempt the connection before timing out.</summary>
      <returns>A value that indicates how long to attempt the connection before timing out.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection100Class.UsePassiveMode">
      <summary>Gets or sets a value that indicates whether the task sends and receives files in passive mode.</summary>
      <returns>true if the task sends and receives files in passive mode; false if the task sends and receives files in active mode.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class">
      <summary>Contains properties and methods that enable a package to access a Web server using the HTTP protocol to send or receive files. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.BypassProxyOnLocal">
      <summary>Gets or sets a Boolean that indicates if the proxy server is configured to use credentials and bypass the proxy server and use local addresses instead.</summary>
      <returns>A Boolean that indicates whether or not to bypass the proxy for local addresses.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.Certificate">
      <summary>Gets or sets a byte array that represents the actual X.509 binary encoding of the certificate.</summary>
      <returns>A byte array that contains the binary encoding of the X.509 certificate.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.CertificateIdentifier">
      <summary>Gets or sets the X.509 certificate identifier.</summary>
      <returns>A string representation of the current X.509 Certificate object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ChunkSize">
      <summary>Gets or sets the value that indicates the minimum number of bytes to retrieve from or send to the server during a read/write operation.</summary>
      <returns>An Integer that contains the minimum number of bytes to retrieve or send.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.Clone">
      <summary>Returns a new connection object that has the exact same state as the one being cloned.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.DownloadData">
      <summary>Returns a byte array that contains the data downloaded from the resource that was specified in the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ServerURL" /> property.</summary>
      <returns>A byte array that contains the downloaded data.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.DownloadFile(System.String,System.Boolean)">
      <summary>Downloads data from the resource specified by <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ServerURL" /> property to a local file.</summary>
      <param name="FileName">The name of the local file into which the downloaded data is stored.</param>
      <param name="vbOverwriteDestination">A Boolean that indicates whether to overwrite an existing file, if found. A value of true will overwrite the existing file.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.GetProxyPassword">
      <summary>Gets the proxy password.</summary>
      <returns>A String containing the proxy password.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.GetServerPassword">
      <summary>Gets the server password.</summary>
      <returns>A String containing the server password.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.OpenRead">
      <summary>Opens a readable stream for the data to be downloaded from the resource specified by the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ServerURL" /> property.</summary>
      <returns>A Stream used to read data from the resource.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ProxyBypassList">
      <summary>Gets or sets the addresses that do not use a proxy server.</summary>
      <returns>An array of addresses that do not use the proxy server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ProxyDomain">
      <summary>Gets or sets the domain setting that is used to log on to the proxy.</summary>
      <returns>A String that contains the domain used to log on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ProxyPassword">
      <summary>Sets the password used to log on to the proxy. This property is read-only.</summary>
      <returns>A String that contains the password used to log on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ProxyURL">
      <summary>Gets or sets the URL that specifies the location of the proxy.</summary>
      <returns>A String that contains the URL location of the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ProxyUserName">
      <summary>Gets or sets the username that is used when logging on to the proxy.</summary>
      <returns>A String that contains the username used to log on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ServerDomain">
      <summary>Gets or sets the domain used to log on to the server.</summary>
      <returns>A String that contains the domain used to log on to the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ServerPassword">
      <summary>Sets the password used to log on to the server. This property is write-only.</summary>
      <returns>A String that contains the password used to log on to the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ServerURL">
      <summary>Gets or sets the URL that specifies the location of the server.</summary>
      <returns>A String that contains the location of the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ServerUserName">
      <summary>Gets or sets the username used to log on to the server.</summary>
      <returns>A String that contains the username used to log on to the server.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.ShowCertificateDialog(System.Int64)">
      <summary>Displays the Windows certificate information dialog box.</summary>
      <param name="hWnd">Handle to a window.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.Timeout">
      <summary>Gets or sets the number of seconds after which the HTTP operation times out.</summary>
      <returns>An Integer that contains the number of seconds after which the HTTP operation times out.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.UseProxy">
      <summary>Gets or sets a Boolean that indicates whether or not the connection will use a proxy.</summary>
      <returns>A Boolean that indicates if the connection will use a proxy. A value of true indicates that the connection will use a proxy. A value of false indicates that the connection will not use a proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.UseProxyCredentials">
      <summary>Gets or sets a Boolean that indicates whether or not the connection will use network credentials.</summary>
      <returns>A Boolean that indicates if the proxy connection will use network credentials. A value of true indicates that the connection will use network credentials. A value of false indicates that the connection will not use network credentials.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.UseSecureConnection">
      <summary>Gets or sets a Boolean that indicates whether the connection is HTTPS or HTTP.</summary>
      <returns>A Boolean that indicates whether the connection is HTTPS or HTTP. A value of true means that a secure HTTPS connection is used. A value of false means that a secure connection is not used. Instead, HTTP is used.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class.UseServerCredentials">
      <summary>Gets or sets a Boolean that indicates whether the connection uses network credentials.</summary>
      <returns>A Boolean that indicates whether the connection will use network credentials. A value of true indicates that network credentials are used.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100">
      <summary>Provides properties and methods that are used to discover and access <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package" /> objects.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.CheckSignatureOnLoad">
      <summary>Gets or sets a value that indicates whether the runtime should check the digital signature of the package when loading the package.</summary>
      <returns>true if the runtime checks the digital signature when loading a package; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.CloseProject(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100)">
      <summary>Closes a specified project.</summary>
      <param name="pProject">The project to be closed.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.ComponentStorePath">
      <summary>Returns the path where pipeline components are stored. This property is read-only. </summary>
      <returns>A String that indicates the location of the pipeline components.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.ConnectionInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100" /> objects. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.CreateFolderOnDtsServer(System.String,System.String,System.String)">
      <summary>Creates a folder on the server that appears in the Stored Packages node of the Integration Services service hierarchy. </summary>
      <param name="bstrParent">The name of the top level folder to save this folder under.</param>
      <param name="bstrNewFolderName">The name to give to the newly created folder.</param>
      <param name="bstrServerName">The name of the server running the Integration Services service.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.CreateFolderOnSQLServer(System.String,System.String,System.String,System.String,System.String)">
      <summary>Creates a folder on the specified instance of SQL Server.</summary>
      <param name="bstrParent">The name of the parent folder. If you want to create a folder under the File System node, use the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.CreateFolderOnDtsServer(System.String,System.String,System.String)" /> method.</param>
      <param name="bstrNewFolderName">The name of the folder to create.</param>
      <param name="bstrServerName">The name of the instance of SQL Server.</param>
      <param name="bstrServerUserName">The user name to use when authenticating on the server.</param>
      <param name="bstrServerPassword">The password associated with the <paramref name="bstrServerUserName" /> account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.CreateSsisServerExecution(System.String,System.String,System.String,System.Boolean)">
      <summary>Creates SSIS server execution.</summary>
      <returns>The created SSIS server.</returns>
      <param name="bstrServerName">The server name.</param>
      <param name="bstrPackagePath">The path for the package.</param>
      <param name="bstrReferenceId">The reference identifier.</param>
      <param name="bUse32BitRuntime">Indicates if the 32-bit runtime is used to run the package on a 64-bit operating system.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.DataTypeInfoFromDataType(Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType)">
      <summary>Returns the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100" /> object for the specified data type. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100" /> object.</returns>
      <param name="dt">The data type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.DataTypeInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100" /> objects. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.DBProviderInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100" /> objects in the application. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfos100" /> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100" /> objects for the application. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.ExistsOnDtsServer(System.String,System.String)">
      <summary>Returns a Boolean that indicates whether the specified package already exists on the Integration Services service.</summary>
      <returns>true if the package specified by <paramref name="bstrPackagePath" /> exists on the server named by <paramref name="bstrServerName" />; otherwise, false.</returns>
      <param name="bstrPackagePath">The fully qualified path of the package.</param>
      <param name="bstrServerName">The name of the server to search for the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.ExistsOnSQLServer(System.String,System.String,System.String,System.String)">
      <summary>Returns a Boolean that indicates whether the specified package exists on the instance of SQL Server.</summary>
      <returns>true if the package exists on the specified instance of SQL Server. false if the package does not exist.</returns>
      <param name="bstrPackagePath">The package you are looking for.</param>
      <param name="bstrServerName">The name of the instance of SQL Server to search for the package.</param>
      <param name="bstrServerUserName">The user name to authenticate against the instance of SQL Server.</param>
      <param name="bstrServerPassword">The password for the specified <paramref name="bstrServerUserName" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.FolderExistsOnDtsServer(System.String,System.String)">
      <summary>Returns a Boolean that indicates whether the specified folder already exists on the file system.</summary>
      <returns>true if the folder specified exists on the server; false if the folder does not exist.</returns>
      <param name="bstrFolderName">The name of the folder you are looking for. For example, to see if a folder name <paramref name="myFolder" /> exists under the File System folder, use the escaped string, @"\File System\myFolder".</param>
      <param name="bstrServerName">The name of the server to search for the folder.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.FolderExistsOnSQLServer(System.String,System.String,System.String,System.String)">
      <summary>Returns a Boolean that indicates whether the specified folder already exists on the instance of SQL Server.</summary>
      <returns>true if the folder exists on the specified instance of SQL Server; false if the folder does not exist.</returns>
      <param name="bstrFolderName">The folder you are looking for.</param>
      <param name="bstrServerName">The name of the instance of SQL Server to search for the folder.</param>
      <param name="bstrServerUserName">The user name to authenticate against the instance of SQL Server.</param>
      <param name="bstrServerPassword">The password for the given <paramref name="bstrServerUserName" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.FolderFromPath(System.String,System.String,System.String,System.String)">
      <summary>Returns a Boolean that indicates whether the specified folder already exists on the file system.</summary>
      <returns>true if the folder exists on the specified instance of <paramref name="bstrServerName" />; false if the folder does not exist.</returns>
      <param name="bstrFolderName">The folder you are looking for.</param>
      <param name="bstrServerName">The name of the server to search for the folder.</param>
      <param name="bstrServerUserName">The user name to authenticate against the instance of <paramref name="bstrServerName" />.</param>
      <param name="bstrServerPassword">The password for the given <paramref name="bstrServerUserName" />.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.ForEachEnumeratorInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfo100" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100" /> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfo100" /> objects in the application. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.GetDtsServerPackageInfos(System.String,System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100" /> collection that contains the packages stored in the SSIS Package Store on an instance of SQL Server, within the specified folder.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100" /> objects.</returns>
      <param name="bstrPackageFolder">The folder under Stored Packages that contains the packages you want to enumerate.</param>
      <param name="bstrServerName">The name of the SQL Server instance where the packages reside.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.GetDtsServerRoles(System.String,System.String)">
      <summary>Returns an array of Strings that lists the roles available for a folder.</summary>
      <returns>An array of Strings, each string containing a role name.</returns>
      <param name="bstrFolderPath">The folder whose roles you are interested in.</param>
      <param name="bstrServerName">The name of the instance that is running the Integration Services service.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.GetPackageInfos(System.String,System.String,System.String,System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100" /> collection that contains the packages stored in an instance of SQL Server, within the specified logical folder, by using the server name, user name, and password.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100" /> objects.</returns>
      <param name="bstrPackageFolder">The logical folder that contains the packages you want to enumerate.</param>
      <param name="bstrServerName">The name of the SQL Server instance where the packages reside.</param>
      <param name="bstrServerUserName">The account name used to log on to the instance of SQL Server, if you need to log in to SQL Server using standard authentication. If you are using Windows Authentication, use null.</param>
      <param name="bstrServerPassword">The password of the user account, if you need to log in to SQL Server using standard authentication. If you are using Windows Authentication, use null.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.GetPackageInfos2(System.String,System.Object)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100" /> collection that contains the packages stored in an instance of SQL Server, within the specified logical folder, by using the server name, user name, and password.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100" /> objects.</returns>
      <param name="bstrPackageFolder">The logical folder that contains the packages you want to enumerate.</param>
      <param name="vConnectionObject">The connection object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.GetPackageRoles(System.String,System.String,System.String@,System.String@)">
      <summary>Returns the database roles that have read access and write access to the package. Database roles apply only to packages stored in the SQL Server msdb database.</summary>
      <param name="bstrServerName">Specifies the name and instance of the server that contains the package.</param>
      <param name="bstrPackagePath">Specifies the name and path of the package.</param>
      <param name="pbstrReaderRole">When this method returns, contains the roles with read access. This parameter is passed uninitialized.</param>
      <param name="pbstrWriterRole">When this method returns, contains the roles with write access. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.GetRunningPackages(System.String)">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackages100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackages100" /> collection that contains the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100" /> objects that represent all the packages that are currently executing on the computer.</returns>
      <param name="bstrMachineName">The instance of SQL Server that the application is running on.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.GetServerInfo(System.String,System.String@)">
      <summary>Returns the SQL Server version number of the SQL Server product installed on the target server. </summary>
      <param name="bstrMachineName">The name of the server hardware to check for the SQL Server product version.</param>
      <param name="serverVersion">When this method returns, contains the version number of the SQL Server product. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.GetServerVersionEx(System.String,System.UInt32@,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel@,System.String@,System.String@)">
      <summary>Returns the edition, product level, and other values that indicate the version of SSIS installed.</summary>
      <param name="bstrServerName">The name of the server to get the product version information from.</param>
      <param name="pdwEditionID">When this method returns, contains an integer that indicates the edition of the product. This parameter is passed uninitialized.</param>
      <param name="peSsisEditionID">When this method returns, contains a value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel" /> enumeration. This parameter is passed uninitialized.</param>
      <param name="pbstrProductVersion">When this method returns, contains the build number as seen in Help / About, formatted as major.minor.build. This parameter is passed uninitialized.</param>
      <param name="pbstrProductLevel">When this method returns, contains the service pack level of the SSIS server. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.LoadFromDtsServer(System.String,System.String,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package from the specified server, and specifies the threading model.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100" /> object that represents the loaded project.</returns>
      <param name="bstrPackagePath">The fully qualified path of the package to load.</param>
      <param name="bstrServerName">The name of the server where the package is stored.</param>
      <param name="bLoadNeutral">true to load the package as neutral threaded; false to load the package as apartment threaded. </param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.LoadFromSQLServer(System.String,System.String,System.String,System.String,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package from SQL Server by specifying the server name, user name, and password.</summary>
      <returns>The package that was loaded.</returns>
      <param name="bstrPackagePath">The name and path of the package to load.</param>
      <param name="bstrServerName">The name of the instance of SQL Server that the package is loaded from.</param>
      <param name="bstrServerUserName">The account name used to log on to the server.</param>
      <param name="bstrServerPassword">The password of the account.</param>
      <param name="bLoadNeutral">true to load the package as neutral threaded; false to load the package as apartment threaded.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.LoadFromSQLServer2(System.String,System.Object,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package from SQL Server by specifying the server name, user name, and password.</summary>
      <returns>The loaded package.</returns>
      <param name="bstrPackagePath">The name and path of the package to load.</param>
      <param name="vConnectionObject">The connection object.</param>
      <param name="bLoadNeutral">true to load the package as neutral threaded; false to load the package as apartment threaded.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.LoadPackage(System.String,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100" /> from the file system.</summary>
      <returns>The package that was loaded.</returns>
      <param name="FileName">The name of the file that contains the package to load.</param>
      <param name="loadNeutral">true to load the package as neutral threaded; false to load the package as apartment threaded.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.LogProviderInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfos100" /> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100" /> objects for the application. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.OpenProject(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Opens a specified project.</summary>
      <returns>The newly opened project.</returns>
      <param name="bstrProjectFileName">The file name of the project.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.PackagePassword">
      <summary>Sets the value of the password for the package. This property is write-only.</summary>
      <returns>A String that contains the password for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.PackageUpgradeOptions">
      <summary>Gets or sets a value that indicates which upgrade options will be applied to a collection of Integration Services packages during the upgrade process.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_PACKAGE_UPGRADE_OPTIONS" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.PipelineComponentInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100" /> objects.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos100" /> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100" /> objects for the application. This property is read-only.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.ProjectPassword">
      <summary>Sets the value of the password for the project. This property is write-only.</summary>
      <returns>A String that contains the password for the project.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.RemoveFolderFromDtsServer(System.String,System.String)">
      <summary>Removes the specified folder from the specified server.</summary>
      <param name="bstrFolderName">The name of the folder to remove.</param>
      <param name="bstrServerName">The name of the server where the folder is located.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.RemoveFolderFromSQLServer(System.String,System.String,System.String,System.String)">
      <summary>Removes the specified folder from the specified instance of SQL Server.</summary>
      <param name="bstrFolderName">The name of the folder to delete.</param>
      <param name="bstrServerName">The name of the instance of SQL Server to remove the folder from.</param>
      <param name="bstrServerUserName">The user name to authenticate against the instance of SQL Server.</param>
      <param name="bstrServerPassword">The password for the specified <paramref name="bstrServerUserName" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.RemoveFromDtsServer(System.String,System.String)">
      <summary>Removes a package from the specified server.</summary>
      <param name="bstrPackagePath">The fully qualified path of the package.</param>
      <param name="bstrServerName">The name of the server where the package is located.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.RemoveFromSQLServer(System.String,System.String,System.String,System.String)">
      <summary>Removes a package from the specified instance of SQL Server.</summary>
      <param name="bstrPackagePath">The name of the package to remove.</param>
      <param name="bstrServerName">The name of the instance of SQL Server.</param>
      <param name="bstrServerUserName">The user name to use when authenticating against the server.</param>
      <param name="bstrServerPassword">The password associated with the <paramref name="bstrServerUserName" /> account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.RenameFolderOnDtsServer(System.String,System.String,System.String,System.String)">
      <summary>Renames a folder on the specified server.</summary>
      <param name="bstrParent">The name of the parent folder.</param>
      <param name="bstrOldName">The name of the existing folder.</param>
      <param name="bstrNewName">The new name of the folder.</param>
      <param name="bstrServerName">The name of the server where the folder is located.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.RenameFolderOnSQLServer(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Renames a folder on the specified instance of SQL Server.</summary>
      <param name="bstrParent">The name of the parent folder.</param>
      <param name="bstrOldName">The name of the existing folder.</param>
      <param name="bstrNewName">The new name of the folder.</param>
      <param name="bstrServerName">The name of the instance of SQL Server.</param>
      <param name="bstrServerUserName">The user name to use when authenticating on the server.</param>
      <param name="bstrServerPassword">The password associated with the <paramref name="bstrServerUserName" /> account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.SavePackage(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves a package to the file system.</summary>
      <param name="bstrFileName">The name of the file in which the package is saved.</param>
      <param name="pPackage">The package to save.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.SaveToDtsServer(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,System.String,System.String)">
      <summary>Saves a package to the specified server.</summary>
      <param name="pPackage">The package to save.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
      <param name="bstrPackagePath">The name to give the package when saved. You can preface the name with a path.</param>
      <param name="bstrServerName">The name of the server to save the package to.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.SaveToSQLServer(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,System.String,System.String,System.String)">
      <summary>Saves a package to an instance of SQL Server.</summary>
      <param name="Package">The package to save.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
      <param name="ServerName">The name of the instance of SQL Server to save the package to.</param>
      <param name="ServerUserName">The user name used to log on to the server.</param>
      <param name="ServerPassword">The password for the user account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.SaveToSQLServerAs(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,System.String,System.String,System.String,System.String)">
      <summary>Saves a package to an instance of SQL Server with a new name.</summary>
      <param name="pPackage">The package to save.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
      <param name="bstrPackagePath">The path and new name to assign to the package. The parameter <paramref name="bstrPackagePath" /> is in the format of \\folder\\packageName. If <paramref name="bstrPackagePath" /> is specified without an existing folder, the package will be saved with this parameter as its new name.</param>
      <param name="bstrServerName">The name of the instance of SQL Server.</param>
      <param name="bstrServerUserName">The name of the account used to log on to the instance of SQL Server.</param>
      <param name="bstrServerPassword">The password of the user account.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.SaveToXML(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the XML definition of a package to a file.</summary>
      <param name="FileName">The name of the file where to save the package.</param>
      <param name="pPersistObj">The persist object that handles the saving and loading of package.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.SetPackageRoles(System.String,System.String,System.String,System.String)">
      <summary>Sets the database roles that have read access and write access to the package. Database roles apply only to package stored in the SQL Server msdb database.</summary>
      <param name="bstrServerName">Specify the name and instance of the server that contains the package.</param>
      <param name="bstrPackagePath">Specify the name of the package.</param>
      <param name="bstrReaderRole">Specify a role to have read access.</param>
      <param name="bstrWriterRole">Specify a role to have write access.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.TaskInfos">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfos100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100" /> objects. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfos100" /> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100" /> objects in the application. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.UpdateObjects">
      <summary>Gets or sets a Boolean that indicates whether extensible objects can be updated at package load time if an updated version is found.</summary>
      <returns>true if extensible objects can be updated at package load time when an updated version is found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication100.UpdatePackage">
      <summary>Gets or sets a Boolean that indicates whether packages can be updated when an updated version is found.</summary>
      <returns>true if packages can be updated when an updated version is found; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100">
      <summary>Provides methods to manage all the breakpoints that are set in on a task.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100.ClearBreakpointTargets">
      <summary>When implemented in a derived class, removes all the breakpoints set in a task.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100.CreateBreakpointTarget(System.Int32,System.String)">
      <summary>When implemented in a derived class, creates a new breakpoint in the task with the specified breakpoint ID and description.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100" /> object.</returns>
      <param name="breakpointID">The ID to assign to the breakpoint to distinguish it from other breakpoints.</param>
      <param name="Description">A string describing the breakpoint.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100.GetBreakpointTarget(System.Int32)">
      <summary>When implemented in a derived class, returns the breakpoint object for a specific breakpoint ID.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100" /> object.</returns>
      <param name="breakpointID">The ID of the breakpoint to return.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100.IsBreakpointTargetEnabled(System.Int32)">
      <summary>When implemented in a derived class, returns a Boolean that indicates if the breakpoint is enabled.</summary>
      <returns>true if the breakpoint is enabled; otherwise, false.</returns>
      <param name="breakpointID">The ID of the breakpoint that you want to verify if it is enabled or not.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100.RemoveBreakpointTarget(System.Int32)">
      <summary>When implemented in a derived class, removes a previously created breakpoint from a task.</summary>
      <param name="breakpointID">The ID of the breakpoint to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100">
      <summary>Defines the interaction between the Integration Services run-time engine and the task for exposing breakpoints and for creating and managing custom breakpoints.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)">
      <summary>Passes a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100" /> to a task. The task will use the breakpoint manager to create, remove, and check the status of breakpoints. This method is called by the runtime and is not used in code.</summary>
      <param name="pBreakpointManager">The breakpoint manager specific for this task.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100.DebugMode">
      <summary>Gets or sets a Boolean that indicates if a task should check if breakpoints are enabled. </summary>
      <returns>true if a task should check if breakpoints are enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100.ResumeExecution">
      <summary>Resumes execution of the task after pausing. The task or container is resumed by the runtime engine. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100.SuspendExecution">
      <summary>Indicates that the executable needs to suspend. This method is called by the runtime engine. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100.SuspendRequired">
      <summary>Gets or sets a Boolean that indicates if tasks should suspend when they encounter a breakpoint. This value is set by the runtime engine for tasks and containers when a breakpoint is encountered.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100.BreakOnExpressionChange">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100.Description">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100.Enabled">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100.HitCount">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100.HitTarget">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100.HitTest">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100.ID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100.Owner">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100.ResetHitCount">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100">
      <summary>Provides properties and methods for working on a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100" /> objects.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100.GetEnumerator">
      <summary>Gets the enumerator that iterates through the collection.</summary>
      <returns>An enumerator object that can iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100.Item(System.Object)">
      <summary>Gets the item at the specified index.</summary>
      <returns>The item at the specified index.</returns>
      <param name="Index">The zero-based index of the item in the collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSCloneVariableDispenser100">
      <summary>Represents cloned copy of an original variable dispenser object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSCloneVariableDispenser100.CloneVariableDispenser">
      <summary>Returns a new instance of a variable dispenser which is a copy of the original instance.</summary>
      <returns>A new instance of a variable dispenser which is a copy of the original instance.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100">
      <summary>Defines an interface that provides methods for event firing.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100.FireBreakpointHit(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100)">
      <summary>Raises an event when a breakpoint target is hit in the package.</summary>
      <param name="pBreakpointTarget">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100" /> in the package that should raise this event.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100.FireCustomEvent(System.String,System.String,System.Object[]@,System.String,System.Boolean@)">
      <summary>Occurs when tasks raise custom task-defined events.</summary>
      <param name="EventName">The name of the event to raise.</param>
      <param name="EventText">The text describing the event.</param>
      <param name="ppsaArguments">An array of arguments to pass to the event.</param>
      <param name="SubComponent">A String that contains more detail about the event source.</param>
      <param name="pbFireAgain">When this method returns, contains a Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing. A value of false indicates that it should stop firing. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100.FireError(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)">
      <summary>Raises an event when an error occurs.</summary>
      <param name="ErrorCode">An Integer that identifies the error message.</param>
      <param name="SubComponent">A String that contains more detail about the event source.</param>
      <param name="Description">The text of the message.</param>
      <param name="HelpFile">The path to the Help file that contains detailed information.</param>
      <param name="HelpContext">The identifier of the topic in the Help file.</param>
      <param name="pbCancel">When this method returns, contains a Boolean that indicates whether the event should continue firing or stop firing. A value of true indicates that the event should continue firing. A value of false indicates that the event should stop firing. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100.FireInformation(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)">
      <summary>Raises an event containing information.</summary>
      <param name="InformationCode">An Integer that identifies the informational message.</param>
      <param name="SubComponent">A String that contains more detail about the event source.</param>
      <param name="Description">The text of the message.</param>
      <param name="HelpFile">The path to the Help file that contains detailed information.</param>
      <param name="HelpContext">The identifier of the topic in the Help file.</param>
      <param name="pbFireAgain">When this method returns, contains a Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing. A value of false indicates that it should stop firing. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100.FireProgress(System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean@)">
      <summary>Raises an event when measurable progress is made by the executable.</summary>
      <param name="ProgressDescription">A String that describes the progress event that is raised.</param>
      <param name="PercentComplete">An Integer used to indicate how much of the task has completed.</param>
      <param name="ProgressCountLow">An Integer that contains the low 32-bits of the units completed.</param>
      <param name="ProgressCountHigh">An Integer that contains the high 32-bits of the units completed.</param>
      <param name="SubComponent">A String that contains more detail about the event source.</param>
      <param name="pbFireAgain">When this method returns, contains a Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing. A value of false indicates that it should stop firing. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100.FireQueryCancel(System.Boolean@)">
      <summary>Raises an event to determine whether an executable should stop running.</summary>
      <param name="pbCancel">When this method returns, contains a Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing. A value of false indicates that it should stop firing. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100.FireWarning(System.Int32,System.String,System.String,System.String,System.Int32)">
      <summary>Raises an event anytime the task is in a state that does not justify an error, but does warrant alerting the client.</summary>
      <param name="WarningCode">An Integer that identifies the warning message.</param>
      <param name="SubComponent">A String that contains more detail about the event source.</param>
      <param name="Description">The text of the message.</param>
      <param name="HelpFile">The path to the Help file that contains detailed information.</param>
      <param name="HelpContext">The identifier of the topic in the Help file.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentPersist100">
      <summary>Allows properties and settings for components and tasks to be saved and loaded from the package XML. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentPersist100.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Loads component information from XML.</summary>
      <param name="pDOMElement">The element that contains the information to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface for raising events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentPersist100.SaveToXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Saves a component to XML. Tasks and containers implement this method.</summary>
      <param name="pDOMDocument">The document to which to save the information.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface for raising events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100.ConfigurationString">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100.ConfigurationType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100.PackagePath">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurationControl100">
      <summary>Provides a property that controls how a package loads configurations.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurationControl100.IgnoreConfigurationsOnLoad">
      <summary>Gets or sets a value that indicates whether the package ignores configurations when the package is loaded.</summary>
      <returns>A value that indicates whether the package ignores configurations when the package is loaded.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations100">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations100.Add">
      <summary>Adds a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object to the end of the collection.</summary>
      <returns>The newly added <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations100.Count">
      <summary>Gets the number of elements in the collection.</summary>
      <returns>The number of elements in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations100.GetEnumerator">
      <summary>Returns an enumerator for iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations100.InsertAfter(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100)">
      <summary>Adds a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object into the collection after an existing <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object.</summary>
      <param name="Index">The name, description, ID, or identity of a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object that is already in the collection.</param>
      <param name="pConfig">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object to insert into the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations100.InsertBefore(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100)">
      <summary>Adds a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object into the collection before an existing <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object.</summary>
      <param name="Index">The name, description, ID, or identity of a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object that is already in the collection.</param>
      <param name="pConfig">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object to insert into the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations100.Item(System.Object)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object from the collection.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object.</returns>
      <param name="Index">The name, description, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object to return.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations100.MoveAfter(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100)">
      <summary>Relocates a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object after an existing <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object.</summary>
      <param name="Index">The name, description, ID, or identity of a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object that is already in the collection.</param>
      <param name="pConfig">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object to relocate into the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations100.MoveBefore(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100)">
      <summary>Relocates a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object in front of an existing <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object.</summary>
      <param name="Index">The name, description, ID, or identity of a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object that is already in the collection.</param>
      <param name="pConfig">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object to relocate into the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations100.Remove(System.Object)">
      <summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object from the collection.</summary>
      <param name="Index">The name, index, ID, or identity of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration100" /> object to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100.ConnectionContact">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100.ConnectionType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100.FileName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100.FileNameVersionString">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100.IconFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100.IconResource">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100.UITypeName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfos100">
      <summary>Contains information about all the connections on the computer. The collection contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100" /> objects that provide the details about each connection. The collection is available using the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfos100.Count">
      <summary>Gets the number of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100" /> objects in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfos100.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> object that iterates through the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfos100" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfos100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfos100.Item(System.Object)">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100" /> object from the collection by the name, index, ID, or identity.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo100" /> object from the collection that matches the name, index, ID, or identity given in the <paramref name="Index" /> parameter.</returns>
      <param name="Index">The name, index, ID, or identity of the object in the collection to return.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100">
      <summary>Provides properties and methods that are used for managing connection to a data source.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100.AcquireConnection(System.Object)">
      <summary>Creates an instance of the connection type.</summary>
      <returns>An object that contains the transaction connection.</returns>
      <param name="pTransaction">The handle to a transaction type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100.ConnectionString">
      <summary>Gets or sets the connection string used to establish a connection to a data source.</summary>
      <returns>A String that contains the connection string value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100.ProtectionLevel">
      <summary>Gets or sets the level of encryption performed on sensitive data that is contained in the package.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100.ReleaseConnection(System.Object)">
      <summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100.AcquireConnection(System.Object)" />. Can be called at design time and runtime.</summary>
      <param name="varConnection">The connection to release.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100.Scope">
      <summary>Gets the scope of the connection manager.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConnectionManagerScope" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100.SetQualifier(System.String)">
      <summary>Changes a qualifier on the connection manager after the connection manager has been created but before it is used in a running package.</summary>
      <param name="bstrQualifier">The new qualifier to set on the connection manager.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100.SupportsDTCTransactions">
      <summary>Gets a Boolean that indicates whether the connection supports Microsoft Distributed Transaction Coordinator (MS DTC) transactions.</summary>
      <returns>true if the connection supports MS DTC transactions; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the connection and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the enumeration values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCache100">
      <summary>Provides properties and methods associated with managing connections using a Cache Transform or a cache file for the data connection.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCache100.Columns">
      <summary>Gets the columns in the cache.</summary>
      <returns>The columns in the cache.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCache100.GetFileColumns(System.String)">
      <summary>Reads and returns the columns from the specified cache file.</summary>
      <returns>The columns from the specified cache file.</returns>
      <param name="bstrFileName">The name of the cache file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCache100.RetainData">
      <summary>Gets or sets a Boolean that indicates whether the connection manager retains the data in the cache.</summary>
      <returns>true if the connection manager retains the data in the cache; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCache100.UseEncryption">
      <summary>Gets or sets a Boolean that indicates whether to use encryption.</summary>
      <returns>true if connection manager uses encryption; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCache100.UseFile">
      <summary>Gets or sets a Boolean that indicates whether the connection manager uses a cache file.</summary>
      <returns>true if the connection manager uses a cache file; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumn100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumn100.CodePage">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumn100.DataType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumn100.IndexPosition">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumn100.Length">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumn100.Precision">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumn100.Scale">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumns100">
      <summary>Provides properties and methods for working on a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumn100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumns100.Add">
      <summary>Creates a new column in the collection.</summary>
      <returns>The newly created column object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumns100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumns100.GetEnumerator">
      <summary>Gets an enumerator that iterates through the collection.</summary>
      <returns>An enumerator object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumns100.Item(System.Object)">
      <summary>Gets the specified column in the collection.</summary>
      <returns>The column object.</returns>
      <param name="Key">The column to get.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerCacheColumns100.Remove(System.Object)">
      <summary>Removes the specified column from the collection.</summary>
      <param name="Key">The column to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerDatabaseParameters100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerDatabaseParameters100.GetConnectionForSchema">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerDatabaseParameters100.InitialCatalog">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerDatabaseParameters100.Password">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerDatabaseParameters100.RetainSameConnection">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerDatabaseParameters100.ServerName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerDatabaseParameters100.UserName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerExcel100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerExcel100.ExcelFilePath">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerExcel100.ExcelVersionNumber">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerExcel100.FirstRowHasColumnName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFile100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFile100.FileUsageType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.AlwaysCheckForRowDelimiters">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.CodePage">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.ColumnNamesInFirstDataRow">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.Columns">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.DataRowsToSkip">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.Format">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.HeaderRowDelimiter">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.HeaderRowsToSkip">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.LocaleID">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.RowDelimiter">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.TextQualifier">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile100.Unicode">
      <summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FlatFileColumn" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100.ColumnDelimiter">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FlatFileColumn" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100.ColumnType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FlatFileColumn" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100.ColumnWidth">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FlatFileColumn" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100.DataPrecision">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FlatFileColumn" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100.DataScale">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FlatFileColumn" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100.DataType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FlatFileColumn" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100.MaximumWidth">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FlatFileColumn" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100.TextQualified">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FlatFileColumn" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns100">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns100.Add">
      <summary>Creates and adds an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object to the end of the collection.</summary>
      <returns>A newly added <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns100.Count">
      <summary>Gets the number of elements in the collection.</summary>
      <returns>The number of elements in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns100.GetEnumerator">
      <summary>Returns an enumerator for iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns100" /> collection.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object from the collection.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object.</returns>
      <param name="Key">The name, description, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object to return.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns100.MoveAfter(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100)">
      <summary>Relocates an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object after an existing <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object.</summary>
      <param name="Key">The name, description, ID, or identity of a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object that is already in the collection.</param>
      <param name="Column">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object to relocate into the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns100.MoveBefore(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100)">
      <summary>Relocates a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object in front of an existing <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object.</summary>
      <param name="Key">The name, description, ID, or identity of a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object that is already in the collection.</param>
      <param name="Column">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object to relocate into the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns100.Remove(System.Object)">
      <summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object from the collection.</summary>
      <param name="Key">The name, index, ID, or identity of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn100" /> object to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFtp100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFtp100.ChunkSize">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFtp100.Retries">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFtp100.ServerName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFtp100.ServerPassword">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFtp100.ServerPort">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFtp100.ServerUserName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFtp100.Timeout">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFtp100.UsePassiveMode">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100">
      <summary>Represents a connection manager for HTTP connection.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.Certificate">
      <summary>Gets or sets the certificate to use for the connection.</summary>
      <returns>The certificate to use for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.CertificateIdentifier">
      <summary>Gets or sets the certificate identifier.</summary>
      <returns>The certificate identifier.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.ChunkSize">
      <summary>Gets or sets the value that indicates the minimum number of bytes to retrieve from or send to the server during a read/write operation.</summary>
      <returns>The minimum number of bytes to retrieve or send.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.ProxyBypassList">
      <summary>Gets or sets the addresses that do not use a proxy server.</summary>
      <returns>The addresses that do not use a proxy server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.ProxyDomain">
      <summary>Gets or sets the domain setting that is used to log on to the proxy.</summary>
      <returns>The domain setting that is used to log on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.ProxyPassword">
      <summary>Sets the password used to log on to the proxy.</summary>
      <returns>The password used to log on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.ProxyURL">
      <summary>Gets or sets the URL that specifies the location of the connection.</summary>
      <returns>The URL that specifies the location of the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.ProxyUserName">
      <summary>Gets or sets the username that is used when logging on to the proxy.</summary>
      <returns>The username that is used when logging on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.ServerDomain">
      <summary>Gets or sets the domain used to log on to the server.</summary>
      <returns>The domain used to log on to the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.ServerPassword">
      <summary>Sets the password used to log on to the server.</summary>
      <returns>The password used to log on to the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.ServerURL">
      <summary>Gets or sets the server URL for the connection.</summary>
      <returns>The server URL for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.ServerUserName">
      <summary>Gets or sets the username used to log on to the server.</summary>
      <returns>The username used to log on to the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.Timeout">
      <summary>Gets or sets the connection timeout.</summary>
      <returns>The connection timeout.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.UseProxy">
      <summary>Gets or sets a value that indicates whether the connection uses a proxy for requests.</summary>
      <returns>true if the connection uses a proxy for request; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.UseProxyCredentials">
      <summary>Gets or sets a value that indicates whether the connection uses proxy credentials.</summary>
      <returns>true if the connection uses proxy credentials; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.UseSecureConnection">
      <summary>Gets or sets a value that indicates whether to use a secure connection.</summary>
      <returns>true to use a secure connection; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerHttp100.UseServerCredentials">
      <summary>Gets or sets a Boolean that indicates whether the connection uses network credentials.</summary>
      <returns>true if the connection uses network credentials; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerInit100">
      <summary>Provides methods for initializing the properties of a connection manager.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerInit100.InitializeConnectionManager(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Initializes the properties of the connection manager instance using the given parameters.</summary>
      <param name="bstrQualifier">The qualifier to set on the connection manager.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
      <param name="pLog">The object that implements the logging of events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerMarshalControl100">
      <summary>Provides properties and methods to connection manager that supports marshal control.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerMarshalControl100.CanClone">
      <summary>Gets a value that indicates whether connection manager can be cloned.</summary>
      <returns>true if connection manager can be cloned; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerMarshalControl100.CanMarshal">
      <summary>Gets a value that indicates whether connection manager can be marshaled.</summary>
      <returns>true if connection manager can be marshaled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerMarshalControl100.ConfigureClone(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100)">
      <summary>Prepares the connection manager for cloning.</summary>
      <param name="pConnectionManager">The connection manager to clone.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerVariables100">
      <summary>Provides variables and variable dispenser to connection manager.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerVariables100.VariableDispenser">
      <summary>Gets the variable dispenser that accesses the collection of variables.</summary>
      <returns>The variable dispenser that accesses the collection of variables.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerVariables100.Variables">
      <summary>Gets the collection of variables which are accessed through several objects.</summary>
      <returns>The collection of variables which are accessed through several objects.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100">
      <summary>Provides properties and methods for working on a collection of connection managers.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100.Add(System.String)">
      <summary>Adds the connection manager of the specified connection type to collection.</summary>
      <returns>The connection manager that was added to the collection.</returns>
      <param name="bstrConnectionType">The connection type for the connection manager.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100.AddFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Adds the connection manager that was serialized in the XML document to the collection.</summary>
      <returns>The connection manager that was added to the collection.</returns>
      <param name="pNode">The XML document containing the serialized connection manager.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100.Contains(System.Object)">
      <summary>Determines whether the collection contains the connection manager with the specified key.</summary>
      <returns>true if the connection manager is found in the collection; otherwise, false.</returns>
      <param name="Key">The name, identity, ID, or index of the connection manager to locate in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100.Count">
      <summary>Gets the number of items contained in the collection.</summary>
      <returns>The number of items contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100.GetEnumerator">
      <summary>Gets an enumerator that iterates through the collection.</summary>
      <returns>An enumerator object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100.Item(System.Object)">
      <summary>Returns the connection manager with the specified key.</summary>
      <returns>The connection manager with the specified key.</returns>
      <param name="Key">The name, identity, ID, or index of the connection manager to return.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100.Join(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager100)">
      <summary>Joins the specified connection manager into this collection.</summary>
      <param name="pConnectionManager">The connection manager to join.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100.Remove(System.Object)">
      <summary>Removes the connection manager from the collection.</summary>
      <param name="Key">The name, identity, ID, or index of the connection manager to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100">
      <summary>Defines properties and methods used by all containers and packages.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.DelayValidation">
      <summary>Gets or sets a value that indicates whether validation of the task is delayed until run time.</summary>
      <returns>true if the validation of the task is delayed until run time; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.Disable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object is disabled.</summary>
      <returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object is disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.ExecutionResult">
      <summary>Gets a value that indicates the success or failure of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object.</summary>
      <returns>The result of an execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.ExecutionStatus">
      <summary>Gets the current status of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object at the time of the call.</summary>
      <returns>The current status of the execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.FailPackageOnFailure">
      <summary>Gets or sets a value that indicates whether the package fails when a child container fails.</summary>
      <returns>true if the package fails when a child container fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.FailParentOnFailure">
      <summary>Gets or sets a value that indicates whether the parent container fails when a child container fails.</summary>
      <returns>true if the parent container fails when a child container fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.ForcedExecutionValue">
      <summary>Gets or sets a value that specifies the optional execution value that the package returns.</summary>
      <returns>An object that specifies the optional execution value that the package returns.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.ForceExecutionResult">
      <summary>Gets or sets the forced execution result of the container.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration that reports the forced success or failure of the package or container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.ForceExecutionValue">
      <summary>Gets or sets a value that indicates whether the execution value of the container should be forced to contain a particular value.</summary>
      <returns>true if the execution value of the container should be forced to contain a particular value; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.GetParentID">
      <summary>Gets the parent identifier of this container.</summary>
      <returns>The parent identifier of this container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.IsDefaultLocaleID">
      <summary>Gets a value that indicates whether the container uses the default locale.</summary>
      <returns>true if the container uses the default locale; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object.</summary>
      <returns>The isolation level of the transaction in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.LocaleID">
      <summary>Gets or sets the identifier of the locale to use when the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object is executed.</summary>
      <returns>The identifier of the locale.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.LogEntryInfos">
      <summary>Gets a collection of information about a log entry.</summary>
      <returns>A collection of information about a log entry.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.LoggingMode">
      <summary>Gets or sets the logging mode of the container.</summary>
      <returns>The logging mode of the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.LoggingOptions">
      <summary>Gets an object that contains properties that indicates the filtering and logging resource for containers.</summary>
      <returns>The filtering and logging resource for containers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.MaximumErrorCount">
      <summary>Gets or sets the maximum number of errors that can occur before the container stops running.</summary>
      <returns>The maximum number of errors allowed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.Parent">
      <summary>Gets the parent of the container.</summary>
      <returns>The parent of the container.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.RegenerateID">
      <summary>Creates a new identifier for the container and updates the container identifier.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.TransactionOption">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration value that indicates whether the container participates in transactions.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration that indicates if this container can be part of transactions.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.VariableDispenser">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object so variables associated with the container can be locked.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object so variables associated with the container can be locked.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100.Variables">
      <summary>Gets a collection that contains the variables associated with this container.</summary>
      <returns>A collection of variables.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTapConfiguration100">
      <summary>Provides methods for working with a data tap configuration.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTapConfiguration100.AddTapPoint(System.String,System.String,System.Int32,System.String)">
      <summary>Adds a tap point with the specified configuration.</summary>
      <param name="mainPipeIdentification">The identification string of the data flow task.</param>
      <param name="pathIdentification">The identification string of the data flow path.</param>
      <param name="maxRowCount">The maximum allowable number of rows to tap. All rows will be tapped if this parameter is negative.</param>
      <param name="FileName">The file name to store the tapped data.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTapConfiguration100.RequestTapPointsByMainPipeID(System.String,System.String[]@,System.Int32[]@,System.String[]@)">
      <summary>Retrieves the tap points for the specified data flow task.</summary>
      <param name="mainPipeIdentification">The identification string of the data flow task to retrieve.</param>
      <param name="ppsaPathIdentification">When this method returns, contains an array of strings that represents the path identification of the data flow paths. This parameter is passed uninitialized.</param>
      <param name="ppsaMaxRowCount">When this method returns, contains an array of integers that represents the maximum allowable rows to tap of the data flow paths. This parameter is passed uninitialized.</param>
      <param name="ppsafileName">When this method returns, contains an array of strings that represents the file names to store the tap data. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTapConfiguration100.UpdateExecutingPackagesCount(System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Updates the count of the executing packages.</summary>
      <param name="isStart">true to execute the isStart parameter; otherwise, false.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100.TypeEnumName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100.TypeName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfos100">
      <summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100" /> objects.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfos100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfos100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100" /> object.</returns>
      <param name="Index">The index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo100" /> object to retrieve from the collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100.Description">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100.Name">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100.ParseName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100.ProviderSubType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100.ProviderType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100.SupportsNullColumns">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100.UseFullTableName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfos100">
      <summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100" /> objects.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfos100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfos100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> enumerator.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfos100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100" /> object.</returns>
      <param name="Index">The name, description, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo100" /> object to return.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDowngradableObject100">
      <summary>Represents the interface for the DTS downgradable object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDowngradableObject100.CanDowngradeTo(System.Int32)">
      <summary>Determines whether the downgradable object can be downgraded to a lower version.</summary>
      <returns>true if the downgradable object can be downgraded to a lower version; otherwise, false.</returns>
      <param name="versionTo">The target version.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDowngradableObject100.DowngradeTo(System.Int32,System.Object@)">
      <summary>Downgrades a downgradable object to a specified version.</summary>
      <param name="versionTo">The target version.</param>
      <param name="pDOMElement">When this method returns, contains XML document that represents the downgraded version of the downgradable object. This parameter is passed uninitialized.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDowngradeSettings100">
      <summary>Represents the downgrade settings.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDowngradeSettings100.DowngradeMode">
      <summary>Gets or sets a value that indicates whether setting is a version downgrade.</summary>
      <returns>true if the setting is a version downgrade; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDowngradeSettings100.DowngradeVersion">
      <summary>Gets or sets the downgrade version.</summary>
      <returns>The downgrade version.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDumpConfiguration100">
      <summary>Represents a dump configuration for the DTS.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDumpConfiguration100.DumpDescriptor">
      <summary>Gets or sets the dump descriptor for DTS.</summary>
      <returns>The dump descriptor for DTS.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDumpConfiguration100.DumpOnAnyError">
      <summary>Gets or sets whether the DTS dumps on any error.</summary>
      <returns>true if the DTS dumps on any error; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDumpConfiguration100.EnableDump">
      <summary>Gets or sets whether the DTS enables dumping.</summary>
      <returns>true if the DTS enables dumping; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDynamicName100">
      <summary>Represents the dynamic name for the DTS.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDynamicName100.GetDynamicName">
      <summary>Retrieves the dynamic name for the DTS.</summary>
      <returns>The dynamic name for the DTS.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100.Next">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100.Object">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100.ReferenceType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100.Reset">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100.UsageDescription">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100.UsageLocation">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100.Description">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100.ErrorCode">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100.HelpContext">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100.HelpFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100.IDOfInterfaceWithError">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100.Source">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100.SourceID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100.SubComponent">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100.TimeStamp">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSErrors100">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSErrors100.Clear">
      <summary>Clears the property settings of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100" /> object.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSErrors100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSErrors100.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSErrors100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100" /> object.</returns>
      <param name="Index">The error number, index, or description of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError100" /> object to return.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvaluatorContext100">
      <summary>Represents the interface for the DTS evaluator context.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvaluatorContext100.AllowSensitiveValues">
      <summary>Gets whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvaluatorContext100" /> allows sensitive values.</summary>
      <returns>True if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvaluatorContext100" /> allows sensitive values; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvaluatorContext100.Option">
      <summary>Gets the options for <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvaluatorContext100" />.</summary>
      <returns>The options for <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvaluatorContext100" />.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandler100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandler" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers100">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandler100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers100.Add(System.String)">
      <summary>Adds a new event to the collection.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandler100" /> object that was added to the collection.</returns>
      <param name="EventName">The name of the event to add to the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandler100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandler100" /> object.</returns>
      <param name="Index">The name, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandler100" /> object to return from the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers100.Join(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandler100)">
      <summary>Joins a new event handler to the collection.</summary>
      <param name="pEventHandler">The event handler.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers100.Remove(System.Object)">
      <summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandler100" /> object from the collection.</summary>
      <param name="Index">The name, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandler100" /> object to remove from the collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100.AllowEventHandlers">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100.ParameterCount">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100.ParameterDescriptions">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100.ParameterNames">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100.ParameterTypes">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfo" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100.Add(System.String,System.String,System.Boolean,System.String[]@,System.UInt16[]@,System.String[]@)">
      <summary>Adds an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> object to the current collection.</summary>
      <param name="EventName">The name of the custom event.</param>
      <param name="Description">The description of the event.</param>
      <param name="AllowEventHandlers">true to indicate that the event handler objects can be created for the event; otherwise, false.</param>
      <param name="ParamNames">An array of parameters passed to the event.</param>
      <param name="ParamTypes">The type of each parameter in the <paramref name="ParamNames" /> array.</param>
      <param name="ParamDescs">An array that contains descriptions for each of the parameters in <paramref name="ParamNames" />.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100.Item(System.Object)">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> object.</returns>
      <param name="Index">The name, description, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> object to return.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100.Remove(System.Object)">
      <summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> object from the collection.</summary>
      <param name="Index">The name, description, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> object to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100">
      <summary>Defines methods for the events.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnBreakpointHit(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget100)">
      <summary>Called when a breakpoint is hit within a task.</summary>
      <param name="pBreakpointSite">An object that implements the <see cref="Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100" /> interface.</param>
      <param name="pBreakpointTarget">The specific breakpoint in the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnCustomEvent(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100,System.String,System.String,System.Object[]@,System.String,System.Boolean@)">
      <summary>Called by tasks to raise custom task-defined events.</summary>
      <param name="pTaskHost">The task that is hosting the current task.</param>
      <param name="EventName">The name of the event.</param>
      <param name="EventText">The text that describes the event.</param>
      <param name="ppsaArguments">An array of arguments to pass to the event.</param>
      <param name="SubComponent">A String that contains more detail about the event source.</param>
      <param name="pbFireAgain">A Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnError(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean@)">
      <summary>Called by a task or container when an error occurs.</summary>
      <param name="pSource">The source of the error, the object that caused the event.</param>
      <param name="ErrorCode">An Integer that identifies the error message. This identifier should be unique when combined with the <paramref name="source" /> parameter, so the <paramref name="source" /> and <paramref name="errorCode" /> combination should be unique. However, the <paramref name="errorCode" /> alone is not expected to be unique.</param>
      <param name="SubComponent">An arbitrary string that identifies the sub-module within a source. For example, the transform in a Pipeline task.</param>
      <param name="Description">The text of the message.</param>
      <param name="HelpFile">The path to the Help file that contains detailed information.</param>
      <param name="HelpContext">Identifier of the topic in the Help file.</param>
      <param name="IDOfInterfaceWithError">A textual representation of the GUID of the interface that caused the error.</param>
      <param name="pbCancel">true to cancel the error; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnExecutionStatusChanged(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus,System.Boolean@)">
      <summary>Called by a task or container when its execution status changes.</summary>
      <param name="pExec">The task raising the event.</param>
      <param name="newStatus">The current status of the executable.</param>
      <param name="pbFireAgain">A Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnInformation(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean@)">
      <summary>Called any time the task is required to provide information.</summary>
      <param name="pSource">The source of the error, the object that caused the event.</param>
      <param name="InformationCode">An Integer that identifies the message. This identifier should be unique when combined with the <paramref name="source" /> parameter, so the <paramref name="source" /> and <paramref name="informationCode" /> combination should be unique. However, the <paramref name="informationCode" /> alone is not expected to be unique.</param>
      <param name="SubComponent">An arbitrary string that identifies the sub-module within a source. For example, the transform in a Pipeline task.</param>
      <param name="Description">Text of the message.</param>
      <param name="HelpFile">The path to the help file containing detailed information.</param>
      <param name="HelpContext">Identifier of the topic in the Help file.</param>
      <param name="IDOfInterfaceWithError">A textual representation of the GUID of the interface that caused the error.</param>
      <param name="pbFireAgain">A Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnPostExecute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,System.Boolean@)">
      <summary>Called immediately after the execution logic of the task completes. This event is raised by a task or container immediately after it runs.</summary>
      <param name="pExec">The task that is to execute next.</param>
      <param name="pbFireAgain">A Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnPostValidate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,System.Boolean@)">
      <summary>Called immediately after the validation logic of the task completes. This event is raised by a task after the task is validated.</summary>
      <param name="pExec">The task raising the event.</param>
      <param name="pbFireAgain">A Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnPreExecute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,System.Boolean@)">
      <summary>Called when a task is about to execute. This event is raised by a task or a container immediately before it runs.</summary>
      <param name="pExec">The task that is to execute next.</param>
      <param name="pbFireAgain">A Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnPreValidate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,System.Boolean@)">
      <summary>Called when the actual validation logic of the task starts. This event is raised when the validation of the task host or container begins.</summary>
      <param name="pExec">The task for which this is being called.</param>
      <param name="pbFireAgain">A Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnProgress(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean@)">
      <summary>Called to update progress about task execution.</summary>
      <param name="pTaskHost">A null value.</param>
      <param name="ProgressDescription">A string that describes the progress event that is raised.</param>
      <param name="PercentComplete">An integer used to indicate how much of the task has completed.</param>
      <param name="ProgressCountLow">An integer that contains the low 32-bits of the units completed.</param>
      <param name="ProgressCountHigh">An integer that contains the high 32-bits of the units completed.</param>
      <param name="SubComponent">A string that contains more detail about the event source.</param>
      <param name="pbFireAgain">A Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnQueryCancel(System.Boolean@)">
      <summary>Indicates a method called at any juncture in task processing where it is feasible to cancel execution. This event is raised by tasks and containers to determine whether they should stop running.</summary>
      <param name="pbCancel">true to cancel the query; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnTaskFailed(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100)">
      <summary>Called by the task host when it fails.</summary>
      <param name="pTaskHost">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" /> object that failed.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnVariableValueChanged(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100,System.Boolean@)">
      <summary>Called by the run-time engine. It is not called by tasks.</summary>
      <param name="pContainer">The task.</param>
      <param name="pVariable">The variable that changed.</param>
      <param name="pbFireAgain">A Boolean that indicates this should continue firing or stop firing. A value of true indicates that it should continue firing.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnWarning(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100,System.Int32,System.String,System.String,System.String,System.Int32,System.String)">
      <summary>Called any time the task is in a state that does not justify an error, but does warrant alerting the client.</summary>
      <param name="pSource">The object that caused the event.</param>
      <param name="WarningCode">An Integer that identifies the warning message. This identifier should be unique when combined with the <paramref name="source" /> parameter, so the <paramref name="source" /> and <paramref name="warningCode" /> combination should be unique. However, the <paramref name="warningCode" /> alone is not expected to be unique.</param>
      <param name="SubComponent">An arbitrary string that identifies the sub-module within a source. For example, the transform in a Pipeline task.</param>
      <param name="Description">Text of the message.</param>
      <param name="HelpFile">The path to the Help file that contains detailed information.</param>
      <param name="HelpContext">Identifier of the topic in the Help file.</param>
      <param name="IDOfInterfaceWithError">A textual representation of the GUID of the interface that caused the error.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventsProvider100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventsProvider" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventsProvider100.DisableEventHandlers">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventsProvider" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventsProvider100.EventHandlers">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventsProvider" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventsProvider100.EventInfos">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventsProvider" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100">
      <summary>Represents an interface that provides the methods that all objects that are run by the run-time engine are required to inherit and implement.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Executes the executable.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">The interface that raises events.</param>
      <param name="pLog">The logging interface.</param>
      <param name="pTransaction">The handle to a transaction type if participating in a transaction.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verify that the executable will successfully execute by validating all its dependencies and other items before executing it.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">Executes the executable.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">The interface that raises events.</param>
      <param name="pLog">The logging interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100.Add(System.String)">
      <summary>Adds a new container or task object to the collection.</summary>
      <returns>A task host from the newly created <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" /> object.</returns>
      <param name="bstrMoniker">The moniker to the executable.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100.Contains(System.Object)">
      <summary>Determines whether the items in the collection can be accessed using the index as the parameter.</summary>
      <returns>true if the items in the collection can be accessed using the index as the parameter; otherwise, false.</returns>
      <param name="Index">The index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" /> object.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" /> object.</returns>
      <param name="Index">The index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" /> object to return.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100.Join(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100)">
      <summary>Adds an existing container or task object to the collection.</summary>
      <param name="pDTSExecutable">The name of the existing task host for the container or task.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100.Remove(System.Object)">
      <summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" /> object from the collection.</summary>
      <param name="Index">The index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" /> object to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionLocation100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionLocation100.ExecutionAddress">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionLocation100.ExecutionLocation">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionMetrics100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSExecutionMetrics" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionMetrics100.ExecutionDuration">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSExecutionMetrics" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionMetrics100.StartTime">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSExecutionMetrics" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionMetrics100.StopTime">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSExecutionMetrics" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionPath100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSExecutionPath" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionPath100.GetExecutionPath">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSExecutionPath" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpression100">
      <summary>Represents the interface for the expression.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpression100.Expression">
      <summary>Gets or sets the expression.</summary>
      <returns>The expression.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100">
      <summary>Defines the properties and methods for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluator" /> object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100.Evaluate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,System.Object@,System.Boolean)">
      <summary>Evaluates the expression.</summary>
      <param name="pVariableDispenser">The object for locking variables.</param>
      <param name="pvResult">An object that receives the result of the evaluation.</param>
      <param name="vbSetVariable">true to set a variable for the evaluation; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100.EvaluatorContext">
      <summary>Sets the evaluator context of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100" /> object.</summary>
      <returns>The evaluator context.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100.Events">
      <summary>Sets the informational, warning, and error events.</summary>
      <returns>The informational, warning, and error events.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100.Expression">
      <summary>Sets the expression contained in an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100" /> object.</summary>
      <returns>The expression.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100.IsAssignmentExpression(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,System.Boolean@)">
      <summary>Indicates that the expression is an assignment expression.</summary>
      <param name="pVariableDispenser">The object for locking variables.</param>
      <param name="pvbIsBoolean">true to indicate that the expression is Boolean; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100.IsBooleanExpression(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,System.Boolean@)">
      <summary>Indicates that the expression is a boolean expression.</summary>
      <param name="pVariableDispenser">The object for locking variables.</param>
      <param name="pvbIsBoolean">true to indicate that the expression is Boolean; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator100.LocaleID">
      <summary>Gets or sets the identifier of the locale.</summary>
      <returns>The identifier of the locale.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100.Add(System.String,System.String,System.Object)">
      <summary>Adds a new, empty <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100" /> object to the end of the collection.</summary>
      <returns>A new, empty <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100" /> object.</returns>
      <param name="bstrName">The name of the extended property to add.</param>
      <param name="bstrNamespace">The namespace that the extended property belongs to.</param>
      <param name="vValue">The value to assign to the extended property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100.GetEnumerator">
      <summary>Returns an enumerator for iterating over the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100" /> object.</returns>
      <param name="Index">The name, description, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100" /> object to return.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100.Remove(System.Object)">
      <summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100" /> object from the collection.</summary>
      <param name="Index">The name, index, ID, or description of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100" /> object to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ExtendedProperty" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100.DataType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ExtendedProperty" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100.Namespace">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ExtendedProperty" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100.QualifiedName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ExtendedProperty" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty100.Value">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ExtendedProperty" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumerator100">
      <summary>Defines the properties and methods for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumerator" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumerator100.CollectionEnumerator">
      <summary>Gets or sets a value that indicates what kind of objects the enumerator is iterating over.</summary>
      <returns>true if the enumerator is iterating over a collection of collections; false if the enumerator is iterating over a collection of objects.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumerator100.GetEnumerator(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Returns an enumerator for iterating over the collection.</summary>
      <returns>An enumerator for iterating over the collection.</returns>
      <param name="pConnections">A collection of connections used by the enumerator.</param>
      <param name="pVariableDispenser">The object for locking variables.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
      <param name="pLog">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumerator100.InitializeForEachEnumerator(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker100)">
      <summary>Initializes the properties associated with the task.</summary>
      <param name="pConnections">A collection of the connections.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
      <param name="pRefTracker">The reference tracker.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumerator100.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the enumerator to determine if it contains invalid settings that will prevent it from executing successfully.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the success or failure of the validation.</returns>
      <param name="pConnections">A collection of connections used by the enumerator.</param>
      <param name="pVariableDispenser">The object for locking variables.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
      <param name="pLog">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfo100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfo100.CreateNew">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfo100.FileName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfo100.FileNameVersionString">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfo100.ForEachEnumeratorContact">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfo100.UITypeName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100">
      <summary>Represents the interface for the collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo" /> objects.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100.Count">
      <summary>Gets the number of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100" /> objects.</summary>
      <returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100" /> objects.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100" /> collection.</summary>
      <returns>The used enumerator.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100.Item(System.Object)">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100" /> item.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos100" /> item.</returns>
      <param name="Index">The index of the object to return from the collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItem100">
      <summary>Represents an interface for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItem" /> object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItem100.Add">
      <summary>Adds a new, empty <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemValue100" /> object to the end of the collection.</summary>
      <returns>A new, empty <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemValue100" /> object to the end of the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItem100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItem100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the collection.</summary>
      <returns>An enumerator for use in iterating over the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItem100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemValue100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemValue100" /> object from the collection.</returns>
      <param name="Index">The name, description, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemValue100" /> object to return from the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItem100.Remove(System.Object)">
      <summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItem100" /> object from the collection.</summary>
      <param name="Index">The name, index, ID, or identity of the object to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemEnumerator100">
      <summary>Represents an interface of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemEnumerator" /> object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemEnumerator100.ExportXML(System.String)">
      <summary>Exports data to an XML file.</summary>
      <param name="bstrFileName">The name of the file to export.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemEnumerator100.ImportXML(System.String)">
      <summary>Imports an XML file into the collection.</summary>
      <param name="bstrFileName">The name of the file to import.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemEnumerator100.Items">
      <summary>Gets a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100" />.</summary>
      <returns>A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100" />.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100">
      <summary>Represents an interface for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItems" /> object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100.Add">
      <summary>Adds a new collection to the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100" /> collection.</summary>
      <returns>A new collection to the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100.Count">
      <summary>Gets the number or elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the collection.</summary>
      <returns>An enumerator for use in iterating over the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemValue100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemValue100" /> object from the collection.</returns>
      <param name="Index">The name, description, ID, or index of the object to return from the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100.Remove(System.Object)">
      <summary>Removes a specified collection from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems100" /> collection.</summary>
      <param name="Index">The name, index, ID, or identity of the collection to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemsProvider100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemValueEnumerator" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemsProvider100.ForEachItems">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemValueEnumerator" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemValue100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemValue" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemValue100.Value">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemValue" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachLoop100">
      <summary>Represents an interface that defines the ForEach loop process.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachLoop100.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Executes the ForEach loop process.</summary>
      <returns>The result of the execution.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">The collection of events.</param>
      <param name="pLog">The collection of logs.</param>
      <param name="pTransaction">The collection of transactions.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachLoop100.ForEachEnumerator">
      <summary>Gets or sets a host for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumerator" />.</summary>
      <returns>The host for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumerator" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachLoop100.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Validates the ForEach loop process .</summary>
      <returns>The validated loop process.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">The collection of events</param>
      <param name="pLog">The collection of logs.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachLoop100.VariableMappings">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachVariableMappings" /> collection that contains the variable mappings for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop" />.</summary>
      <returns>The returned mapping collection.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMapping100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachVariableMapping" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMapping100.ValueIndex">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachVariableMapping" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMapping100.VariableName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachVariableMapping" />. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100">
      <summary>Represents an interface of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachVariableMappings" /> object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100.Add">
      <summary>Adds a new collection to the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100" /> collection.</summary>
      <returns>A new collection to the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100.Count">
      <summary>Gets the number or elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the collection.</summary>
      <returns>An enumerator for use in iterating over the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100" /> object from the collection.</returns>
      <param name="Index">The name, description, ID, or index of the object to return from the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100.Remove(System.Object)">
      <summary>Removes a specified collection from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings100" /> collection.</summary>
      <param name="Index">The name, index, ID, or identity of the collection to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForLoop100">
      <summary>Represents an interface for the ForLoop process.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForLoop100.AssignExpression">
      <summary>Gets or sets an expression to increment or decrement the loop counter.</summary>
      <returns>The expression that increments or decrements the loop counter.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForLoop100.EvalExpression">
      <summary>Gets or sets the expression that is evaluated on each pass of the loop.</summary>
      <returns>The expression used to test whether the loop should stop or continue looping.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForLoop100.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the application, container, or package as part of a package workflow.</summary>
      <returns>The result of the execution.</returns>
      <param name="pConnections">The Connections collection for the container.</param>
      <param name="pVariables">The Variables collection for the container.</param>
      <param name="pEvents">An IDTSEvents interface to raise events.</param>
      <param name="pLog">An IDTSLogging interface.</param>
      <param name="pTransaction">he transaction object that the container is a part of, depending on the value found in the TransactionOption property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForLoop100.InitExpression">
      <summary>Gets or sets an optional initialization expression.</summary>
      <returns>The optional initialization expression.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForLoop100.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the container to determine if it contains invalid settings that will prevent it from executing successfully.</summary>
      <returns>The result of the validation.</returns>
      <param name="pConnections">The Connections collection for the container.</param>
      <param name="pVariables">The Variables collection for the container.</param>
      <param name="pEvents">An IDTSEvents interface to raise events.</param>
      <param name="pLog">An IDTSLogging interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100">
      <summary>Represents the interface for the FTP Client Connection.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.ChunkSize">
      <summary>Gets or sets the size of the chunk.</summary>
      <returns>The size of the chunk.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.Close">
      <summary>Closes the client connection.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.Connect">
      <summary>Establishes a connection for the client.</summary>
      <returns>The established connection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.CreateRemoteDirectory(System.String)">
      <summary>Creates a remote directory for the connection.</summary>
      <param name="remoteDirectoryPath">The path for the remote directory.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.DeleteFiles(System.String[])">
      <summary>Deletes files for the client connection.</summary>
      <param name="remoteFiles">The remote files to be deleted.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.DeleteRemoteDirectory(System.String)">
      <summary>Deletes the remote directory for the client connection.</summary>
      <param name="remoteDirectoryPath">The remote directory path.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.GetListing(System.String[]@,System.String[]@)">
      <summary>Gets the listing for the client connection.</summary>
      <param name="pFolderNames">The folder names.</param>
      <param name="pFileNames">The file names.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.GetWorkingDirectory">
      <summary>Gets the working directory for the client connection.</summary>
      <returns>The working directory.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.ReceiveFiles(System.String[],System.String,System.Boolean,System.Boolean)">
      <summary>Receives files from a remote location..</summary>
      <param name="remoteFileNames">The remote filename.</param>
      <param name="localPath">The destination path.</param>
      <param name="overWrite">True if the file will overwrite the existing file; otherwise, false.</param>
      <param name="transferASCII">True if the file transfers ASCII; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.Retries">
      <summary>Gets or sets the number of times that the FTP client retried connecting.</summary>
      <returns>The number of retries occurred.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.SendFiles(System.String[],System.String,System.Boolean,System.Boolean)">
      <summary>Send files to a remote location.</summary>
      <param name="localFileNames">The local file name.</param>
      <param name="remotePath">The remote path.</param>
      <param name="overWrite">True if the file will overwrite the existing file; otherwise, false.</param>
      <param name="transferASCII">True if the file transfers ASCII; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.ServerName">
      <summary>Gets or sets the name of the server.</summary>
      <returns>The name of the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.ServerPassword">
      <summary>Sets the server password.</summary>
      <returns>The server password.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.ServerPort">
      <summary>Gets or sets the server port used in the connection.</summary>
      <returns>The server port used.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.ServerUserName">
      <summary>Gets or sets the user name for the server.</summary>
      <returns>The user name for the server.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.SetWorkingDirectory(System.String)">
      <summary>Sets the working directory for the client connection.</summary>
      <param name="currentDirectory">The directory to be set.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.Timeout">
      <summary>Gets or sets the time out for the connection.</summary>
      <returns>The timeout for the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection100.UsePassiveMode">
      <summary>Gets or sets whether the client connection uses passive mode.</summary>
      <returns>True if the client connection uses passive mode, otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHasInternalProperties100">
      <summary>Represents a DTS internal properties.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHasInternalProperties100.GetInternalProperties(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100)">
      <summary>Gets the specified internal properties.</summary>
      <param name="pProperties">A collection of internal properties.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHasInternalProperties100.GetInternalPropertiesVersion">
      <summary>Gets the version of the internal properties.</summary>
      <returns>The version of the internal properties.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection100Class" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether the proxy server is configured to use credentials and bypass the proxy server and use local addresses instead.</summary>
      <returns>true to bypass the proxy server; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.Certificate">
      <summary>Gets or sets the certificate.</summary>
      <returns>The certificate.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.CertificateIdentifier">
      <summary>Gets or sets the certificate identifier.</summary>
      <returns>The certificate identifier.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ChunkSize">
      <summary>Gets or sets the value that indicates the minimum number of bytes to retrieve from or send to the server during a read/write operation.</summary>
      <returns>The minimum number of bytes to retrieve or send.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.Clone">
      <summary>Returns an instance <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100" /> object.</summary>
      <returns>An instance <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.DownloadData">
      <summary>Returns a byte array that contains the data downloaded from the resource that was specified in the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ServerURL" /> property.</summary>
      <returns>A byte array that contains the downloaded data.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.DownloadFile(System.String,System.Boolean)">
      <summary>Downloads data from the resource specified by <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ServerURL" /> property to a local file.</summary>
      <param name="FileName">The name of the local file into which the downloaded data is stored.</param>
      <param name="vbOverwriteDestination">True to overwrite the existing file; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.GetProxyPassword">
      <summary>Gets the proxy password.</summary>
      <returns>The proxy password.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.GetServerPassword">
      <summary>Gets the server password.</summary>
      <returns>The server password.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.OpenRead">
      <summary>Opens a readable stream for the data to be downloaded from the resource specified by the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ServerURL" /> property.</summary>
      <returns>A stream used to read data from the resource.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ProxyBypassList">
      <summary>Gets or sets the addresses that do not use a proxy server.</summary>
      <returns>The addresses that do not use a proxy server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ProxyDomain">
      <summary>Gets or sets the domain setting that is used to log on to the proxy.</summary>
      <returns>The domain setting that is used to log on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ProxyPassword">
      <summary>Sets the password used to log on to the proxy.</summary>
      <returns>The password used to log on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ProxyURL">
      <summary>Gets or sets the URL that specifies the location of the proxy.</summary>
      <returns>The URL that specifies the location of the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ProxyUserName">
      <summary>Gets or sets the username that is used when logging on to the proxy.</summary>
      <returns>The username used to log on to the proxy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ServerDomain">
      <summary>Gets or sets the domain used to log on to the server.</summary>
      <returns>The domain used to log on to the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ServerPassword">
      <summary>Sets the password used to log on to the server.</summary>
      <returns>The password used to log on to the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ServerURL">
      <summary>Gets or sets the URL that specifies the location of the server.</summary>
      <returns>The URL that specifies the location of the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ServerUserName">
      <summary>Gets or sets the username used to log on to the server.</summary>
      <returns>The username used to log on to the server.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.ShowCertificateDialog(System.Int64)">
      <summary>Displays the windows certificate information dialog box.</summary>
      <param name="hWnd">Handle to a window.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.Timeout">
      <summary>Gets or sets the number of seconds after which the HTTP operation times out.</summary>
      <returns>The number of seconds after which the HTTP operation times out.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.UseProxy">
      <summary>Gets or sets a value that indicates whether or not the connection will use a proxy.</summary>
      <returns>true if the connection will use a proxy; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.UseProxyCredentials">
      <summary>Gets or sets a value that indicates whether or not the connection will use network credentials.</summary>
      <returns>true if the connection will use network credentials; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.UseSecureConnection">
      <summary>Gets or sets a value that indicates whether the connection is HTTPS or HTTP.</summary>
      <returns>true if secure HTTP connection is used; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection100.UseServerCredentials">
      <summary>Gets or sets a value that indicates whether the connection uses network credentials.</summary>
      <returns>true if the connection uses network credentials; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100">
      <summary>Defines an interface that is used to fire informational, warning, and error events.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100.FireError(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)">
      <summary>Fires an error.</summary>
      <param name="ErrorCode">The error message.</param>
      <param name="SubComponent">The sub-module within a source.</param>
      <param name="Description">Text of the message.</param>
      <param name="HelpFile">The path to the Help file that contains detailed information.</param>
      <param name="HelpContext">Identifier of the topic in the Help file.</param>
      <param name="pbCancel">A Boolean that indicates if this should cancel firing or continue firing.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100.FireInformation(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)">
      <summary>Fires an informational event.</summary>
      <param name="InformationCode">An Integer that identifies the information message.</param>
      <param name="SubComponent">An arbitrary string that identifies the sub-module within a source.</param>
      <param name="Description">Text of the message.</param>
      <param name="HelpFile">The path to the Help file that contains detailed information.</param>
      <param name="HelpContext">Identifier of the topic in the Help file.</param>
      <param name="pbFireAgain">A Boolean that indicates whether the task should continue executing. A value of true indicates that the error should cause the task to cancel.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100.FireWarning(System.Int32,System.String,System.String,System.String,System.Int32)">
      <summary>Fires a warning.</summary>
      <param name="WarningCode">An Integer that identifies the warning message.</param>
      <param name="SubComponent">An arbitrary string that identifies the sub-module within a source. For example, the transform in a Pipeline task.</param>
      <param name="Description">Text of the message.</param>
      <param name="HelpFile">The path to the Help file that contains detailed information.</param>
      <param name="HelpContext">Identifier of the topic in the Help file.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfo100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogEntryInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfo100.FrequencyHint">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogEntryInfo" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100"></member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100.Add(System.String,System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLogEntryFrequency)">
      <summary>Adds a new log entry object to the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100" /> collection.</summary>
      <param name="LogEntryName">The name of the log entry to add to the collection.</param>
      <param name="Description">A description for the log entry.</param>
      <param name="FrequencyHint">One of the valid values from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLogEntryFrequency" /> enumerator.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the collection.</summary>
      <returns>An enumerator for use in iterating over the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100.Item(System.Object)">
      <summary>Gets a log entry object from the collection.</summary>
      <returns>A log entry object from the collection.</returns>
      <param name="Index">The name, description, ID, or index of the object to locate in the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100.Remove(System.Object)">
      <summary>Removes a specified collection from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100" /> collection.</summary>
      <param name="Index">The name, index, ID, or identity of the collection to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100">
      <summary>Defines the logging options for the container.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100.Enabled">
      <summary>Gets a value that indicates whether logging is enabled.</summary>
      <returns>true if logging is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100.GetFilterStatus(System.String[]@)">
      <summary>Indicates whether to get the filter status of the specified events.</summary>
      <returns>true to get the filter status of the specified events; otherwise, false.</returns>
      <param name="EventNames">The events whose filtering status you are interested in.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
      <summary>Writes the log entry.</summary>
      <param name="EventName">The event calling the log entry.</param>
      <param name="Computer">The name of local computer.</param>
      <param name="Operator">The user account.</param>
      <param name="SourceName">The object that is the source of the event.</param>
      <param name="SourceID">The identifier of the task.</param>
      <param name="ExecutionID">The execution ID.</param>
      <param name="MessageText">The text to write in the log.</param>
      <param name="StartTime">The start time of the event.</param>
      <param name="EndTime">The end time of the event.</param>
      <param name="DataCode">Numeric data field.</param>
      <param name="DataBytes">A byte array field for binary large objects</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100">
      <summary>Represents an interface of the DTS logging options.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100.EventFilter">
      <summary>Gets or sets an array that contains the names of the events that are the subject of the filtering options.</summary>
      <returns>The names of the events that are the subject of the filtering options.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100.EventFilterKind">
      <summary>Gets or sets a value that describes the kind of event filter that is set, whether included or excluded.</summary>
      <returns>The kind of event filter that is set, whether included or excluded.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100.GetColumnFilter(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER@)">
      <summary>Returns column filter for the specified event.</summary>
      <param name="EventName">The name of the event whose columns you want to control.</param>
      <param name="ColumnFilter">The column filter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100.GetColumnFilteredEvents">
      <summary>Returns a string array that contains a list of events that have a column filter set.</summary>
      <returns>An array of strings that contain the events that have a column filter set on them.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100.SelectedLogProviders">
      <summary>Gets a collection of log providers selected on the container.</summary>
      <returns>A collection of log providers selected on the container.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100.SetColumnFilter(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER)">
      <summary>Sets column filter for the specified event.</summary>
      <param name="EventName">The name of the event whose columns you want to control.</param>
      <param name="ColumnFilter">The column filter.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100">
      <summary>Implements an interface of a log provider.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100.CloseLog">
      <summary>Closes the log.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100.ConfigString">
      <summary>Gets or sets the connection and configuration information for the specific log provider.</summary>
      <returns>The connection and configuration information for the specific log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100.OpenLog">
      <summary>Opens the log.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the log and returns an enumeration that indicates success or failure.</summary>
      <returns>One of the values of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100.FileName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100.FileNameVersionString">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100.IconFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100.IconResource">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100.LogProviderContact">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100.LogProviderType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100.UITypeName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfos100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfos" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfos100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfos100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfos100" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> enumerator for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfos100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfos100.Item(System.Object)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100" /> object from the collection.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo100" /> object from the collection.</returns>
      <param name="Index">The name, description, ID, or index of the object to return from the collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInit100">
      <summary>Represents an initialized log provider.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInit100.InitializeLogProvider(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker100)">
      <summary>Called when the log provider is added to a package.</summary>
      <param name="pConnections">The collection of package connections.</param>
      <param name="pEvents">The events supplied by the package.</param>
      <param name="pRefTracker">The reference tracker.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders100">
      <summary>Represents an interface of log providers.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders100.Add(System.String)">
      <summary>Adds the specified log provider to the end of the collection.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100" /> object added to the collection.</returns>
      <param name="LogProviderClsidOrProgId">The class ID or ProgID of the log provider to add to the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders100.Count">
      <summary>Gets the number or elements contained in the collection.</summary>
      <returns>The number or elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders100.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders100" /> collection.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> for use in iterating over the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders100.Item(System.Object)">
      <summary>Gets a log provider object from the collection.</summary>
      <returns>A log provider object from the collection.</returns>
      <param name="Index">The name, description, ID, or index of the object to return from the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders100.Join(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100)">
      <summary>Joins a specified log provider to the collection.</summary>
      <param name="pLogProvider">The log provider to join to the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders100.Remove(System.Object)">
      <summary>Removes a log provider object from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders100" /> collection.</summary>
      <param name="Index">The index of the log provider to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedForEachEnumeratorWrapper100">
      <summary>Describes the interface for the ForEach enumerator wrapper.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedForEachEnumeratorWrapper100.ManagedForEachEnumeratorQualifiedName">
      <summary>Gets the qualified name for the managed ForEach wrapper enumerator.</summary>
      <returns>The qualified name.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedForEachEnumeratorWrapper100.SetManagedForEachEnumerator(System.String)">
      <summary>Sets the managed ForEach enumerator.</summary>
      <param name="className">The class name.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedForEachEnumeratorWrapper100.WrappedForEachEnumerator">
      <summary>Gets or sets the wrapped ForEach enumerator.</summary>
      <returns>The wrapped ForEach enumerator.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100">
      <summary>Specifies an interface of the managed helper.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.CloseManagedConnection(System.Object)">
      <summary>Closes the specified connection.</summary>
      <param name="pManagedConnection">The connection to close to.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.DecryptDocument(System.String@,System.String)">
      <summary>Decrypts the specified document.</summary>
      <param name="pbstrDocument">The document to decrypt.</param>
      <param name="bstrPassword">The password of the document to decrypt.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.EncryptDocument(System.String@,System.String)">
      <summary>Encrypts a specified document.</summary>
      <param name="pbstrDocument">The document to encrypt.</param>
      <param name="bstrPassword">The password of the document to encrypt.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.GetManagedConnection(System.String,System.String,System.Object)">
      <summary>Returns a managed connection.</summary>
      <returns>A managed connection.</returns>
      <param name="bstrAssemblyQualifiedName">The name of the qualified assembly.</param>
      <param name="bstrConnectionString">The connection string.</param>
      <param name="pTransaction">The connection transaction.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.GetNextManagedInfo(Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO@)">
      <summary>Indicates whether the connection gets the next managed information.</summary>
      <returns>true if the connection gets the next managed information; otherwise, false.</returns>
      <param name="pNextComponentInfo">The next component information.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.GetRawCertData(System.Object)">
      <summary>Returns the raw data for the certificate.</summary>
      <returns>A <see cref="T:System.Byte" /> that contains the certificate data.</returns>
      <param name="pCertObj">The certificate data to get.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.MakeCertObject(System.Int64)">
      <summary>Creates a certificate object.</summary>
      <returns>The created certificate object.</returns>
      <param name="hCertContext">The certificate context.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.OpenAssembly(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE)">
      <summary>Opens an assembly.</summary>
      <param name="pwszAssemblyName">The name of the assembly to open.</param>
      <param name="mitType">The managed information type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.SignDocument(System.String@,System.Int64,System.String,System.Int32,System.String,System.Int32)">
      <summary>Signs the document associated with the helper.</summary>
      <param name="pbstrDocument">The document.</param>
      <param name="hCertContext">The certificate context.</param>
      <param name="bstrKeyContainer">The key container.</param>
      <param name="iKeyNumber">The key number.</param>
      <param name="bstrProviderName">The provider name</param>
      <param name="iProviderType">The provider type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper100.VerifyDocument(System.String,System.Byte[]@,System.Byte[]@)">
      <summary>Indicates whether the document is verified.</summary>
      <returns>true if the document is verified; otherwise, false.</returns>
      <param name="bstrDocument">The document to verify.</param>
      <param name="ppsaRawCertData">The raw data certificate.</param>
      <param name="ppsaSignerPublicKeyBlob">The signer public key.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedPropertyHelper100">
      <summary>Represents a managed property helper.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedPropertyHelper100.GetNextManagedProperty(Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_PROPERTY@)">
      <summary>Indicates whether to get the next managed property.</summary>
      <returns>true to get the next managed property; otherwise, false.</returns>
      <param name="nextManagedProperty">The managed property.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedPropertyHelper100.GetPropertyValue(System.Object,System.Int32)">
      <summary>Gets the property value.</summary>
      <returns>The object property value.</returns>
      <param name="pObject">The object property.</param>
      <param name="Index">The index.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedPropertyHelper100.ReflectOnObject(System.Object)">
      <summary>Reflects the helper on object.</summary>
      <param name="oObjectToReflect">The object to reflect.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedPropertyHelper100.SetPropertyValue(System.Object,System.Int32,System.Object)">
      <summary>Sets the property value associated with the helper.</summary>
      <param name="pObject">The object.</param>
      <param name="Index">The index.</param>
      <param name="vValue">The property value.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedSerializer100">
      <summary>Describes the interface for the managed serializer.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedSerializer100.DeSerialize(System.String)">
      <summary>Deserializes an XML document.</summary>
      <returns>The deserialized XML.</returns>
      <param name="xml">The object to be deserialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedSerializer100.IsSerializable(System.Object)">
      <summary>Specifies whether an object can be deserialized.</summary>
      <returns>True if an object can be deserialized; otherwise, false.</returns>
      <param name="pObject">The object to be deserialiazed.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedSerializer100.Serialize(System.Object)">
      <summary>Serializes an object.</summary>
      <returns>The serialized object.</returns>
      <param name="pObject">The object to be serialiazed.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedTask100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSManagedTask" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedWrapper100">
      <summary>Represents a DTS managed wrapper.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedWrapper100.ManagedForEachEnumeratorQualifiedName">
      <summary>Gets the qualified name of the managed wrapper for each enumerator.</summary>
      <returns>The qualified name of the managed wrapper for each enumerator.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedWrapper100.SetManagedObject(System.String,System.String)">
      <summary>Sets the managed assembly object.</summary>
      <param name="assemblyName">The name of the assembly.</param>
      <param name="className">The class name.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedWrapper100.WrappedConnection">
      <summary>Gets or sets the wrapped connection.</summary>
      <returns>The wrapped connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedWrapper100.WrappedForEachEnumerator">
      <summary>Gets or sets the wrapped object for each enumerator.</summary>
      <returns>The wrapped object for each enumerator.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedWrapper100.WrappedLogProvider">
      <summary>Gets or sets the wrapped log provider.</summary>
      <returns>The wrapped log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedWrapper100.WrappedTask">
      <summary>Gets or sets the wrapped task.</summary>
      <returns>The wrapped task.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedXmlSerializationHelper100">
      <summary>Describes the interface for the XML serialization helper.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedXmlSerializationHelper100.AfterSavePackageToXML(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,System.String@)">
      <summary>Returns the managed XML serialization helper after saving the package to XML.</summary>
      <param name="pPackage">The IDTSPackage100 object.</param>
      <param name="pEvents">The IDTSInfoEvents100 event object.</param>
      <param name="bstrPackageXml">The package XML object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedXmlSerializationHelper100.BeforeLoadPackageFromXML(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,System.String@)">
      <summary>Returns the managed XML serialization helper before loading the package to XML.</summary>
      <param name="pPackage">The IDTSPackage100 object.</param>
      <param name="pEvents">The IDTSInfoEvents100 event object.</param>
      <param name="bstrPackageXml">The package XML object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSName100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSName" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSName100.CreationName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSName" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSName100.Description">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSName" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSName100.ID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSName" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSName100.Name">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSName" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectHost100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectHost100.DelayValidation">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectHost100.HostType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectHost100.InnerObject">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker100">
      <summary>Provides an interface for the analysis regarding the impact and consequences of deleting variables and connections from a package.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker100.AddReference(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectReferenceType,System.Int32@)">
      <summary>Adds a reference to a list for reference tracking.</summary>
      <param name="ObjectNameOrID">The object name or ID of the object that owns the list.</param>
      <param name="RefType">The type of reference to be tracked.</param>
      <param name="RefListID">The identifier of the reference list.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker100.DestroyList(System.Int32)">
      <summary>Destroys the specified reference list from reference tracking.</summary>
      <param name="RefListID">The reference list identifier of the reference list to destroy.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker100.RemoveReference(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectReferenceType,System.Int32@)">
      <summary>Removes a reference from an existing list.</summary>
      <param name="ObjectNameOrID">The object name or identifier to remove from the tracking list.</param>
      <param name="RefType">The type of reference to track.</param>
      <param name="RefListID">The list identifier in which the object to remove is currently located.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker100.SetListInfo(System.Int32,System.String,System.String)">
      <summary>Provides metadata for an existing reference list.</summary>
      <param name="RefListID">The list identifier in which the object is currently located.</param>
      <param name="UsageLocation">The location where the object is used.</param>
      <param name="UsageDescription">A description that explains where the object is being used.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectVersionUpdate100">
      <summary>Represents an interface for the  version update of data transformatioon services object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectVersionUpdate100.CanUpdate(System.String)">
      <summary>Specifies whether the version of DTS object can be updated.</summary>
      <returns>True if the version of DTS object can be updated; otherwise, false.</returns>
      <param name="ObjectCreationName">The name of the object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectVersionUpdate100.Update(System.String@)">
      <summary>Updates the version of the DTS object.</summary>
      <param name="pbstrObjectXML">The object to be updated</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectVersionUpdate100.Version">
      <summary>Gets the version of the DTS object.</summary>
      <returns>The version of the DTS object.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSODBCHandles100">
      <summary>Defines the native interface for the ODBC connection. A reference to this interface is returned from the <see cref="M:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.AcquireConnection(System.Object)" /> method when the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager" /> is of type ODBC.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSODBCHandles100.cstr">
      <summary>Returns a String that contains the completed connection string returned by the driver.</summary>
      <returns>A String that contains the connection string.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSODBCHandles100.hdbc">
      <summary>Returns an Integer that contains the ODBC database connection handle.</summary>
      <returns>An Integer that contains the ODBC database connection handle.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSODBCHandles100.henv">
      <summary>Returns an Integer that contains the ODBC environment handle.</summary>
      <returns>An Integer that contains the ODBC environment handle.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100">
      <summary>Represents an interface implemented by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package" /> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutral" /> interfaces.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.CertificateContext">
      <summary>Gets or sets the certificate context.</summary>
      <returns>The certificate context.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.CertificateObject">
      <summary>Gets or sets the certificate package for the package.</summary>
      <returns>The certificate package for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.CheckpointFileName">
      <summary>Gets or sets the name of the file that captures the checkpoint information, which enables a package to restart.</summary>
      <returns>The name of the file that captures the checkpoint information, which enables a package to restart.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.CheckpointUsage">
      <summary>Gets or sets a value that specifies if or when a package is restarted.</summary>
      <returns>A value that specifies if or when a package is restarted.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.CheckSignature">
      <summary>Checks the status of the digital signature of the package.</summary>
      <returns>One of the enumeration values that indicates the status of the digital signature.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.CheckSignatureOnLoad">
      <summary>Gets or sets a value that indicates whether the digital signature is checked when a package is loaded from XML.</summary>
      <returns>true if the digital signature is checked when the package is loaded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.Configurations">
      <summary>Gets the collection of configurations for the package.</summary>
      <returns>The collection of configurations for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.Connections">
      <summary>Gets the collection of connection managers for the package.</summary>
      <returns>The collection of connection managers for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.CreationDate">
      <summary>Gets or sets the date and time that the package was created.</summary>
      <returns>The date and time that the package was created.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.CreatorComputerName">
      <summary>Gets or sets the name of the computer on which the package was created.</summary>
      <returns>The name of the computer on which the package was created.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.CreatorName">
      <summary>Gets or sets the name of the individual who created the package.</summary>
      <returns>The name of the individual who created the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.DesignEvents">
      <summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> that indicates if the designer or other third-party client is to receive events during design time.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.DesignTimeProperties">
      <summary>Gets or sets the design time properties of a package.</summary>
      <returns>The design time properties of a package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.EnableConfigurations">
      <summary>Gets or sets a value that indicates whether the package loads configurations.</summary>
      <returns>true if the package loads configuration; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.EncryptCheckpoints">
      <summary>Gets or sets a value that indicates whether checkpoint files are encrypted.</summary>
      <returns>true if checkpoint files are encrypted; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.Errors">
      <summary>Gets the collection of errors associated with the package.</summary>
      <returns>The collection of errors associated with the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.Execute">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that contains information about the success or failure of the package execution.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that contains information about the success or failure of the package execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the application, container, or package as part of a package workflow.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the execution.</returns>
      <param name="pConnections">The collection of connections for the container.</param>
      <param name="pVariables">The collection of variables for the container.</param>
      <param name="pEvents">An interface to raise the events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The transaction object that the container is a part of.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.ExportConfigurationFile(System.String)">
      <summary>Creates an XML file that contains all deployable variables in the package.</summary>
      <param name="bstrFileName">The name of the configuration file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.ExtendedProperties">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100" /> collection for the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100" /> collection for the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.FindReferencedObjects(System.Object)">
      <summary>Returns a reference object enumeration.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100" /> enumerator.</returns>
      <param name="pObject">The object to locate.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.GetBreakpointTargets(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100,System.Boolean)">
      <summary>Returns <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100" /> collection.</summary>
      <returns>A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100" />.</returns>
      <param name="pBreakpointSite">An object implementing the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100" /> interface.</param>
      <param name="onlyEnabled">true if only enabled breakpoints are included in the collection; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.GetObjectFromPackagePath(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100@)">
      <summary>Returns a package property and the object from the specified package path.</summary>
      <returns>An object that contains the information you want.</returns>
      <param name="bstrPath">The path to the package.</param>
      <param name="ppProperty">The object is the property that you want.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.GetPreExecutionPackageXML(System.Object@)">
      <summary>Gets a pre-execution package XML.</summary>
      <param name="pvDestination">The destination of the execution.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.ImportConfigurationFile(System.String)">
      <summary>Loads a configuration file associated with the package.</summary>
      <param name="bstrFileName">The path and the name of the file that contains the configuration.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.InteractiveMode">
      <summary>Gets or sets a value that indicates whether tasks should show user interface objects while executing.</summary>
      <returns>true if tasks should show user interface objects while executing; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.LastModifiedProductVersion">
      <summary>Gets the version of the package that is last modified.</summary>
      <returns>The version of the package that is last modified.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.LoadUserCertificateByHash(System.Byte[]@)">
      <summary>Loads the certificate for the package according to the certificate hash.</summary>
      <param name="ppsaCertHash">A byte array that contains the hash of the certificate for the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.LoadUserCertificateByName(System.String)">
      <summary>Loads the certificate for the package according to the certificate name.</summary>
      <param name="SubjectName">The name of the certificate for the package.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.LogProviders">
      <summary>Returns the collection of log providers associated with the package.</summary>
      <returns>The collection of log providers associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.MaxConcurrentExecutables">
      <summary>Gets or sets the number of threads that a package can create.</summary>
      <returns>The number of threads that a package can create.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.OfflineMode">
      <summary>Gets or sets a value that indicates whether the package is working in offline mode.</summary>
      <returns>true if the package is working in offline mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.PackageFormatVersion">
      <summary>Gets the format version of the package.</summary>
      <returns>The format version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.PackageLocation">
      <summary>Gets or sets a string that contains the location of the package.</summary>
      <returns>The location of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.PackagePassword">
      <summary>Sets the password for the package.</summary>
      <returns>The password for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.PackagePriorityClass">
      <summary>Gets or sets the priority class of the package.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPriorityClass" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.PackageType">
      <summary>Gets or sets the package type.</summary>
      <returns>The package type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.PackageUpgradeOptions">
      <summary>Gets or sets the package upgrade options.</summary>
      <returns>The package upgrade options.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.PermitUnencryptedSave(System.Boolean)">
      <summary>Specifies the unencrypted permit.</summary>
      <param name="vbPermit">true if the permit is unencrypted; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.ProcessConfiguration(System.String,System.Object)">
      <summary>Sets configuration information for a package and its objects.</summary>
      <param name="bstrPath">The location of the configuration file.</param>
      <param name="vValue">The data type of the configuration file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.ProtectionLevel">
      <summary>Gets or sets the level of protection on the package.</summary>
      <returns>The level of protection on the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.SafeRecursiveProjectPackageExecution">
      <summary>Gets or sets a value that indicates whether the package execution is a safe recursive project.</summary>
      <returns>true if the package execution is a safe recursive project; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.SaveCheckpoints">
      <summary>Gets or sets a value that indicates whether the package will use checkpoints during package execution.</summary>
      <returns>true if the package will use checkpoints during package execution; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.SQLFolder">
      <summary>Gets or sets the package folder name.</summary>
      <returns>The package folder name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.SuppressConfigurationWarnings">
      <summary>Gets or sets a value that indicates whether the warnings generated by configurations are suppressed.</summary>
      <returns>true if the warnings generated by configurations are suppressed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.UpdateObjects">
      <summary>Gets or sets a value that indicates whether extensible objects can be updated at package load time if an updated version if found.</summary>
      <returns>true if extensible objects can be updated at package load time when an updated version is found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.UpdatePackage">
      <summary>Gets or sets a value that indicates whether packages can be updated when an updated version is found.</summary>
      <returns>true if packages can be updated when an updated version is found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the container to determine if it contains invalid settings that will prevent it from executing successfully.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the validation.</returns>
      <param name="pConnections">The collection of connections for the container.</param>
      <param name="pVariables">The collection of variables for the container.</param>
      <param name="pEvents">An interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.VersionBuild">
      <summary>Gets or sets the build version of the package.</summary>
      <returns>The build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.VersionComments">
      <summary>Gets or sets the comments associated with the package.</summary>
      <returns>The version comments for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.VersionGUID">
      <summary>Gets a unique GUID generated when the package is first created.</summary>
      <returns>The version GUID for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.VersionMajor">
      <summary>Gets or sets the major build version of the package.</summary>
      <returns>The major build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.VersionMinor">
      <summary>Gets or sets the minor build version of the package.</summary>
      <returns>The minor build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage100.Warnings">
      <summary>Gets a collection of warnings set on the package.</summary>
      <returns>A collection of warnings set on the package.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.CreationDate">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.Description">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.Flags">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.Folder">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.Name">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.PackageDataSize">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.PackageGuid">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.VersionBuild">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.VersionComments">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.VersionGUID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.VersionMajor">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100.VersionMinor">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100">
      <summary>Provides properties and methods for working on a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100" /> objects.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100.Count">
      <summary>Gets the number of elements contained in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100" /> instance.</summary>
      <returns>The number of elements contained in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100" /> instance.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos100.Item(System.Object)">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100" /> object from the collection.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo100" /> object from the collection that matches the index description provided in the <paramref name="Index" /> parameter.</returns>
      <param name="Index">The index of the object in the collection to return.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInternal100">
      <summary>Represents an interface implemented by the collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInternal100" /> container that need to have the internal property.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInternal100.Parameters">
      <summary>Gets the parameters used for this class.</summary>
      <returns>The parameters used for this class.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInternal100.SetFlagRunningInOutProcess">
      <summary>Sets the flag running the incoming and outgoing process.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInternal100.SetISServerExecutionID(System.Int64)">
      <summary>Sets the Integration Services server execution ID of the package.</summary>
      <param name="ISServerExecutionID">The Integration Services server execution ID to set.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInternal100.SSISExecSuspend(System.String,System.Int32)">
      <summary>Returns a String that contains the combined id and exec type.</summary>
      <param name="CombinedId">The name of the combined id.</param>
      <param name="ExecType">The value of the exec type</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackagePath100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPackagePath" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackagePath100.GetPackagePath">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPackagePath" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackagePersist100">
      <summary>Defines methods for the persistence of the package.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackagePersist100.ClonePackageToXML(System.Object@,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Clones the package to an XML format.</summary>
      <param name="pvDestination">The destination of the package.</param>
      <param name="vbReturnDOM">true to return DOM; otherwise, false.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackagePersist100.LoadPackageFromXML(System.Object,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads the package from an XML format.</summary>
      <param name="vSource">The source of the package.</param>
      <param name="vbSourceIsLocation">true to indicate that the source is a location; otherwise, false.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackagePersist100.SavePackageToXML(System.Object@,System.Boolean,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the package to an XML format.</summary>
      <param name="pvDestination">The destination of the package.</param>
      <param name="vbReturnDOM">true to return DOM; otherwise, false.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageSigning100">
      <summary>Represents an interface for the package signing.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageSigning100.CertificateContext">
      <summary>Gets or sets the context of the certificate associated with the package.</summary>
      <returns>The context of the certificate.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageSigning100.CertificateObject">
      <summary>Gets or sets the certificate object associated with the package.</summary>
      <returns>The certificate object associated with the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageSigning100.CheckSignature">
      <summary>Checks the signature of the package.</summary>
      <returns>The checked signature.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageSigning100.CheckSignatureOnLoad">
      <summary>Gets or sets whether the package checks the signature on loading.</summary>
      <returns>True if the package checks the signature on loading; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageSigning100.LoadUserCertificateByHash(System.Byte[]@)">
      <summary>Loads the user certificate using hash.</summary>
      <param name="ppsaCertHash">The hash.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageSigning100.LoadUserCertificateByName(System.String)">
      <summary>Loads the user certificate by name.</summary>
      <param name="SubjectName">The name of the subject.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageVersionUpdate100">
      <summary>Defines a method for the update of the package version.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageVersionUpdate100.UpdateVersion(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,System.String@,System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_PACKAGE_UPGRADE_OPTIONS)">
      <summary>Updates the version of the package.</summary>
      <param name="PackageVersion">The version of the package.</param>
      <param name="TargetVersion">The target version for the package to update.</param>
      <param name="Events">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface to raise errors, warning, or informational events.</param>
      <param name="XmlDocument">An XML document of the version update.</param>
      <param name="PackagePassword">The password of the package.</param>
      <param name="packageUpgradeVersion">The upgrade version of the package.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameter100">
      <summary>Represents an interface for the abstract base class used by both package parameter and project parameter.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameter100.DataType">
      <summary>Gets the data type of the Parameter object.</summary>
      <returns>The data type of the specified object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameter100.IncludeInDebugDump">
      <summary>Gets or sets a value that indicates whether the Parameter object is included in a debug dump.</summary>
      <returns>True if the Parameter object is included in a debug dump; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameter100.Required">
      <summary>Gets or sets a value that indicates whether the Parameter object is a required parameter.</summary>
      <returns>True if the Parameter object is a required parameter; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameter100.Sensitive">
      <summary>Gets or sets a value that indicates whether the Parameter object contains sensitive data.</summary>
      <returns>True if the Parameter object contains sensitive data; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameter100.Value">
      <summary>Gets or sets the value of the Parameter object.</summary>
      <returns>The value of the specified object.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameters100">
      <summary>Represents a class used by both the package parameters and project parameters collection.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameters100.Add(System.String,System.UInt16)">
      <summary>Adds a parameter object to the parameters collection with the specified name and data type.</summary>
      <returns>A newly added parameter object.</returns>
      <param name="bstrName">The name of the parameter.</param>
      <param name="usDataType">The data type of the parameter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameters100.Contains(System.Object)">
      <summary>Determines whether a parameter object with the specified name is contained in the parameters collection.</summary>
      <returns>True if a parameter object with the specified name is contained in the parameters collection; otherwise, false.</returns>
      <param name="Index">The index of the parameter.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameters100.Count">
      <summary>Gets the number of elements contained in the DTSReadOnlyCollectionBase instance.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameters100.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the DTSReadOnlyCollectionBase instance.</summary>
      <returns>Returns an IEnumerator for the DTSReadOnlyCollectionBase instance.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameters100.Item(System.Object)">
      <summary>Gets a parameter object in the parameters collection with the specified index.</summary>
      <returns>A parameter object with the specified index.</returns>
      <param name="Index">The location of the parameter object within the parameters collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameters100.Join(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameter100)">
      <summary>Joins the specified parameter to the parameters collection.</summary>
      <param name="pDTSParameter">The parameter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameters100.Remove(System.Object)">
      <summary>Removes a parameter object from the parameters collection.</summary>
      <param name="Index">The index of the parameter.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPerfRecorder100">
      <summary>Represents the interface for the performance recorder.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPerfRecorder100.GetCounterValues(System.String[]@,System.Int64[]@)">
      <summary>Retrieves the values of the counter.</summary>
      <param name="ppsaCounterNames">The counter names.</param>
      <param name="ppsaCounterValues">The counter values to be retrieved.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPerfRecorder100.UpdateCounter32(System.UInt32,System.Int32)">
      <summary>Updates the counter for the 32 bit signed integers.</summary>
      <param name="counterID">The counter identifier.</param>
      <param name="Value">The value of the counter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPerfRecorder100.UpdateCounter64(System.UInt32,System.Int64)">
      <summary>Updates the counter for the 64 bit signed integers.</summary>
      <param name="counterID">The counter identifier.</param>
      <param name="Value">The value of the counter.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist100">
      <summary>Represents an interface that enables <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist100" /> saving and loading data. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPersist" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist100.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads data stored in XML format. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPersist" />.</summary>
      <param name="pNode">The node that contains the data to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for raising events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist100.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves information to an XML document. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPersist" />.</summary>
      <param name="pDoc">The XML document to which to save the information.</param>
      <param name="pNode">The node in the above document to which to save the information.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.ComponentContact">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.ComponentType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.FileName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.FileNameVersionString">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.HelpCollection">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.HelpKeyword">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.IconFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.IconResource">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.NoEditor">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.SamplesTag">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.ShapeProgID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100.UITypeName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos100">
      <summary>Provides properties and methods for working on a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100" /> objects.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos100.Count">
      <summary>Gets the number of elements contained in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos100" /> instance.</summary>
      <returns>The number of elements contained in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos100" /> instance.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos100" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos100.Item(System.Object)">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100" /> object from the collection.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo100" /> object from the collection that matches the index description.</returns>
      <param name="Index">The name, ID, description, or index of the item to locate in the collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraint100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraint100.ConstrainedExecutable">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraint100.EvalOp">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraint100.EvaluatesTrue">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraint100.LogicalAnd">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraint100.Parent">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraint100.PrecedenceExecutable">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraint100.Value">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100">
      <summary>Provides properties and methods for working on a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraint100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100.Add(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100)">
      <summary>Adds the specified <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable100" /> as a precedence constraint to the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraint" /> object.</returns>
      <param name="pExecFrom">The executable that is before the precedence constraint.</param>
      <param name="pExecTo">The executable that is after the precedence constraint.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100.Count">
      <summary>Gets the number of elements contained in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> instance.</summary>
      <returns>The number of elements contained in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> instance.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100.Item(System.Object)">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraint" /> object from the collection.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraint" /> object from the collection that matches the index description.</returns>
      <param name="Index">The name, ID, or index to locate in the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100.Join(Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraint)">
      <summary>Joins the specified precedence constraint to the collection.</summary>
      <param name="pPrecedenceConstraint">The precedence constraint.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100.Remove(System.Object)">
      <summary>Removes the specified item as a precedence constraint from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection.</summary>
      <param name="Index">The name, identity, ID, or index to locate in the collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProductLevel100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProductLevel100.RequiredProductLevel">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100">
      <summary>Represents an interface which contains packages and parameters.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.ContainsPackage(System.String)">
      <summary>Specified whether the package is contained in the project.</summary>
      <returns>True if the package is contained in the project; otherwise, false.</returns>
      <param name="bstrPackageStreamName">The stream name of the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.EnsureConnectionsAreLoaded">
      <summary>Ensures that the connections are loaded for the project.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetConfiguredPackageByName(System.String)">
      <summary>Gets the configured package by name.</summary>
      <returns>The returned package.</returns>
      <param name="bstrPackageStreamName">The package stream name.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetConnections">
      <summary>Gets the connections for the package.</summary>
      <returns>The returned connections.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetPackage(System.Int32,System.String@)">
      <summary>Gets the package for the project.</summary>
      <returns>The returned package.</returns>
      <param name="iPackage">The package.</param>
      <param name="bstrPackageStreamName">The package stream name.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetPackageByName(System.String)">
      <summary>Gets the package by name.</summary>
      <returns>The returned package.</returns>
      <param name="bstrPackageStreamName">The package stream name.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetPackageCount">
      <summary>Returns the number of package for the project.</summary>
      <returns>The number of packages.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetPackageNoLoad(System.Int32,System.String@)">
      <summary>Gets the package that doesn’t have a load.</summary>
      <returns>The returned package.</returns>
      <param name="iPackage">The package.</param>
      <param name="bstrPackageStreamName">The stream name of the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetParameter(System.Int32)">
      <summary>Gets the collection of the project parameters.</summary>
      <returns>The collection of the project parameters.</returns>
      <param name="Index">The index.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetParameterCount">
      <summary>Gets the number of parameter.</summary>
      <returns>The number of parameter.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetParameterVariable(System.Int32)">
      <summary>Gets the parameter variable for the project.</summary>
      <returns>The parameter variable.</returns>
      <param name="Index">The index of the parameter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetParameterVariableByID(System.String)">
      <summary>Gets the parameter variable by identifier.</summary>
      <returns>The returned parameter variable.</returns>
      <param name="bstrID">The parameter identifier.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetParameterVariableByName(System.String)">
      <summary>Gets the parameter variable by name.</summary>
      <returns>The returned parameter variable.</returns>
      <param name="bstrName">The name of the parameter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetProtectionLevel">
      <summary>Gets the protection level of the project.</summary>
      <returns>The protection level of the project.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.GetVariables">
      <summary>Gets the variables for the project.</summary>
      <returns>The variables for the project.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.MatchPassword(System.String)">
      <summary>Matches the password for the project.</summary>
      <returns>The matched password.</returns>
      <param name="bstrPackagePassword">The package password.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.OfflineMode">
      <summary>Gets or sets a value that indicates whether the project is on offline mode.</summary>
      <returns>True if the project is on offline mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100.ProtectionLevelRequireConsistency">
      <summary>Gets whether consistency is required for the level of protection on the project.</summary>
      <returns>True if consistency is required for the level of protection on the project; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProjectAccessor100">
      <summary>Represents an interface for the DTS project assessor.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProjectAccessor100.CloseProject(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100)">
      <summary>Closes a specified project for the project assessor.</summary>
      <param name="pProject">The project to be closed.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProjectAccessor100.CreateSsisServerExecution(System.String,System.String,System.String,System.Boolean)">
      <summary>Creates an SSIS server execution.</summary>
      <param name="bstrServerName">The server name.</param>
      <param name="bstrPackagePath">The package path.</param>
      <param name="bstrReferenceId">The reference identifier.</param>
      <param name="bUse32BitRuntime">True if the method uses 32-bit runtime; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProjectAccessor100.OpenProject(System.String,System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Opens a specified project for the project assessor.</summary>
      <param name="bstrProjectFileName">The file name of the project.</param>
      <param name="bstrProjectPassword">The password of the project.</param>
      <param name="pEvents">The events.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProjectConnectionsCreator100">
      <summary>Represents a connections creator of a DTS project.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProjectConnectionsCreator100.CreateConnections(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100)">
      <summary>Creates a connection within a specified project.</summary>
      <returns>A new <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> object.</returns>
      <param name="pProject">The project with a specified connection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProjectPackage100">
      <summary>Represents a DTS project which contains packages.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProjectPackage100.GetProject">
      <summary>Gets the DTS project.</summary>
      <returns>The DTS project.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProjectPackage100.PasswordMatch(System.String)">
      <summary>Determines whether the specified password matches with package password.</summary>
      <returns>true if the specified password matches with package password; otherwise, false.</returns>
      <param name="bstrPackagePassword">The password to match with the package password.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProjectPackage100.SetProject(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100,System.String)">
      <summary>Sets the DTS project.</summary>
      <param name="pProject">The DTS project.</param>
      <param name="bstrPackageLocation">The location to the package items.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100">
      <summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100.Add(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100)">
      <summary>Adds a property to the collection.</summary>
      <param name="pProperty">The property to add in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100.Count">
      <summary>Gets the number of elements contained in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> instance.</summary>
      <returns>An integer that contains the number of elements contained in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> instance.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection.</summary>
      <returns>An enumerator.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> object.</returns>
      <param name="Index">The name, index, or identity of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> object to return.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPropertiesProvider100">
      <summary>Defines an interface, inherited by containers, that enables properties to be set by an expression, and allows an enumerable collection of properties to be associated with the container.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPropertiesProvider100.ComputeExpressions(System.Boolean)">
      <summary>Computes the expressions associated with the properties.</summary>
      <param name="recursive">true to indicate recursively evaluate the expressions associated with the properties; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPropertiesProvider100.GetExpression(System.String)">
      <summary>Returns a String that contains the expression for the specified property. Null means no expression is assigned.</summary>
      <returns>A String that contains the expression used to evaluate the property.</returns>
      <param name="bstrPropertyName">The name of the property whose expression you want to see.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPropertiesProvider100.Properties">
      <summary>Gets a collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> objects that have properties and methods for use with the container.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100" /> objects associated with the container.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPropertiesProvider100.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property. Specify null to remove an existing expression from the property.</summary>
      <param name="bstrPropertyName">The name of the property to which to assign the expression.</param>
      <param name="bstrExpression">The expression to assign to the property.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPropertiesProviderEx100">
      <summary>Represents the DTS properties provider expressions.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPropertiesProviderEx100.ComputeExpressions(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,System.Int32,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100)">
      <summary>Computes the expressions associated with the properties.</summary>
      <param name="pInfoEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> events interface to raise errors, warning, or informational events.</param>
      <param name="lLocaleID">The locale identifier.</param>
      <param name="pVariableDispenser">The variable dispenser that accesses the collection of variables.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPropertiesProviderEx100.HasExpressions">
      <summary>Gets a value that indicates whether this properties provider contains expressions.</summary>
      <returns>true if this properties provider contains expressions; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100">
      <summary>Represents an interface for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsProperty" /> object.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.ConnectionType">
      <summary>Gets the name of the connection manager used to create the connection.</summary>
      <returns>A String that contains the name of the connection manager used to create the connection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.DataType">
      <summary>Gets the data type of the property.</summary>
      <returns>The data type of the property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.Get">
      <summary>Gets a value that indicates whether a property value can be read.</summary>
      <returns>true if a property value can be read; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.GetExport(System.Object)">
      <summary>Indicates a value whether the object can be exported.</summary>
      <returns>true if the object can be exported; otherwise, false.</returns>
      <param name="pObject">The object on which the exportability flag is desired.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.GetExpression(System.Object)">
      <summary>Gets the expression for the specified object.</summary>
      <returns>The expression used to evaluate the property.</returns>
      <param name="pObject">The name of the object whose expression you want to see.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.GetPackagePath(System.Object)">
      <summary>Gets the relative path to the location of the specified package.</summary>
      <returns>The relative path to the location of the specified package.</returns>
      <param name="pObject">An object that contains the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.GetValue(System.Object)">
      <summary>Returns the value of the property.</summary>
      <returns>An object that contains the value of the property.</returns>
      <param name="pObject">The parent object of the property whose value is to be returned.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.Name">
      <summary>Gets the name of the property.</summary>
      <returns>The name of the property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.PropertyKind">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPropertyKind" /> enumeration that contains information about the custom attributes on a property.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPropertyKind" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.Set">
      <summary>Gets a value that indicates whether the referenced object property is changeable.</summary>
      <returns>true if the referenced object property is changeable and the property referenced is read/write or write-only; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.SetExport(System.Object,System.Boolean)">
      <summary>Sets the export flag for the specified object.</summary>
      <param name="pObject">The object on which the flag is being set.</param>
      <param name="vbExport">true to set on the object’s export flag; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.SetExpression(System.Object,System.String)">
      <summary>Assigns the specified expression to the object.</summary>
      <param name="pObject">The name of the object to which to assign the expression.</param>
      <param name="bstrExpression">The expression.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.SetValue(System.Object,System.Object)">
      <summary>Sets the value of the property.</summary>
      <param name="pObject">The object instance on which you want to set the value of the property.</param>
      <param name="NewValue">The new value to which to set the property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.TypeConverter">
      <summary>Gets the assembly-qualified type name of the type converter object for the property.</summary>
      <returns>The assembly-qualified type name of the object that does type conversion.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100.UITypeEditor">
      <summary>Gets the assembly-qualified type name of the graphical editor for the property.</summary>
      <returns>The assembly-qualified type name of the UI editor for the property.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100.ExecutionDuration">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100.ExecutionStartTime">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100.InstanceID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100.PackageDescription">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100.PackageID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100.PackageName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100.Stop">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100.UserName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackages100">
      <summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage100" /> objects.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackages100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackages100.GetEnumerator">
      <summary>Gets an enumerator that iterates through the collection.</summary>
      <returns>An enumerator object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackages100.Item(System.Object)">
      <summary>Gets the running package with the specified key.</summary>
      <returns>The running package with the specified key.</returns>
      <param name="Index">The name, identity, ID, or index of the running package to return.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject100">
      <summary>This interface is inherited by native classes that are containers, and implemented by all objects in the <see cref="N:Microsoft.SqlServer.Dts.Runtime" /> namespace. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsObject" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSelectedLogProviders100">
      <summary>Defines an interface for a collection of selected <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSelectedLogProviders100.Add(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100)">
      <summary>Adds the specified <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100" /> object to the end of the collection.</summary>
      <param name="pLogProvider">The log provider to add to the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSelectedLogProviders100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSelectedLogProviders100.GetEnumerator">
      <summary>Returns an enumerator for use in iterating over the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSelectedLogProviders100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100" /> object.</returns>
      <param name="Index">The name, identity, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100" /> object to return.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSelectedLogProviders100.Remove(System.Object)">
      <summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100" /> object from the collection.</summary>
      <param name="Index">The name, index, ID, or identity of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider100" /> object to remove.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSequence100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSequence100.Executables">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSequence100.PrecedenceConstraints">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100">
      <summary>Represents an instance of execution in the Integration Services catalog.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100.Dispose">
      <summary>Releases all the resources used by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100.ExecutionID">
      <summary>Gets a 64-bit integer that represents the unique identifier for the instance of execution.</summary>
      <returns>A 64-bit integer that represents the unique identifier for the instance of execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100.ExecutionStatus">
      <summary>Gets the status of the instance of execution.</summary>
      <returns>The status of the instance of execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100.SetCallerInfo(System.String)">
      <summary>Sets the caller information property with the specified caller information.</summary>
      <param name="bstrCallerInfo">The information of the caller.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100.SetParameterValue(Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSServerParameterType,System.String,System.String)">
      <summary>Sets the parameter with the specified value.</summary>
      <param name="parameterType">The type of the parameter.</param>
      <param name="bstrParameterName">The name of the parameter to set.</param>
      <param name="bstrParameterValue">The value to set on the parameter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100.SetPropertyOverrideValue(System.String,System.String,System.Boolean)">
      <summary>Sets the property for an instance of execution in the Integration Services catalog with the specified override value.</summary>
      <param name="bstrPropertyPath">The path to the property in the package.</param>
      <param name="bstrPropertyValue">The override value to assign to the property.</param>
      <param name="bValueIsSensitive">true if the value contains sensitive data and is encrypted when stored; false if the value is not sensitive data and is stored in plaintext.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100.Start">
      <summary>Starts an instance of execution in the Integration Services catalog.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerExecution100.Synchronized">
      <summary>Gets a value that indicates whether the instance of execution is synchronized.</summary>
      <returns>true if the instance of execution is synchronized; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerUsageControl100">
      <summary>Provides properties for controlling DTS server usage.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSServerUsageControl100.UseServerForFeatureEnumeration">
      <summary>Sets a value that indicates whether the server supports for feature enumeration.</summary>
      <returns>true if the server supports for feature enumeration; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportDataTapConfiguration100">
      <summary>Provides methods for accessing data tap configuration.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportDataTapConfiguration100.GetTapConfiguration">
      <summary>Retrieves the data tap configuration.</summary>
      <returns>The data tap configuration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportDataTapConfiguration100.SetTapConfiguration(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTapConfiguration100)">
      <summary>Assigns the specified data tap configuration.</summary>
      <param name="pTapConfiguration">The data tap configuration to assign.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportOffline100">
      <summary>Provides properties for indicating whether DTS connection supports offline mode.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportOffline100.OfflineMode">
      <summary>Gets or sets whether DTS connection supports offline mode.</summary>
      <returns>true if DTS connection supports offline mode; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportParentExecutionPath100">
      <summary>Represents the support for the parent execution path.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportParentExecutionPath100.ParentExecutionPath">
      <summary>Gets or sets the parent execution path.</summary>
      <returns>The parent execution path.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportPerfRecorder100">
      <summary>Represents the interface for the support for the performance recorder.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportPerfRecorder100.GetPerfRecorder">
      <summary>Gets the performance recorder.</summary>
      <returns>The performance recorder.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportPerfRecorder100.SetPerfRecorder(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPerfRecorder100)">
      <summary>Sets the performance recorder.</summary>
      <param name="pPerfRecorder">The performance recorder to set.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportVerboseLogging100">
      <summary>Defines methods for accessing the verbose logging.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportVerboseLogging100.GetVerboseLoggingMode">
      <summary>Indicates whether the mode of the verbose logging was retrieved.</summary>
      <returns>true if the mode of the verbose logging was retrieved; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSupportVerboseLogging100.SetVerboseLoggingMode(System.Boolean)">
      <summary>Sets the mode of the verbose logging.</summary>
      <param name="vbVerboseLogging">true to set the verbose logging; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSuspend100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSSuspend" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSuspend100.ResumeExecution">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSSuspend" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSuspend100.SuspendExecution">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSSuspend" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSuspend100.SuspendRequired">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSSuspend" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTask100">
      <summary>Defines a property and methods for all the tasks in Integration Services.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTask100.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the task.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pConnections">A collection of connections used by the task.</param>
      <param name="pVariableDispenser">The object for locking variables.</param>
      <param name="pEvents">Implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100" /> interface.</param>
      <param name="pLog">Implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="vTransaction">The transaction objects that the container is a part of.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTask100.ExecutionValue">
      <summary>Gets the value of the execution. This field is read-only.</summary>
      <returns>The value of the execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTask100.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verifies that the component is properly configured.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pConnections">A collection of connections used by the task.</param>
      <param name="pVariableDispenser">The object for locking variables.</param>
      <param name="pEvents">Implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100" /> interface.</param>
      <param name="pLog">Implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskCreator100">
      <summary>Represents an interface for the creator of a task.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskCreator100.CreateTask(System.String,System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,System.UInt32@,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTask100@)">
      <summary>Creates a task.</summary>
      <param name="bstrMoniker">The moniker for the task.</param>
      <param name="bstrTaskData">The data of the task.</param>
      <param name="pBreakpointManager">The breakpoint manager specific for this task.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface to raise errors, warning, or informational events.</param>
      <param name="pdwCancelEvent">The identifier for cancelling the event.</param>
      <param name="ppTask">The task to create.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskCreator100.MarshalConnections(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100@)">
      <summary>Organizes the connections.</summary>
      <param name="pIn">The incoming connections.</param>
      <param name="ppOut">The outgoing connections.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100.ApartmentThreaded">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100.ExecutionValue">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost100.ExecValueVariable">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100.FileName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100.FileNameVersionString">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100.HelpCollection">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100.HelpKeyword">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100.IconFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100.IconResource">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100.SamplesTag">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100.TaskContact">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100.TaskType">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100.UITypeName">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfos100">
      <summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100" /> objects.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfos100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfos100.GetEnumerator">
      <summary>Retrieves an enumerator for use in iterating over the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object for the collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfos100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100" /> from the collection.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100" /> object.</returns>
      <param name="Index">The name, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo100" /> to retrieve from the collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInit100">
      <summary>Defines a method for the task to initialize.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInit100.InitializeTask(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker100)">
      <summary>Initializes the properties associated with the task. This method is called by the runtime and is not used in code.</summary>
      <param name="pConnections">A collection of connections used by the task.</param>
      <param name="pVariableDispenser">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object for locking variables.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface.</param>
      <param name="pLog">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pEventInfos">A collection that contains events to be raised during execution of the task.</param>
      <param name="pLogEntryInfos">A collection of log entries.</param>
      <param name="pRefTracker">An object reference tracker.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSUnsafeVariables100">
      <summary>Defines methods for all unsafe variables.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSUnsafeVariables100.GetUnsafeVariables">
      <summary>Retrieves the unsafe variables.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100" /> object that represents the unsafe variables.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSUnsafeVariables100.SetUnsafeVariables(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100)">
      <summary>Sets the unsafe variables.</summary>
      <param name="pUnsafeVariables">The unsafe variables to set.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100">
      <summary>Represents an interface for the variable on a package, task or container.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.DataType">
      <summary>Gets the data type of the variable.</summary>
      <returns>The data type of the variable.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.EvaluateAsExpression">
      <summary>Gets or sets a value that indicates whether the variable contains an expression.</summary>
      <returns>true if the variable contains an expression; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.GetValueWithContext(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvaluatorContext100)">
      <summary>Retrieves the value with the specified context.</summary>
      <returns>The value with the specified context.</returns>
      <param name="pContext">The context of the value to retrieve.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.IncludeInDebugDump">
      <summary>Gets or sets a value that specifies whether the variable value is included in the debug dump files.</summary>
      <returns>true if the variable value is included in the debug dump files; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.Namespace">
      <summary>Gets or sets the namespace that the variable belongs to.</summary>
      <returns>The namespace of the variable.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.Parent">
      <summary>Gets the parent container of the variable.</summary>
      <returns>The parent container of the variable.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.QualifiedName">
      <summary>Gets the fully qualified name of the variable, including the namespace. This property is read-only.</summary>
      <returns>The fully qualified name of the variable, which includes its namespace.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.RaiseChangedEvent">
      <summary>Gets or sets a value that indicates whether the variable has been flagged to raise the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnVariableValueChanged(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100,System.Boolean@)" /> event when the value of the variable changes.</summary>
      <returns>true if a change to the variable value is to raise an <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100.OnVariableValueChanged(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100,System.Boolean@)" /> event; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.ReadOnly">
      <summary>Gets or sets a value that indicates whether the variable is read-only and cannot have its value modified.</summary>
      <returns>true if the variable is read-only; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.SystemVariable">
      <summary>Gets a value that indicates whether the variable is a system variable. This property is read-only.</summary>
      <returns>true if the variable is a system variable; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100.Value">
      <summary>Gets or sets the value assigned to the variable.</summary>
      <returns>The value of the variable.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableCreator100">
      <summary>Represents an interface for the creator of a variable.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableCreator100.CreateVariable(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameter100)">
      <summary>Creates a new variable using the specified parameter.</summary>
      <returns>A newly created <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> object.</returns>
      <param name="pParameter">The parameter of the variable to create.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100">
      <summary>Represents a variable dispenser class. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100.Contains(System.String)">
      <summary>Specifies whether an item can be retrieve from the collection by using indexing without throwing an exception. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" />.</summary>
      <returns>An item to retrieve from the collection.</returns>
      <param name="Variable">The name of the variable to locate in the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100.GetQualifiedName(System.String)">
      <summary>Returns the qualified name of the variable. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" />.</summary>
      <returns>The qualified name of the variable.</returns>
      <param name="Variable">The variable whose fully qualified name you want to know.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100.GetVariables(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100@)">
      <summary>Locks the variables that are in the read-only list and the read/write list. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" />.</summary>
      <param name="ppVariables">The collection that contains all the variables found in the read-only list and the read/write list.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100.LockForRead(System.String)">
      <summary>Adds the variable to the list of variables to be locked for read-only access. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" />.</summary>
      <param name="Variable">The name of the variable.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100.LockForWrite(System.String)">
      <summary>Adds the variable to the list of variables to be locked for read/write access. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" />.</summary>
      <param name="Variable">The name of the variable.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100.LockOneForRead(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100@)">
      <summary>Puts the variable in a list, and then locks it for read-only access. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" />.</summary>
      <param name="Variable">The variable you want to lock for read-only access.</param>
      <param name="ppVariables">The collection of variables.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100.LockOneForWrite(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100@)">
      <summary>Puts the variable in a list, and then locks it for read/write access. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" />.</summary>
      <param name="Variable">The name of the variable to lock for read/write access.</param>
      <param name="ppVariables">A collection of variables.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100.Reset">
      <summary>Clears both the read-only list and read/write list. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableLock100">
      <summary>Defines methods for the lock of variable.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableLock100.AcquireLock(System.Boolean)">
      <summary>Acquires the lock of the variable.</summary>
      <param name="vbExclusive">true to indicate that the lock being acquired is exclusive; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableLock100.ReleaseLock(System.Boolean)">
      <summary>Releases the lock of the variable.</summary>
      <param name="vbExclusive">true to indicate that the lock being released is exclusive; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100">
      <summary>Provides properties and methods for working on a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100.Add(System.String,System.Boolean,System.String,System.Object)">
      <summary>Adds a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> object to the collection.</summary>
      <returns>The added <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> object to the collection.</returns>
      <param name="bstrName">The name of the package, task, or container variable to add to the collection.</param>
      <param name="bReadOnly">true to indicate that the variable is read-only; otherwise, false.</param>
      <param name="bstrNamespace">The namespace for the variable.</param>
      <param name="vValue">The design-time value of the variable.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100.Contains(System.Object)">
      <summary>Determines whether the items in the collection can be accessed by using indexing without throwing an exception.</summary>
      <returns>true if the collection can be accessed by using indexing; otherwise, false.</returns>
      <param name="Index">The name, ID, description, or index of the variable to locate in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100.Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> enumerator for use in iterating over the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> enumerator.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> object.</returns>
      <param name="Index">The name, ID, description, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> object to return.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100.Join(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100)">
      <summary>Joins the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> to the collection.</summary>
      <param name="pVariable">The specified variable.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100.Locked">
      <summary>Gets a value that indicates whether the variables in the collection are locked.</summary>
      <returns>true if the collection is locked; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100.Remove(System.Object)">
      <summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> object from the collection.</summary>
      <param name="Index">The name, ID, description, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> object to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100.Unlock">
      <summary>Releases the locks on the collection and flags the state of the collection as invalid or unknown.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100.Description">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100.HelpContext">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100.HelpFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100.IDOfInterfaceWithWarning">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100.Source">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100.SourceID">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100.SubComponent">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100.TimeStamp">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100.WarningCode">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100">
      <summary>Defines a properties and methods for the collection of warning.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100.Clear">
      <summary>Clears all objects from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100" /> collection.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100.Count">
      <summary>Gets the number of elements contained in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100" /> instance.</summary>
      <returns>The number of elements contained in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100" /> instance.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> for use in iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> enumerator.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100.Item(System.Object)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100" /> object from the collection.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100" /> object.</returns>
      <param name="Index">The name, identity, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning100" /> object to retrieve from the collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ISequentialStream">
      <summary>Defines methods for the stream objects in sequence.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ISequentialStream.RemoteRead(System.Byte@,System.UInt32,System.UInt32@)">
      <summary>Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.</summary>
      <param name="pv">When this method returns, contains the data read from the stream. This parameter is passed uninitialized.</param>
      <param name="cb">The number of bytes to read from the stream object.</param>
      <param name="pcbRead">A pointer to a ULONG variable that receives the actual number of bytes read from the stream object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ISequentialStream.RemoteWrite(System.Byte@,System.UInt32,System.UInt32@)">
      <summary>Writes a specified number of bytes into the stream object starting at the current seek pointer.</summary>
      <param name="pv">The buffer to write this stream to.</param>
      <param name="cb">The number of bytes to write to the stream.</param>
      <param name="pcbWritten">On successful return, contains the actual number of bytes written to the stream object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream">
      <summary>Provides an interface that supports reading and writing data to stream objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.Clone(Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream@)">
      <summary>Creates a new stream object with its own seek pointer that references the same bytes as the original stream.</summary>
      <param name="ppstm">When this method returns, contains the new stream object. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.Commit(System.UInt32)">
      <summary>Ensures that any changes made to a stream object that is open in transacted mode are reflected in the parent storage.</summary>
      <param name="grfCommitFlags">A value that controls how the changes for the stream object are committed.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.LockRegion(Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER,Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER,System.UInt32)">
      <summary>Restricts access to a specified range of bytes in the stream.</summary>
      <param name="libOffset">The byte offset for the beginning of the range.</param>
      <param name="cb">The length of the range, in bytes, to restrict.</param>
      <param name="dwLockType">The requested restrictions on accessing the range.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.RemoteCopyTo(Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream,Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER,Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER@,Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER@)">
      <summary>Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.</summary>
      <param name="pstm">A pointer to the destination stream. The stream pointed to be <paramref name="pstm" /> can be a new stream or a clone of the source stream.</param>
      <param name="cb">The number of bytes to copy from the source stream.</param>
      <param name="pcbRead">A pointer to the location where this method writes the actual number of bytes read from the source.</param>
      <param name="pcbWritten">A pointer to the location where this method writes the actual number of bytes written to the destination.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.RemoteRead(System.Byte@,System.UInt32,System.UInt32@)">
      <summary>Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.</summary>
      <param name="pv">When this method returns, contains the data read from the stream. This parameter is passed uninitialized.</param>
      <param name="cb">The number of bytes to read from the stream object.</param>
      <param name="pcbRead">A pointer to a ULONG variable that receives the actual number of bytes read from the stream object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.RemoteSeek(Microsoft.SqlServer.Dts.Runtime.Wrapper._LARGE_INTEGER,System.UInt32,Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER@)">
      <summary>Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.</summary>
      <param name="dlibMove">The displacement to add to <paramref name="dwOrigin" />.</param>
      <param name="dwOrigin">The origin of the seek.</param>
      <param name="plibNewPosition">On successful return, contains the offset of the seek pointer from the beginning of the stream.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.RemoteWrite(System.Byte@,System.UInt32,System.UInt32@)">
      <summary>Writes a specified number of bytes into the stream object starting at the current seek pointer.</summary>
      <param name="pv">The buffer to write this stream to.</param>
      <param name="cb">The number of bytes to write to the stream.</param>
      <param name="pcbWritten">On successful return, contains the actual number of bytes written to the stream object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.Revert">
      <summary>Discards all changes that have been made to a transacted stream since the last <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.Commit(System.UInt32)" /> call.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.SetSize(Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER)">
      <summary>Sets the size of the stream object.</summary>
      <param name="libNewSize">The new size of the stream as a number of bytes.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.Stat(Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG@,System.UInt32)">
      <summary>Retrieves the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG" /> structure for this stream.</summary>
      <param name="pstatstg">When this method returns, contains a tagSTATSTG structure that describes this stream object. This parameter is passed uninitialized.</param>
      <param name="grfStatFlag">The members in the tagSTATSTG structure that this method does not return, thus saving some memory allocation operations.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.UnlockRegion(Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER,Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER,System.UInt32)">
      <summary>Removes the access restriction on a range of bytes previously restricted with the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IStream.LockRegion(Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER,Microsoft.SqlServer.Dts.Runtime.Wrapper._ULARGE_INTEGER,System.UInt32)" /> method.</summary>
      <param name="libOffset">The byte offset for the beginning of the range.</param>
      <param name="cb">The length, in bytes, of the range to restrict.</param>
      <param name="dwLockType">The access restrictions previously placed on the range.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ITaskSupportProject100">
      <summary>Defines method for the task that supports a project.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ITaskSupportProject100.SetProject(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100)">
      <summary>Sets the specified project.</summary>
      <param name="pProject">The project to set.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLog">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass">
      <summary>Represents a class for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLog" /> interface.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.CloseLog">
      <summary>Closes the log.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.ConfigString">
      <summary>Gets or sets a string used to configure the log provider.</summary>
      <returns>A string used to configure the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.CreationName">
      <summary>Gets the string used by the runtime to create an instance of the log provider.</summary>
      <returns>A string that contains the name of the identifier (GUID) of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Description">
      <summary>Gets or sets the description of the log provider.</summary>
      <returns>The description of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Enabled">
      <summary>Gets a value that indicates whether the log provider is enabled.</summary>
      <returns>true if the log provider is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.GetFilterStatus(System.String[]@)">
      <summary>Gets the filter status of the specified events.</summary>
      <returns>true if the indicated events are filtered out; otherwise, false.</returns>
      <param name="EventNames">The event whose filtering status you are interested in.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.ID">
      <summary>Gets the identifier of the log provider.</summary>
      <returns>The identifier of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
      <summary>Writes the log entry.</summary>
      <param name="EventName">The event calling the log entry.</param>
      <param name="Computer">The local computer.</param>
      <param name="Operator">The user account.</param>
      <param name="SourceName">The object that is the source of the event.</param>
      <param name="SourceID">The identifier of the source.</param>
      <param name="ExecutionID">The identifier of the specific execution.</param>
      <param name="MessageText">The text to write in the log.</param>
      <param name="StartTime">The start time of the event.</param>
      <param name="EndTime">The end time of the event.</param>
      <param name="DataCode">The numeric data field.</param>
      <param name="DataBytes">A byte array field for binary large objects (BLOBs).</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Name">
      <summary>Gets or sets the name of the log provider.</summary>
      <returns>The name of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.OpenLog">
      <summary>Opens the log.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the log provider with the specified events.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHost">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass">
      <summary>Represents a class for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHost" /> interface.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.CloseLog">
      <summary>Closes the log.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.ConfigString">
      <summary>Gets or sets a string used to configure the log provider.</summary>
      <returns>A string used to configure the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.CreationName">
      <summary>Gets the string used by the runtime to create an instance of the log provider.</summary>
      <returns>A string that contains the name of the identifier (GUID) of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.DelayValidation">
      <summary>Gets or sets a value that indicates whether a call to validate for the log provider is delayed until package execution.</summary>
      <returns>true if the validation is delayed until package execution; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.Description">
      <summary>Gets or sets the description of the log provider.</summary>
      <returns>The description of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.Enabled">
      <summary>Gets a value that indicates whether the log provider is enabled.</summary>
      <returns>true if the log provider is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.GetFilterStatus(System.String[]@)">
      <summary>Gets the filter status of the specified events.</summary>
      <returns>true if the indicated events are filtered out; otherwise, false.</returns>
      <param name="EventNames">The event whose filtering status you are interested in.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.HostType">
      <summary>Gets an enumeration that describes the type of host that the log provider is being used by. This property is read-only.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.ID">
      <summary>Gets the identifier of the log provider.</summary>
      <returns>The identifier of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.InnerObject">
      <summary>Gets the specific log provider that is being hosted by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass" /> object.</summary>
      <returns>An object that contains the hosted log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
      <summary>Writes the log entry.</summary>
      <param name="EventName">The event calling the log entry.</param>
      <param name="Computer">The local computer.</param>
      <param name="Operator">The user account.</param>
      <param name="SourceName">The object that is the source of the event.</param>
      <param name="SourceID">The identifier of the source.</param>
      <param name="ExecutionID">The identifier of the specific execution.</param>
      <param name="MessageText">The text to write in the log.</param>
      <param name="StartTime">The start time of the event.</param>
      <param name="EndTime">The end time of the event.</param>
      <param name="DataCode">The numeric data field.</param>
      <param name="DataBytes">A byte array field for binary large objects (BLOBs).</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.Name">
      <summary>Gets or sets the name of the log provider.</summary>
      <returns>The name of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.OpenLog">
      <summary>Opens the log.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the log provider with the specified events.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfiler">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass">
      <summary>Represents a class for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfiler" /> interface.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.CloseLog">
      <summary>Closes the log.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.ConfigString">
      <summary>Gets or sets a string used to configure the log provider.</summary>
      <returns>A string used to configure the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.CreationName">
      <summary>Gets the string used by the runtime to create an instance of the log provider.</summary>
      <returns>A string that contains the name of the identifier (GUID) of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.Description">
      <summary>Gets or sets the description of the log provider.</summary>
      <returns>The description of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.Enabled">
      <summary>Gets a value that indicates whether the log provider is enabled.</summary>
      <returns>true if the log provider is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.GetFilterStatus(System.String[]@)">
      <summary>Gets the filter status of the specified events.</summary>
      <returns>true if the indicated events are filtered out; otherwise, false.</returns>
      <param name="EventNames">The event whose filtering status you are interested in.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.ID">
      <summary>Gets the identifier of the log provider.</summary>
      <returns>The identifier of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
      <summary>Writes the log entry.</summary>
      <param name="EventName">The event calling the log entry.</param>
      <param name="Computer">The local computer.</param>
      <param name="Operator">The user account.</param>
      <param name="SourceName">The object that is the source of the event.</param>
      <param name="SourceID">The identifier of the source.</param>
      <param name="ExecutionID">The identifier of the specific execution.</param>
      <param name="MessageText">The text to write in the log.</param>
      <param name="StartTime">The start time of the event.</param>
      <param name="EndTime">The end time of the event.</param>
      <param name="DataCode">The numeric data field.</param>
      <param name="DataBytes">A byte array field for binary large objects (BLOBs).</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.Name">
      <summary>Gets or sets the name of the log provider.</summary>
      <returns>The name of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.OpenLog">
      <summary>Opens the log.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the log provider with the specified events.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServer">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass">
      <summary>Represents a class for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServer" /> interface.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.CloseLog">
      <summary>Closes the log.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.ConfigString">
      <summary>Gets or sets a string used to configure the log provider.</summary>
      <returns>A string used to configure the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.CreationName">
      <summary>Gets the string used by the runtime to create an instance of the log provider.</summary>
      <returns>A string that contains the name of the identifier (GUID) of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.Description">
      <summary>Gets or sets the description of the log provider.</summary>
      <returns>The description of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.Enabled">
      <summary>Gets a value that indicates whether the log provider is enabled.</summary>
      <returns>true if the log provider is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.GetFilterStatus(System.String[]@)">
      <summary>Gets the filter status of the specified events.</summary>
      <returns>true if the indicated events are filtered out; otherwise, false.</returns>
      <param name="EventNames">The event whose filtering status you are interested in.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.ID">
      <summary>Gets the identifier of the log provider.</summary>
      <returns>The identifier of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
      <summary>Writes the log entry.</summary>
      <param name="EventName">The event calling the log entry.</param>
      <param name="Computer">The local computer.</param>
      <param name="Operator">The user account.</param>
      <param name="SourceName">The object that is the source of the event.</param>
      <param name="SourceID">The identifier of the source.</param>
      <param name="ExecutionID">The identifier of the specific execution.</param>
      <param name="MessageText">The text to write in the log.</param>
      <param name="StartTime">The start time of the event.</param>
      <param name="EndTime">The end time of the event.</param>
      <param name="DataCode">The numeric data field.</param>
      <param name="DataBytes">A byte array field for binary large objects (BLOBs).</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.Name">
      <summary>Gets or sets the name of the log provider.</summary>
      <returns>The name of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.OpenLog">
      <summary>Opens the log.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the log provider with the specified events.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass">
      <summary>Represents a class for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFile" /> interface.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.CloseLog">
      <summary>Closes the log.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.ConfigString">
      <summary>Gets or sets a string used to configure the log provider.</summary>
      <returns>A string used to configure the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.CreationName">
      <summary>Gets the string used by the runtime to create an instance of the log provider.</summary>
      <returns>A string that contains the name of the identifier (GUID) of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.Description">
      <summary>Gets or sets the description of the log provider.</summary>
      <returns>The description of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.Enabled">
      <summary>Gets a value that indicates whether the log provider is enabled.</summary>
      <returns>true if the log provider is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.GetFilterStatus(System.String[]@)">
      <summary>Gets the filter status of the specified events.</summary>
      <returns>true if the indicated events are filtered out; otherwise, false.</returns>
      <param name="EventNames">The event whose filtering status you are interested in.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.ID">
      <summary>Gets the identifier of the log provider.</summary>
      <returns>The identifier of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
      <summary>Writes the log entry.</summary>
      <param name="EventName">The event calling the log entry.</param>
      <param name="Computer">The local computer.</param>
      <param name="Operator">The user account.</param>
      <param name="SourceName">The object that is the source of the event.</param>
      <param name="SourceID">The identifier of the source.</param>
      <param name="ExecutionID">The identifier of the specific execution.</param>
      <param name="MessageText">The text to write in the log.</param>
      <param name="StartTime">The start time of the event.</param>
      <param name="EndTime">The end time of the event.</param>
      <param name="DataCode">The numeric data field.</param>
      <param name="DataBytes">A byte array field for binary large objects (BLOBs).</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.Name">
      <summary>Gets or sets the name of the log provider.</summary>
      <returns>The name of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.OpenLog">
      <summary>Opens the log.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the log provider with the specified events.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFile">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass">
      <summary>Represents a class for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFile" /> interface.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.CloseLog">
      <summary>Closes the log.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.ConfigString">
      <summary>Gets or sets a string used to configure the log provider.</summary>
      <returns>A string used to configure the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.CreationName">
      <summary>Gets the string used by the runtime to create an instance of the log provider.</summary>
      <returns>A string that contains the name or the identifier (GUID) of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.Description">
      <summary>Gets or sets the description of the log provider.</summary>
      <returns>The description of the log provider.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.Enabled">
      <summary>Gets a value that indicates whether the log provider is enabled.</summary>
      <returns>true if the log provider is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.GetFilterStatus(System.String[]@)">
      <summary>Gets the filter status of the specified events.</summary>
      <returns>true if the indicated events are filtered out; otherwise, false.</returns>
      <param name="EventNames">The events whose filtering status you are interested in.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.ID">
      <summary>Gets the identifier of the log provider.</summary>
      <returns>The identifier of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
      <summary>Writes the log entry.</summary>
      <param name="EventName">The event calling the log entry.</param>
      <param name="Computer">The local computer.</param>
      <param name="Operator">The user account.</param>
      <param name="SourceName">The object that is the source of the event.</param>
      <param name="SourceID">The identifier of the source.</param>
      <param name="ExecutionID">The identifier of the specific execution.</param>
      <param name="MessageText">The text to write in the log.</param>
      <param name="StartTime">The start time of the event.</param>
      <param name="EndTime">The end time of the event.</param>
      <param name="DataCode">The numeric data field.</param>
      <param name="DataBytes">A byte array field for binary large objects (BLOBs).</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.Name">
      <summary>Gets or sets the name of the log provider.</summary>
      <returns>The name of the log provider.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.OpenLog">
      <summary>Opens the log.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100)">
      <summary>Validates the log provider with the specified events.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass">
      <summary>Represents a class for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package" /> interface.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)">
      <summary>Passes a breakpoint manager to a package.</summary>
      <param name="pBreakpointManager">The breakpoint manager specific for this package.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.CertificateContext">
      <summary>Gets or sets the context of the certificate associated with the package.</summary>
      <returns>The context of the certificate.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.CertificateObject">
      <summary>Gets or sets the certificate object associated with the package.</summary>
      <returns>The certificate object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.CheckpointFileName">
      <summary>Gets or sets the name of the file that captures the checkpoint information, which enables a package to restart.</summary>
      <returns>The name of the file that captures the checkpoint information.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.CheckpointUsage">
      <summary>Gets or sets a value that specifies if or when a package is restarted.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSCheckpointUsage" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.CheckSignature">
      <summary>Checks the status of the digital signature of the package.</summary>
      <returns>One of the enumeration values that indicates the status of the digital signature.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.CheckSignatureOnLoad">
      <summary>Gets or sets a value that indicates whether the digital signature is checked when a package is loaded.</summary>
      <returns>true if the digital signature is checked when a package is loaded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ComputeExpressions(System.Boolean)">
      <summary>Computes the expression of this <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass" /> object.</summary>
      <param name="recursive">true to include the compute expressions of the package object recursively; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Configurations">
      <summary>Gets the collection of configurations for the package.</summary>
      <returns>The collection of configurations for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Connections">
      <summary>Gets the collection of connection managers for the package.</summary>
      <returns>The collection of connection managers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.CreationDate">
      <summary>Gets or sets the date and time that the package was created.</summary>
      <returns>The date and time that the package was created.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.CreationName">
      <summary>Gets the name used to create the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass" /> object.</summary>
      <returns>The creation name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.CreatorComputerName">
      <summary>Gets or sets the name of the computer on which the package was created.</summary>
      <returns>The name of the computer.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.CreatorName">
      <summary>Gets or sets the name of the individual who created the package.</summary>
      <returns>The name of the person who created the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.DebugMode">
      <summary>Gets or sets a value that indicates whether the package is in debug mode.</summary>
      <returns>true if the package is in debug mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.DelayValidation">
      <summary>Gets or sets a value that indicates whether package validation is delayed until the package runs.</summary>
      <returns>true if package validation is delayed until the package runs; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Description">
      <summary>Gets or sets the description of the package.</summary>
      <returns>The description of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.DesignEvents">
      <summary>Gets or sets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> that indicates if the designer or other third party client is to receive events during design time.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.DesignTimeProperties">
      <summary>Gets or sets the design time properties of a package such as layout information.</summary>
      <returns>The design time properties of a package such as layout information.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Disable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass" /> object is disabled.</summary>
      <returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass" /> object is disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.DisableEventHandlers">
      <summary>Gets or sets a value that indicates whether the event handlers on the package are disabled.</summary>
      <returns>true if the event handlers on the package are disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.DumpDescriptor">
      <summary>Gets or sets the dump descriptor for the package.</summary>
      <returns>The dump descriptor for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.DumpOnAnyError">
      <summary>Gets or sets a value that indicates whether a dump file should be generated when any error occurs during package execution.</summary>
      <returns>true if a dump files should be generated when any error occurs during package execution; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.EnableConfigurations">
      <summary>Gets or sets a value that indicates whether the package loads configurations.</summary>
      <returns>true if the package loads configurations; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.EnableDump">
      <summary>Gets or sets a value that indicates whether the dump file generation is enabled.</summary>
      <returns>true if the dump file generation is enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.EncryptCheckpoints">
      <summary>Gets or sets a value that indicates whether the checkpoint files are encrypted.</summary>
      <returns>true if the checkpoint files are encrypted; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Errors">
      <summary>Gets the collection of errors associated with the package.</summary>
      <returns>The collection of errors.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.EventHandlers">
      <summary>Gets a collection of event handler objects.</summary>
      <returns>A collection of event handler objects.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.EventInfos">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100" /> collection that is associated with the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100" /> collection that is associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Executables">
      <summary>Gets the collection of executable objects contained within the package.</summary>
      <returns>The collection of executable objects contained within the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Execute">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that contains information about the success or failure of the package execution.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that contains information about the success or failure of the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the application, container, or package as part of a package workflow.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the execution.</returns>
      <param name="pConnections">A collection of connections for the package.</param>
      <param name="pVariables">A collection of variables for the package.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The transaction object that the package is a part of, depending on the value found in the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.TransactionOption" /> property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ExecutionDuration">
      <summary>Gets the amount of time that the package spent in execution, in milliseconds.</summary>
      <returns>The amount of time that the package spent in execution, in milliseconds.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ExecutionResult">
      <summary>Gets a value that indicates the success or failure of the execution of the package.</summary>
      <returns>The result of the execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ExecutionStatus">
      <summary>Gets the current status of the execution.</summary>
      <returns>The current status of the execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ExportConfigurationFile(System.String)">
      <summary>Creates an XML file that contains all deployable variables in the package.</summary>
      <param name="bstrFileName">The name of the configuration file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ExtendedProperties">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100" /> collection for the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100" /> object collection for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.FailPackageOnFailure">
      <summary>Gets or sets a value that indicates whether the package fails when a task or component in the package fails.</summary>
      <returns>true if the package fails when a task or component in the package fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.FailParentOnFailure">
      <summary>Gets or sets a value that indicates whether the parent package fails when a child package fails.</summary>
      <returns>true if the parent package fails when a child package fails; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.FindReferencedObjects(System.Object)">
      <summary>Returns a reference object enumeration.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100" /> enumeration.</returns>
      <param name="pObject">The object to locate.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ForcedExecutionValue">
      <summary>If the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ForceExecutionValue" /> property is set to true, gets or sets a value that specifies the optional execution value that the package returns.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the optional execution value the package returns. The default value of this property is 0.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ForceExecutionResult">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration value that specifies the forced execution result of the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration that reports the forced success or failure of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ForceExecutionValue">
      <summary>Gets or sets a value that indicates whether the execution value of the package should be forced to contain a particular value.</summary>
      <returns>true if the execution value of the package should be forced to contain a particular value; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.GetBreakpointTargets(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100,System.Boolean)">
      <summary>Returns an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100" /> collection. Depending on the setting of the <paramref name="onlyEnabled" /> parameter, the collection contains all breakpoint targets in the package, or only enabled breakpoint targets.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100" /> collection.</returns>
      <param name="pBreakpointSite">An object implementing the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100" /> interface.</param>
      <param name="onlyEnabled">true to indicate that only enabled breakpoints are included in the collection; false to indicate that all breakpoint targets are included in the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.GetExpression(System.String)">
      <summary>Returns a value that contains the expression for the specified property.</summary>
      <returns>A value that contains the expression used to evaluate the property.</returns>
      <param name="bstrPropertyName">The name of the property whose expression you want to see.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.GetObjectFromPackagePath(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100@)">
      <summary>Returns an object from the specified package path.</summary>
      <returns>An object from the specified package path.</returns>
      <param name="bstrPath">The path to the package.</param>
      <param name="ppProperty">The property of the object to retrieve.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.GetParentID">
      <summary>Retrieves the parent identifier of the package.</summary>
      <returns>The parent identifier of the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.GetPreExecutionPackageXML(System.Object@)">
      <summary>Retrieves the pre-execution of a package XML.</summary>
      <param name="pvDestination">The destination.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.GetProject">
      <summary>Retrieves the DTS project.</summary>
      <returns>The DTS project.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ID">
      <summary>Gets the ID of the package.</summary>
      <returns>The ID of the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSExecutable100_Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Executes the executable.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The handle to a transaction type if participating in a transaction.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSExecutable100_Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verifies that the executable will successfully execute by validating all its dependencies and other items before executing it.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSPackageSigning100_CertificateContext">
      <summary>Gets or sets the certificate context.</summary>
      <returns>The certificate context.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSPackageSigning100_CertificateObject">
      <summary>Gets or sets the certificate object.</summary>
      <returns>The certificate object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSPackageSigning100_CheckSignature">
      <summary>Checks the signature of the package.</summary>
      <returns>The checked signature.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSPackageSigning100_CheckSignatureOnLoad">
      <summary>Gets or sets a value that indicates whether the package checks the signature on loading.</summary>
      <returns>true if the package checks the signature on loading; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSPackageSigning100_LoadUserCertificateByHash(System.Byte[]@)">
      <summary>Loads the user certificate using hash.</summary>
      <param name="ppsaCertHash">The hash.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSPackageSigning100_LoadUserCertificateByName(System.String)">
      <summary>Loads the user certificate by name.</summary>
      <param name="SubjectName">The name of the subject.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSSuspend100_ResumeExecution">
      <summary>Resumes the execution of the task after pausing.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSSuspend100_SuspendExecution">
      <summary>Notifies that the executable needs to suspend.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSSuspend100_SuspendRequired">
      <summary>Gets or sets a value that indicates whether the task should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task should suspend when they encounter a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IgnoreConfigurationsOnLoad">
      <summary>Gets or sets a value that indicates whether the package ignores configurations when the package is loaded.</summary>
      <returns>true if the package ignores configurations when the package is loaded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ImportConfigurationFile(System.String)">
      <summary>Loads a configuration file associated with the package.</summary>
      <param name="bstrFileName">The path and name of the file that contains the configuration.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.InteractiveMode">
      <summary>Gets or sets a value that indicates whether the tasks should show user interface objects while executing.</summary>
      <returns>true if the tasks should show user interface objects while executing; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IsDefaultLocaleID">
      <summary>Gets a value that indicates whether the package uses the default locale.</summary>
      <returns>true if the package uses the default locale; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction in the package.</summary>
      <returns>The isolation level of the transaction.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LastModifiedProductVersion">
      <summary>Gets the product version of the last modified package.</summary>
      <returns>The product version of the last modified package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package and all its objects that have been saved to memory in XML format.</summary>
      <param name="pNode">The node that contains the connection manager information to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LoadUserCertificateByHash(System.Byte[]@)">
      <summary>Loads the user certificate using hash.</summary>
      <param name="ppsaCertHash">The hash of the certificate for the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LoadUserCertificateByName(System.String)">
      <summary>Loads the user certificate by name.</summary>
      <param name="SubjectName">The name of the subject.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LocaleID">
      <summary>Gets or sets the identifier of the locale used by a package.</summary>
      <returns>The identifier of the locale used by a package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LogEntryInfos">
      <summary>Gets a collection of log entry definitions.</summary>
      <returns>A collection of log entry definitions.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LoggingMode">
      <summary>Gets or sets the logging mode of the package.</summary>
      <returns>The logging mode of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LoggingOptions">
      <summary>Gets the filtering and logging resource for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100" /> object that contains the available logging provider options and filters for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LogProviders">
      <summary>Gets the collection of log providers associated with the package.</summary>
      <returns>The collection of log providers associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.MaxConcurrentExecutables">
      <summary>Gets or sets the number of threads that a package can create.</summary>
      <returns>The number of threads that a package can create.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.MaximumErrorCount">
      <summary>Gets or sets the maximum number of errors that can occur before the package stops running.</summary>
      <returns>The maximum number of errors allowed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass" />.</summary>
      <returns>The name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.OfflineMode">
      <summary>Gets or sets a value that indicates whether the package is working in offline mode.</summary>
      <returns>true if the package is working in offline mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.PackageFormatVersion">
      <summary>Gets the format version of the package.</summary>
      <returns>The format version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.PackageLocation">
      <summary>Gets the location of the package.</summary>
      <returns>The location of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.PackagePassword">
      <summary>Sets the password for the package.</summary>
      <returns>The password for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.PackagePriorityClass">
      <summary>Gets or sets the Win32 thread priority class of the package thread.</summary>
      <returns>The Win32 thread priority class of the package thread.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.PackageType">
      <summary>Gets or sets a value that identifies the tool that created the package.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.PackageUpgradeOptions">
      <summary>Gets or sets the upgrade options for the package.</summary>
      <returns>The upgrade options for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Parent">
      <summary>Gets the parent of the package.</summary>
      <returns>The parent.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.PasswordMatch(System.String)">
      <summary>Determines whether the specified password matches with the package password.</summary>
      <returns>true if the specified password matches with the package password; otherwise, false.</returns>
      <param name="bstrPackagePassword">The password to match with the package password.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.PermitUnencryptedSave(System.Boolean)">
      <summary>Permits the unencrypted information to save.</summary>
      <param name="vbPermit">true to permit unencrypted information to save; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.PrecedenceConstraints">
      <summary>Gets a collection of precedence constraints for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection for the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ProcessConfiguration(System.String,System.Object)">
      <summary>Specifies the configuration information for a package and its objects.</summary>
      <param name="bstrPath">The location of the configuration file.</param>
      <param name="vValue">The data type of the configuration file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Properties">
      <summary>Gets a collection of properties for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ProtectionLevel">
      <summary>Gets or sets the level of protection on the package.</summary>
      <returns>The level of protection on the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.RegenerateID">
      <summary>Creates a new GUID for the package and updates the package ID property.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ResumeExecution">
      <summary>Resumes the execution of the package after pausing.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SafeRecursiveProjectPackageExecution">
      <summary>Gets or sets a value that indicates whether recursive execution of the package is safe.</summary>
      <returns>true if recursive execution of the package is safe; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SaveCheckpoints">
      <summary>Gets or sets a value that indicates whether the package will use checkpoints during package execution.</summary>
      <returns>true if the package uses checkpoints during package execution; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the package to memory in an XML format.</summary>
      <param name="pDoc">The document to which to save the information.</param>
      <param name="pNode">The node within the document to which to save the information.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property.</summary>
      <param name="bstrPropertyName">The name of the property to assign the expression to.</param>
      <param name="bstrExpression">The expression.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SetProject(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100,System.String)">
      <summary>Sets the specified project.</summary>
      <param name="pProject">The project to set.</param>
      <param name="bstrPackageLocation">The location to the package items.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SQLFolder">
      <summary>Gets or sets the SQL folder for the package.</summary>
      <returns>The SQL folder for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.StartTime">
      <summary>Gets the time when the package starts execution.</summary>
      <returns>The time when the package starts execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.StopTime">
      <summary>Gets the time when the package stops execution.</summary>
      <returns>The time when the package stops execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SuppressConfigurationWarnings">
      <summary>Gets or sets a value that indicates whether the warnings generated by configurations are suppressed.</summary>
      <returns>true if the warnings generated by configurations are suppressed; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SuspendExecution">
      <summary>Called when the executable needs to suspend. This method is called by the runtime engine.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SuspendRequired">
      <summary>Gets or sets a value that indicates whether the tasks should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.TransactionOption">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration value that indicates whether the package participates in transaction.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration that indicates if the package can be part of transactions.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.UpdateObjects">
      <summary>Gets or sets a value that indicates whether the extensible objects can be updated at package load time if an updated version is found.</summary>
      <returns>true if the extensible objects can be updated at package load time if an updated version is found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.UpdatePackage">
      <summary>Gets or sets a value that indicates whether the packages can be updated when an updated version is found.</summary>
      <returns>true if the packages can be updated when an updated version is found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the package to determine if it contains invalid settings that will prevent it from executing successfully.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the validation.</returns>
      <param name="pConnections">A collection of connections.</param>
      <param name="pVariables">A collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.VariableDispenser">
      <summary>Gets the dispenser of the variables in the package.</summary>
      <returns>The dispenser of the variables in the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Variables">
      <summary>Gets a collection that contains the variables associated with the package.</summary>
      <returns>A collection of variables.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.VersionBuild">
      <summary>Gets or sets the build version of the package.</summary>
      <returns>The build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.VersionComments">
      <summary>Gets or sets the version comments associated with the package.</summary>
      <returns>The version comments associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.VersionGUID">
      <summary>Gets the version GUID generated when the package is first created.</summary>
      <returns>The version GUID for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.VersionMajor">
      <summary>Gets or sets the major build version of the package.</summary>
      <returns>The major build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.VersionMinor">
      <summary>Gets or sets the minor build version of the package.</summary>
      <returns>The minor build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.Warnings">
      <summary>Gets the collection of warnings set on the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100" /> collection set on the package..</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutral">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass">
      <summary>Represents a class for a neutral package.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)">
      <summary>Passes a breakpoint manager to a package.</summary>
      <param name="pBreakpointManager">The breakpoint manager specific for this package.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.CertificateContext">
      <summary>Gets or sets the context of the certificate associated with the package.</summary>
      <returns>The context of the certificate.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.CertificateObject">
      <summary>Gets or sets the certificate object associated with the package.</summary>
      <returns>The certificate object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.CheckpointFileName">
      <summary>Gets or sets the name of the file that captures the checkpoint information, which enables a package to restart.</summary>
      <returns>The name of the file that captures the checkpoint information.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.CheckpointUsage">
      <summary>Gets or sets a value that specifies if or when a package is restarted.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSCheckpointUsage" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.CheckSignature">
      <summary>Checks the status of the digital signature of the package.</summary>
      <returns>One of the enumeration values that indicates the status of the digital signature.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.CheckSignatureOnLoad">
      <summary>Gets or sets a value that indicates whether the digital signature is checked when a package is loaded.</summary>
      <returns>true if the digital signature is checked when a package is loaded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ComputeExpressions(System.Boolean)">
      <summary>Computes the expression of this <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass" /> object.</summary>
      <param name="recursive">true to include the compute expressions of the package object recursively; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Configurations">
      <summary>Gets the collection of configurations for the package.</summary>
      <returns>The collection of configurations for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Connections">
      <summary>Gets the collection of connection managers for the package.</summary>
      <returns>The collection of connection managers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.CreationDate">
      <summary>Gets or sets the date and time that the package was created.</summary>
      <returns>The date and time that the package was created.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.CreationName">
      <summary>Gets the name used to create the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass" /> object.</summary>
      <returns>The creation name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.CreatorComputerName">
      <summary>Gets or sets the name of the computer on which the package was created.</summary>
      <returns>The name of the computer.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.CreatorName">
      <summary>Gets or sets the name of the individual who created the package.</summary>
      <returns>The name of the person who created the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.DebugMode">
      <summary>Gets or sets a value that indicates whether the package is in debug mode.</summary>
      <returns>true if the package is in debug mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.DelayValidation">
      <summary>Gets or sets a value that indicates whether package validation is delayed until the package runs.</summary>
      <returns>true if package validation is delayed until the package runs; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Description">
      <summary>Gets or sets the description of the package.</summary>
      <returns>The description of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.DesignEvents">
      <summary>Gets or sets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> that indicates if the designer or other third-party client is to receive events during design time.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.DesignTimeProperties">
      <summary>Gets or sets the design time properties of a package such as layout information.</summary>
      <returns>The design time properties of a package such as layout information.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Disable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass" /> object is disabled.</summary>
      <returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass" /> object is disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.DisableEventHandlers">
      <summary>Gets or sets a value that indicates whether the event handlers on the package are disabled.</summary>
      <returns>true if the event handlers on the package are disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.EnableConfigurations">
      <summary>Gets or sets a value that indicates whether the package loads configurations.</summary>
      <returns>true if the package loads configurations; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.EncryptCheckpoints">
      <summary>Gets or sets a value that indicates whether the checkpoint files are encrypted.</summary>
      <returns>true if the checkpoint files are encrypted; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Errors">
      <summary>Gets the collection of errors associated with the package.</summary>
      <returns>The collection of errors.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.EventHandlers">
      <summary>Gets a collection of event handler objects.</summary>
      <returns>A collection of event handler objects.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.EventInfos">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100" /> collection that is associated with the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100" /> collection that is associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Executables">
      <summary>Gets the collection of executable objects contained within the package.</summary>
      <returns>The collection of executable objects contained within the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Execute">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that contains information about the success or failure of the package execution.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that contains information about the success or failure of the package execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the application, container, or package as part of a package workflow.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the execution.</returns>
      <param name="pConnections">A collection of connections for the package.</param>
      <param name="pVariables">A collection of variables for the package.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The transaction object that the package is a part of, depending on the value found in the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.TransactionOption" /> property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ExecutionDuration">
      <summary>Gets the amount of time that the package spent in execution, in milliseconds.</summary>
      <returns>The amount of time that the package spent in execution, in milliseconds.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ExecutionResult">
      <summary>Gets a value that indicates the success or failure of the execution of the package.</summary>
      <returns>The result of the execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ExecutionStatus">
      <summary>Gets the current status of the execution.</summary>
      <returns>The current status of the execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ExportConfigurationFile(System.String)">
      <summary>Creates an XML file that contains all deployable variables in the package.</summary>
      <param name="bstrFileName">The name of the configuration file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ExtendedProperties">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100" /> collection for the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100" /> object collection for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.FailPackageOnFailure">
      <summary>Gets or sets a value that indicates whether the package fails when a task or component in the package fails.</summary>
      <returns>true if the package fails when a task or component in the package fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.FailParentOnFailure">
      <summary>Gets or sets a value that indicates whether the parent package fails when a child package fails.</summary>
      <returns>true if the parent package fails when a child package fails; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.FindReferencedObjects(System.Object)">
      <summary>Returns a reference object enumeration.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100" /> enumeration.</returns>
      <param name="pObject">The object to locate.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ForcedExecutionValue">
      <summary>If the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ForceExecutionValue" /> property is set to true, gets or sets a value that specifies the optional execution value that the package returns.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the optional execution value the package returns. The default value of this property is 0.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ForceExecutionResult">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration value that specifies the forced execution result of the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration that reports the forced success or failure of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ForceExecutionValue">
      <summary>Gets or sets a value that indicates whether the execution value of the package should be forced to contain a particular value.</summary>
      <returns>true if the execution value of the package should be forced to contain a particular value; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.GetBreakpointTargets(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100,System.Boolean)">
      <summary>Returns an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100" /> collection. Depending on the setting of the <paramref name="onlyEnabled" /> parameter, the collection contains all breakpoint targets in the package, or only enabled breakpoint targets.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100" /> collection.</returns>
      <param name="pBreakpointSite">An object implementing the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100" /> interface.</param>
      <param name="onlyEnabled">true to indicate that only enabled breakpoints are included in the collection; false to indicate that all breakpoint targets are included in the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.GetExpression(System.String)">
      <summary>Returns a value that contains the expression for the specified property.</summary>
      <returns>A value that contains the expression used to evaluate the property.</returns>
      <param name="bstrPropertyName">The name of the property whose expression you want to see.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.GetObjectFromPackagePath(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100@)">
      <summary>Returns an object from the specified package path.</summary>
      <returns>An object from the specified package path.</returns>
      <param name="bstrPath">The path to the package.</param>
      <param name="ppProperty">The property of the object to retrieve.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.GetParentID">
      <summary>Retrieves the parent identifier of the package.</summary>
      <returns>The parent identifier of the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.GetPreExecutionPackageXML(System.Object@)">
      <summary>Retrieves the pre-execution of a package XML.</summary>
      <param name="pvDestination">The destination.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.GetProject">
      <summary>Retrieves the DTS project.</summary>
      <returns>The DTS project.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ID">
      <summary>Gets the ID of the package.</summary>
      <returns>The ID of the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSExecutable100_Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Executes the executable.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The handle to a transaction type if participating in a transaction.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSExecutable100_Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verifies that the executable will successfully execute by validating all its dependencies and other items before executing it.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSPackageSigning100_CertificateContext">
      <summary>Gets or sets the certificate context.</summary>
      <returns>The certificate context.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSPackageSigning100_CertificateObject">
      <summary>Gets or sets the certificate object.</summary>
      <returns>The certificate object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSPackageSigning100_CheckSignature">
      <summary>Checks the signature of the package.</summary>
      <returns>The checked signature.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSPackageSigning100_CheckSignatureOnLoad">
      <summary>Gets or sets a value that indicates whether the package checks the signature on loading.</summary>
      <returns>true if the package checks the signature on loading; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSPackageSigning100_LoadUserCertificateByHash(System.Byte[]@)">
      <summary>Loads the user certificate using hash.</summary>
      <param name="ppsaCertHash">The hash.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSPackageSigning100_LoadUserCertificateByName(System.String)">
      <summary>Loads the user certificate by name.</summary>
      <param name="SubjectName">The name of the subject.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSSuspend100_ResumeExecution">
      <summary>Resumes the execution of the task after pausing.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSSuspend100_SuspendExecution">
      <summary>Notifies that the executable needs to suspend.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSSuspend100_SuspendRequired">
      <summary>Gets or sets a value that indicates whether the task should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task should suspend when they encounter a breakpoint; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ImportConfigurationFile(System.String)">
      <summary>Loads a configuration file associated with the package.</summary>
      <param name="bstrFileName">The path and name of the file that contains the configuration.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.InteractiveMode">
      <summary>Gets or sets a value that indicates whether the tasks should show user interface objects while executing.</summary>
      <returns>true if the tasks should show user interface objects while executing; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IsDefaultLocaleID">
      <summary>Gets a value that indicates whether the package uses the default locale.</summary>
      <returns>true if the package uses the default locale; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction in the package.</summary>
      <returns>The isolation level of the transaction.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LastModifiedProductVersion">
      <summary>Gets the product version of the last modified package.</summary>
      <returns>The product version of the last modified package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package and all its objects that have been saved to memory in XML format.</summary>
      <param name="pNode">The node that contains the connection manager information to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LoadUserCertificateByHash(System.Byte[]@)">
      <summary>Loads the user certificate using hash.</summary>
      <param name="ppsaCertHash">The hash of the certificate for the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LoadUserCertificateByName(System.String)">
      <summary>Loads the user certificate by name.</summary>
      <param name="SubjectName">The name of the subject.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LocaleID">
      <summary>Gets or sets the identifier of the locale used by a package.</summary>
      <returns>The identifier of the locale used by a package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LogEntryInfos">
      <summary>Gets a collection of log entry definitions.</summary>
      <returns>A collection of log entry definitions.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LoggingMode">
      <summary>Gets or sets the logging mode of the package.</summary>
      <returns>The logging mode of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LoggingOptions">
      <summary>Gets the filtering and logging resource for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100" /> object that contains the available logging provider options and filters for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LogProviders">
      <summary>Gets the collection of log providers associated with the package.</summary>
      <returns>The collection of log providers associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.MaxConcurrentExecutables">
      <summary>Gets or sets the number of threads that a package can create.</summary>
      <returns>The number of threads that a package can create.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.MaximumErrorCount">
      <summary>Gets or sets the maximum number of errors that can occur before the package stops running.</summary>
      <returns>The maximum number of errors allowed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass" />.</summary>
      <returns>The name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.OfflineMode">
      <summary>Gets or sets a value that indicates whether the package is working in offline mode.</summary>
      <returns>true if the package is working in offline mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.PackageFormatVersion">
      <summary>Gets the format version of the package.</summary>
      <returns>The format version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.PackageLocation">
      <summary>Gets the location of the package.</summary>
      <returns>The location of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.PackagePassword">
      <summary>Sets the password for the package.</summary>
      <returns>The password for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.PackagePriorityClass">
      <summary>Gets or sets the Win32 thread priority class of the package thread.</summary>
      <returns>The Win32 thread priority class of the package thread.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.PackageType">
      <summary>Gets or sets a value that identifies the tool that created the package.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.PackageUpgradeOptions">
      <summary>Gets or sets the upgrade options for the package.</summary>
      <returns>The upgrade options for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Parent">
      <summary>Gets the parent of the package.</summary>
      <returns>The parent.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.PasswordMatch(System.String)">
      <summary>Determines whether the specified password matches with the package password.</summary>
      <returns>true if the specified password matches with the package password; otherwise, false.</returns>
      <param name="bstrPackagePassword">The password to match with the package password.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.PermitUnencryptedSave(System.Boolean)">
      <summary>Permits the unencrypted information to save.</summary>
      <param name="vbPermit">true to permit unencrypted information to save; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.PrecedenceConstraints">
      <summary>Gets a collection of precedence constraints for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection for the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ProcessConfiguration(System.String,System.Object)">
      <summary>Specifies the configuration information for a package and its objects.</summary>
      <param name="bstrPath">The location of the configuration file.</param>
      <param name="vValue">The data type of the configuration file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Properties">
      <summary>Gets a collection of properties for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ProtectionLevel">
      <summary>Gets or sets the level of protection on the package.</summary>
      <returns>The level of protection on the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.RegenerateID">
      <summary>Creates a new GUID for the package and updates the package ID property.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ResumeExecution">
      <summary>Resumes the execution of the package after pausing.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SafeRecursiveProjectPackageExecution">
      <summary>Gets or sets a value that indicates whether recursive execution of the package is safe.</summary>
      <returns>true if recursive execution of the package is safe; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SaveCheckpoints">
      <summary>Gets or sets a value that indicates whether the package will use checkpoints during package execution.</summary>
      <returns>true if the package uses checkpoints during package execution; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the package to memory in an XML format.</summary>
      <param name="pDoc">The document to which to save the information.</param>
      <param name="pNode">The node within the document to which to save the information.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property.</summary>
      <param name="bstrPropertyName">The name of the property to assign the expression to.</param>
      <param name="bstrExpression">The expression.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SetProject(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100,System.String)">
      <summary>Sets the specified project.</summary>
      <param name="pProject">The project to set.</param>
      <param name="bstrPackageLocation">The location to the package items.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SQLFolder">
      <summary>Gets or sets the SQL folder for the package.</summary>
      <returns>The SQL folder for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.StartTime">
      <summary>Gets the time when the package starts execution.</summary>
      <returns>The time when the package starts execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.StopTime">
      <summary>Gets the time when the package stops execution.</summary>
      <returns>The time when the package stops execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SuppressConfigurationWarnings">
      <summary>Gets or sets a value that indicates whether the warnings generated by configurations are suppressed.</summary>
      <returns>true if the warnings generated by configurations are suppressed; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SuspendExecution">
      <summary>Called when the executable needs to suspend. This method is called by the runtime engine.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SuspendRequired">
      <summary>Gets or sets a value that indicates whether the tasks should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.TransactionOption">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration value that indicates whether the package participates in transactions.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration that indicates if the package can be part of transactions.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.UpdateObjects">
      <summary>Gets or sets a value that indicates whether the extensible objects can be updated at package load time if an updated version is found.</summary>
      <returns>true if the extensible objects can be updated at package load time if an updated version is found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.UpdatePackage">
      <summary>Gets or sets a value that indicates whether the packages can be updated when an updated version is found.</summary>
      <returns>true if the packages can be updated when an updated version is found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the package to determine if it contains invalid settings that will prevent it from executing successfully.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the validation.</returns>
      <param name="pConnections">A collection of connections.</param>
      <param name="pVariables">A collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.VariableDispenser">
      <summary>Gets the dispenser of the variables in the package.</summary>
      <returns>The dispenser of the variables in the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Variables">
      <summary>Gets a collection that contains the variables associated with the package.</summary>
      <returns>A collection of variables.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.VersionBuild">
      <summary>Gets or sets the build version of the package.</summary>
      <returns>The build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.VersionComments">
      <summary>Gets or sets the version comments associated with the package.</summary>
      <returns>The version comments associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.VersionGUID">
      <summary>Gets the version GUID generated when the package is first created.</summary>
      <returns>The version GUID for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.VersionMajor">
      <summary>Gets or sets the major build version of the package.</summary>
      <returns>The major build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.VersionMinor">
      <summary>Gets or sets the minor build version of the package.</summary>
      <returns>The minor build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.Warnings">
      <summary>Gets the collection of warnings set on the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100" /> collection set on the package.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32">
      <summary>Represents an interface for a remote 32-bit package.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class">
      <summary>Represents a class for a remote 32-bit package.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)">
      <summary>Passes a breakpoint manager to a package.</summary>
      <param name="pBreakpointManager">The breakpoint manager specific for this package.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.CertificateContext">
      <summary>Gets or sets the context of the certificate associated with the package.</summary>
      <returns>The context of the certificate.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.CertificateObject">
      <summary>Gets or sets the certificate object associated with the package.</summary>
      <returns>The certificate object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.CheckpointFileName">
      <summary>Gets or sets the name of the file that captures the checkpoint information, which enables a package to restart.</summary>
      <returns>The name of the file that captures the checkpoint information.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.CheckpointUsage">
      <summary>Gets or sets a value that specifies if or when a package is restarted.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSCheckpointUsage" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.CheckSignature">
      <summary>Checks the status of the digital signature of the package.</summary>
      <returns>One of the enumeration values that indicates the status of the digital signature.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.CheckSignatureOnLoad">
      <summary>Gets or sets a value that indicates whether the digital signature is checked when a package is loaded.</summary>
      <returns>true if the digital signature is checked when a package is loaded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ComputeExpressions(System.Boolean)">
      <summary>Computes the expression of this <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class" /> object.</summary>
      <param name="recursive">true to include the compute expressions of the package object recursively; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Configurations">
      <summary>Gets the collection of configurations for the package.</summary>
      <returns>The collection of configurations for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Connections">
      <summary>Gets the collection of connection managers for the package.</summary>
      <returns>The collection of connection managers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.CreationDate">
      <summary>Gets or sets the date and time that the package was created.</summary>
      <returns>The date and time that the package was created.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.CreationName">
      <summary>Gets the name used to create the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class" /> object.</summary>
      <returns>The creation name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.CreatorComputerName">
      <summary>Gets or sets the name of the computer on which the package was created.</summary>
      <returns>The name of the computer.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.CreatorName">
      <summary>Gets or sets the name of the individual who created the package.</summary>
      <returns>The name of the person who created the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.DebugMode">
      <summary>Gets or sets a value that indicates whether the package is in debug mode.</summary>
      <returns>true if the package is in debug mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.DelayValidation">
      <summary>Gets or sets a value that indicates whether package validation is delayed until the package runs.</summary>
      <returns>true if package validation is delayed until the package runs; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Description">
      <summary>Gets or sets the description of the package.</summary>
      <returns>The description of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.DesignEvents">
      <summary>Gets or sets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> that indicates if the designer or other third-party client is to receive events during design time.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.DesignTimeProperties">
      <summary>Gets or sets the design time properties of a package such as layout information.</summary>
      <returns>The design time properties of a package such as layout information.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Disable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class" /> object is disabled.</summary>
      <returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class" /> object is disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.DisableEventHandlers">
      <summary>Gets or sets a value that indicates whether the event handlers on the package are disabled.</summary>
      <returns>true if the event handlers on the package are disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.EnableConfigurations">
      <summary>Gets or sets a value that indicates whether the package loads configurations.</summary>
      <returns>true if the package loads configurations; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.EncryptCheckpoints">
      <summary>Gets or sets a value that indicates whether the checkpoint files are encrypted.</summary>
      <returns>true if the checkpoint files are encrypted; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Errors">
      <summary>Gets the collection of errors associated with the package.</summary>
      <returns>The collection of errors.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.EventHandlers">
      <summary>Gets a collection of event handler objects.</summary>
      <returns>A collection of event handler objects.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.EventInfos">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100" /> collection that is associated with the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos100" /> collection that is associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Executables">
      <summary>Gets the collection of executable objects contained within the package.</summary>
      <returns>The collection of executable objects contained within the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Execute">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that contains information about the success or failure of the package execution.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that contains information about the success or failure of the package execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the application, container, or package as part of a package workflow.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the execution.</returns>
      <param name="pConnections">A collection of connections for the package.</param>
      <param name="pVariables">A collection of variables for the package.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The transaction object that the package is a part of, depending on the value found in the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.TransactionOption" /> property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ExecutionDuration">
      <summary>Gets the amount of time that the package spent in execution, in milliseconds.</summary>
      <returns>The amount of time that the package spent in execution, in milliseconds.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ExecutionResult">
      <summary>Gets a value that indicates the success or failure of the execution of the package.</summary>
      <returns>The result of the execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ExecutionStatus">
      <summary>Gets the current status of the execution.</summary>
      <returns>The current status of the execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ExportConfigurationFile(System.String)">
      <summary>Creates an XML file that contains all deployable variables in the package.</summary>
      <param name="bstrFileName">The name of the configuration file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ExtendedProperties">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100" /> collection for the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100" /> object collection for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.FailPackageOnFailure">
      <summary>Gets or sets a value that indicates whether the package fails when a task or component in the package fails.</summary>
      <returns>true if the package fails when a task or component in the package fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.FailParentOnFailure">
      <summary>Gets or sets a value that indicates whether the parent package fails when a child package fails.</summary>
      <returns>true if the parent package fails when a child package fails; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.FindReferencedObjects(System.Object)">
      <summary>Returns a reference object enumeration.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100" /> enumeration.</returns>
      <param name="pObject">The object to locate.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ForcedExecutionValue">
      <summary>If the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ForceExecutionValue" /> property is set to true, gets or sets a value that specifies the optional execution value that the package returns.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the optional execution value the package returns. The default value of this property is 0.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ForceExecutionResult">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration value that specifies the forced execution result of the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration that reports the forced success or failure of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ForceExecutionValue">
      <summary>Gets or sets a value that indicates whether the execution value of the package should be forced to contain a particular value.</summary>
      <returns>true if the execution value of the package should be forced to contain a particular value; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.GetBreakpointTargets(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100,System.Boolean)">
      <summary>Returns an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100" /> collection. Depending on the setting of the <paramref name="onlyEnabled" /> parameter, the collection contains all breakpoint targets in the package, or only enabled breakpoint targets.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100" /> collection.</returns>
      <param name="pBreakpointSite">An object implementing the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100" /> interface.</param>
      <param name="onlyEnabled">true to indicate that only enabled breakpoints are included in the collection; false to indicate that all breakpoint targets are included in the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.GetExpression(System.String)">
      <summary>Returns a value that contains the expression for the specified property.</summary>
      <returns>A value that contains the expression used to evaluate the property.</returns>
      <param name="bstrPropertyName">The name of the property whose expression you want to see.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.GetObjectFromPackagePath(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100@)">
      <summary>Returns an object from the specified package path.</summary>
      <returns>An object from the specified package path.</returns>
      <param name="bstrPath">The path to the package.</param>
      <param name="ppProperty">The property of the object to retrieve.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.GetParentID">
      <summary>Retrieves the parent identifier of the package.</summary>
      <returns>The parent identifier of the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.GetPreExecutionPackageXML(System.Object@)">
      <summary>Retrieves the pre-execution of a package XML.</summary>
      <param name="pvDestination">The destination.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.GetProject">
      <summary>Retrieves the DTS project.</summary>
      <returns>The DTS project.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ID">
      <summary>Gets the ID of the package.</summary>
      <returns>The ID of the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSExecutable100_Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Executes the executable.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The handle to a transaction type if participating in a transaction.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSExecutable100_Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verifies that the executable will successfully execute by validating all its dependencies and other items before executing it.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSPackageSigning100_CertificateContext">
      <summary>Gets or sets the certificate context.</summary>
      <returns>The certificate context.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSPackageSigning100_CertificateObject">
      <summary>Gets or sets the certificate object.</summary>
      <returns>The certificate object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSPackageSigning100_CheckSignature">
      <summary>Checks the signature of the package.</summary>
      <returns>The checked signature.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSPackageSigning100_CheckSignatureOnLoad">
      <summary>Gets or sets a value that indicates whether the package checks the signature on loading.</summary>
      <returns>true if the package checks the signature on loading; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSPackageSigning100_LoadUserCertificateByHash(System.Byte[]@)">
      <summary>Loads the user certificate using hash.</summary>
      <param name="ppsaCertHash">The hash.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSPackageSigning100_LoadUserCertificateByName(System.String)">
      <summary>Loads the user certificate by name.</summary>
      <param name="SubjectName">The name of the subject.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSSuspend100_ResumeExecution">
      <summary>Resumes the execution of the task after pausing.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSSuspend100_SuspendExecution">
      <summary>Notifies that the executable needs to suspend.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IDTSSuspend100_SuspendRequired">
      <summary>Gets or sets a value that indicates whether the task should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task should suspend when they encounter a breakpoint; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ImportConfigurationFile(System.String)">
      <summary>Loads a configuration file associated with the package.</summary>
      <param name="bstrFileName">The path and name of the file that contains the configuration.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.InteractiveMode">
      <summary>Gets or sets a value that indicates whether the tasks should show user interface objects while executing.</summary>
      <returns>true if the tasks should show user interface objects while executing; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IsDefaultLocaleID">
      <summary>Gets a value that indicates whether the package uses the default locale.</summary>
      <returns>true if the package uses the default locale; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction in the package.</summary>
      <returns>The isolation level of the transaction.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.LastModifiedProductVersion">
      <summary>Gets the product version of the last modified package.</summary>
      <returns>The product version of the last modified package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package and all its objects that have been saved to memory in XML format.</summary>
      <param name="pNode">The node that contains the connection manager information to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.LoadUserCertificateByHash(System.Byte[]@)">
      <summary>Loads the user certificate using hash.</summary>
      <param name="ppsaCertHash">The hash of the certificate for the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.LoadUserCertificateByName(System.String)">
      <summary>Loads the user certificate by name.</summary>
      <param name="SubjectName">The name of the subject.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.LocaleID">
      <summary>Gets or sets the identifier of the locale used by a package.</summary>
      <returns>The identifier of the locale used by a package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.LogEntryInfos">
      <summary>Gets a collection of log entry definitions.</summary>
      <returns>A collection of log entry definitions.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.LoggingMode">
      <summary>Gets or sets the logging mode of the package.</summary>
      <returns>The logging mode of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.LoggingOptions">
      <summary>Gets the filtering and logging resource for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions100" /> object that contains the available logging provider options and filters for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.LogProviders">
      <summary>Gets the collection of log providers associated with the package.</summary>
      <returns>The collection of log providers associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.MaxConcurrentExecutables">
      <summary>Gets or sets the number of threads that a package can create.</summary>
      <returns>The number of threads that a package can create.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.MaximumErrorCount">
      <summary>Gets or sets the maximum number of errors that can occur before the package stops running.</summary>
      <returns>The maximum number of errors allowed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class" />.</summary>
      <returns>The name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.OfflineMode">
      <summary>Gets or sets a value that indicates whether the package is working in offline mode.</summary>
      <returns>true if the package is working in offline mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.PackageFormatVersion">
      <summary>Gets the format version of the package.</summary>
      <returns>The format version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.PackageLocation">
      <summary>Gets the location of the package.</summary>
      <returns>The location of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.PackagePassword">
      <summary>Sets the password for the package.</summary>
      <returns>The password for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.PackagePriorityClass">
      <summary>Gets or sets the Win32 thread priority class of the package thread.</summary>
      <returns>The Win32 thread priority class of the package thread.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.PackageType">
      <summary>Gets or sets a value that identifies the tool that created the package.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.PackageUpgradeOptions">
      <summary>Gets or sets the upgrade options for the package.</summary>
      <returns>The upgrade options for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Parent">
      <summary>Gets the parent of the package.</summary>
      <returns>The parent.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.PasswordMatch(System.String)">
      <summary>Determines whether the specified password matches with the package password.</summary>
      <returns>true if the specified password matches with the package password; otherwise, false.</returns>
      <param name="bstrPackagePassword">The password to match with the package password.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.PermitUnencryptedSave(System.Boolean)">
      <summary>Permits the unencrypted information to save.</summary>
      <param name="vbPermit">true to permit unencrypted information to save; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.PrecedenceConstraints">
      <summary>Gets a collection of precedence constraints for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection for the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ProcessConfiguration(System.String,System.Object)">
      <summary>Specifies the configuration information for a package and its objects.</summary>
      <param name="bstrPath">The location of the configuration file.</param>
      <param name="vValue">The data type of the configuration file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Properties">
      <summary>Gets a collection of properties for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ProtectionLevel">
      <summary>Gets or sets the level of protection on the package.</summary>
      <returns>The level of protection on the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.RegenerateID">
      <summary>Creates a new GUID for the package and updates the package ID property.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.ResumeExecution">
      <summary>Resumes the execution of the package after pausing.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.SafeRecursiveProjectPackageExecution">
      <summary>Gets or sets a value that indicates whether recursive execution of the package is safe.</summary>
      <returns>true if recursive execution of the package is safe; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.SaveCheckpoints">
      <summary>Gets or sets a value that indicates whether the package will use checkpoints during package execution.</summary>
      <returns>true if the package uses checkpoints during package execution; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the package to memory in an XML format.</summary>
      <param name="pDoc">The document to which to save the information.</param>
      <param name="pNode">The node within the document to which to save the information.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property.</summary>
      <param name="bstrPropertyName">The name of the property to assign the expression to.</param>
      <param name="bstrExpression">The expression.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.SetProject(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100,System.String)">
      <summary>Sets the specified project.</summary>
      <param name="pProject">The project to set.</param>
      <param name="bstrPackageLocation">The location to the package items.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.SQLFolder">
      <summary>Gets or sets the SQL folder for the package.</summary>
      <returns>The SQL folder for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.StartTime">
      <summary>Gets the time when the package starts execution.</summary>
      <returns>The time when the package starts execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.StopTime">
      <summary>Gets the time when the package stops execution.</summary>
      <returns>The time when the package stops execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.SuppressConfigurationWarnings">
      <summary>Gets or sets a value that indicates whether the warnings generated by configurations are suppressed.</summary>
      <returns>true if the warnings generated by configurations are suppressed; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.SuspendExecution">
      <summary>Called when the executable needs to suspend. This method is called by the runtime engine.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.SuspendRequired">
      <summary>Gets or sets a value that indicates whether the tasks should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.TransactionOption">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration value that indicates whether the package participates in transactions.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration that indicates if the package can be part of transactions.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.UpdateObjects">
      <summary>Gets or sets a value that indicates whether the extensible objects can be updated at package load time if an updated version is found.</summary>
      <returns>true if the extensible objects can be updated at package load time if an updated version is found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.UpdatePackage">
      <summary>Gets or sets a value that indicates whether the packages can be updated when an updated version is found.</summary>
      <returns>true if the packages can be updated when an updated version is found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the package to determine if it contains invalid settings that will prevent it from executing successfully.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the validation.</returns>
      <param name="pConnections">A collection of connections.</param>
      <param name="pVariables">A collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.VariableDispenser">
      <summary>Gets the dispenser of the variables in the package.</summary>
      <returns>The dispenser of the variables in the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Variables">
      <summary>Gets a collection that contains the variables associated with the package.</summary>
      <returns>A collection of variables.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.VersionBuild">
      <summary>Gets or sets the build version of the package.</summary>
      <returns>The build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.VersionComments">
      <summary>Gets or sets the version comments associated with the package.</summary>
      <returns>The version comments associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.VersionGUID">
      <summary>Gets the version GUID generated when the package is first created.</summary>
      <returns>The version GUID for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.VersionMajor">
      <summary>Gets or sets the major build version of the package.</summary>
      <returns>The major build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.VersionMinor">
      <summary>Gets or sets the minor build version of the package.</summary>
      <returns>The minor build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.Warnings">
      <summary>Gets the collection of warnings set on the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings100" /> collection set on the package.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64">
      <summary>Represents an interface for a remote 64-bit package.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class">
      <summary>Represents a class for a remote 64 bit package.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)">
      <summary>Passes a breakpoint manager to a package.</summary>
      <param name="pBreakpointManager">The breakpoint manager specific for this package.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.CertificateContext">
      <summary>Gets or sets the certificate context.</summary>
      <returns>A Long that contains the certificate context.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.CertificateObject">
      <summary>Gets or sets the certificate object for the package.</summary>
      <returns>The certificate object for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.CheckpointFileName">
      <summary>Gets or sets the name of the file that captures the checkpoint information, which enables a package to restart.</summary>
      <returns>A String that contains the name of the checkpoint file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.CheckpointUsage">
      <summary>Gets or sets a value that specifies if or when a package is restarted.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSCheckpointUsage" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.CheckSignature">
      <summary>Checks the status of the digital signature of the package.</summary>
      <returns>One of the enumeration values that indicates the status of the digital signature.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.CheckSignatureOnLoad">
      <summary>Gets or sets a value indicating whether the digital signature is checked when a package is loaded.</summary>
      <returns>true if the digital signature is validated when the package is loaded; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ComputeExpressions(System.Boolean)">
      <summary>Computes the expression of this <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> object.</summary>
      <param name="recursive">true to include the compute expressions of the package object recursively; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Configurations">
      <summary>Gets the collection of configurations for the package.</summary>
      <returns>The collection of configurations for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Connections">
      <summary>Gets the collection of connection managers for the package.</summary>
      <returns>The collection of connection managers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.CreationDate">
      <summary>Gets or sets the date and time that the package was created.</summary>
      <returns>A DateTime object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.CreationName">
      <summary>Gets a value that contains the name.</summary>
      <returns>A String that contains the name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.CreatorComputerName">
      <summary>Gets or sets the name of the computer on which the package was created.</summary>
      <returns>A String that contains the name of the computer.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.CreatorName">
      <summary>Gets or sets the name of the individual who created the package.</summary>
      <returns>A String that contains the name of the person who created the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.DebugMode">
      <summary>Gets or sets a value that indicates whether the specified object is in debug mode.</summary>
      <returns>true if the specified object is in debug mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.DelayValidation">
      <summary>Gets or sets a value that indicates whether validation of the task is delayed until runtime.</summary>
      <returns>true if validation of the package is delayed until runtime. false if the package is validated, and errors and warnings are returned before the package is actually executed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Description">
      <summary>Gets or sets the description of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> object.</summary>
      <returns>A String that contains the descriptions given to the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.DesignEvents">
      <summary>Gets or sets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> that indicates if the designer or other third-party client is to receive events during design time.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.DesignTimeProperties">
      <summary>Gets or sets the design time properties of a package such as layout information.</summary>
      <returns>The design time properties of a package such as layout information.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Disable">
      <summary>Gets or sets a value that indicates if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object is disabled.</summary>
      <returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object is disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.DisableEventHandlers">
      <summary>Gets or sets a value that indicates whether the event handlers on task are disabled.</summary>
      <returns>true if the event handlers on task are disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.EnableConfigurations">
      <summary>Gets or sets a value that indicates whether the package loads configurations.</summary>
      <returns>true if the package loads configurations; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.EncryptCheckpoints">
      <summary>Gets or sets a value that indicates whether the checkpoint files are encrypted.</summary>
      <returns>true if the checkpoint files are encrypted; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Errors">
      <summary>Gets the collection of errors associated with the package.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSErrors100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.EventHandlers">
      <summary>Gets a collection of event handler objects.</summary>
      <returns>A collection of event handlers in a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.EventInfos">
      <summary>Gets a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> objects.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Executables">
      <summary>Gets a collection of executable objects within the package that are a part of the package workflow.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables100" /> collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Execute">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that contains information about the success or failure of the package execution.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that contains information about the success or failure of the package execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the application, container, or package as part of a package workflow.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the execution.</returns>
      <param name="pConnections">A collection of connections for the package.</param>
      <param name="pVariables">A collection of variables for the package.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The transaction object that the package is a part of, depending on the value found in the <see cref="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote32Class.TransactionOption" /> property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ExecutionDuration">
      <summary>Gets a value that indicates the amount of time that the container spent in execution, in milliseconds.</summary>
      <returns>An Integer that contains the time that the container spent executing. The time is given in milliseconds.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ExecutionResult">
      <summary>Gets a value that indicates the success or failure of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> object.</summary>
      <returns>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ExecutionStatus">
      <summary>Gets a value that indicates the current status of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> object at the time of the call.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ExportConfigurationFile(System.String)">
      <summary>Creates an XML file that contains all deployable variables in the package.</summary>
      <param name="bstrFileName">The name of the configuration file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ExtendedProperties">
      <summary>Gets the ExtendedProperties collection for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties100" /> collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.FailPackageOnFailure">
      <summary>Gets or sets a value that indicates whether the package fails when a child container fails.</summary>
      <returns>true if the package fails when a child container fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.FailParentOnFailure">
      <summary>Gets or sets a value that indicates whether the parent container fails when a child container fails.</summary>
      <returns>true if the parent container fails when a child container fails; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.FindReferencedObjects(System.Object)">
      <summary>Returns a reference object enumeration.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects100" /> enumeration.</returns>
      <param name="pObject">The object to locate.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ForcedExecutionValue">
      <summary>Gets or sets an object that contains a container-defined value.</summary>
      <returns>An object that contains a container-defined value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ForceExecutionResult">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration value that specifies the execution result of the container.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration that indicates the success or failure of the package or container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ForceExecutionValue">
      <summary>Gets or sets a value that indicates whether the execution value of the container should be forced to contain a particular value.</summary>
      <returns>true if the execution value of the container should be forced to contain a particular value; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.GetBreakpointTargets(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100,System.Boolean)">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100" /> collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets100" /> collection.</returns>
      <param name="pBreakpointSite">An object implementing the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite100" /> interface.</param>
      <param name="onlyEnabled">true to indicate that only enabled breakpoints are included in the collection; false to indicate that all breakpoint targets are included in the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.GetExpression(System.String)">
      <summary>Returns a value that contains the expression for the specified property.</summary>
      <returns>A value that contains the expression used to evaluate the property.</returns>
      <param name="bstrPropertyName">The name of the property whose expression you want to see.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.GetObjectFromPackagePath(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty100@)">
      <summary>Returns an object from the specified package path.</summary>
      <returns>An object from the specified package path.</returns>
      <param name="bstrPath">The path to the package.</param>
      <param name="ppProperty">The property of the object to retrieve.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.GetParentID">
      <summary>Retrieves the parent identifier of the package.</summary>
      <returns>The parent identifier of the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.GetPreExecutionPackageXML(System.Object@)">
      <summary>Retrieves the pre-execution of a package XML.</summary>
      <param name="pvDestination">The destination.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.GetProject">
      <summary>Retrieves the DTS project.</summary>
      <returns>The DTS project.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ID">
      <summary>Gets the ID, which is a GUID, of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" />.</summary>
      <returns>A GUID that identifies the DtsContainer.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSExecutable100_Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Executes the executable.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The handle to a transaction type if participating in a transaction.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSExecutable100_Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verifies that the executable will successfully execute by validating all its dependencies and other items before executing it.</summary>
      <returns>The result that indicates success, failure, or other status from running the executable.</returns>
      <param name="pConnections">The collection of connections.</param>
      <param name="pVariables">The collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSPackageSigning100_CertificateContext">
      <summary>Gets or sets the certificate context.</summary>
      <returns>The certificate context.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSPackageSigning100_CertificateObject">
      <summary>Gets or sets the certificate object.</summary>
      <returns>The certificate object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSPackageSigning100_CheckSignature">
      <summary>Checks the signature of the package.</summary>
      <returns>The checked signature.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSPackageSigning100_CheckSignatureOnLoad">
      <summary>Gets or sets a value that indicates whether the package checks the signature on loading.</summary>
      <returns>true if the package checks the signature on loading; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSPackageSigning100_LoadUserCertificateByHash(System.Byte[]@)">
      <summary>Loads the user certificate using hash.</summary>
      <param name="ppsaCertHash">The hash for the certificate.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSPackageSigning100_LoadUserCertificateByName(System.String)">
      <summary>Loads the user certificate by name.</summary>
      <param name="SubjectName">The name of the subject.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSSuspend100_ResumeExecution">
      <summary>Resumes the execution of the task after pausing.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSSuspend100_SuspendExecution">
      <summary>Notifies that the executable needs to suspend.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IDTSSuspend100_SuspendRequired">
      <summary>Gets or sets a value that indicates whether the task should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task should suspend when they encounter a breakpoint; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ImportConfigurationFile(System.String)">
      <summary>Loads a configuration file associated with the package.</summary>
      <param name="bstrFileName">The path and name of the file that contains the configuration.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.InteractiveMode">
      <summary>Gets or sets a value that indicates whether the tasks should show user interface objects while executing.</summary>
      <returns>true if that tasks should show user interface objects while executing; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IsDefaultLocaleID">
      <summary>Gets a value that indicates whether the container uses the default code.</summary>
      <returns>true if the container uses the default code; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> object.</summary>
      <returns>An Integer value that corresponds to the isolation level.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.LastModifiedProductVersion">
      <summary>Gets the product version of the last modified package.</summary>
      <returns>The product version of the last modified package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package and all its objects that have been saved to memory in XML format.</summary>
      <param name="pNode">The node that contains the connection manager information to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface for firing events (errors, warnings, and so on) during persistence.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.LoadUserCertificateByHash(System.Byte[]@)">
      <summary>Loads the user certificate using hash.</summary>
      <param name="ppsaCertHash">The hash of the certificate for the package.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.LoadUserCertificateByName(System.String)">
      <summary>Loads the user certificate by name.</summary>
      <param name="SubjectName">The name of the subject.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.LocaleID">
      <summary>Gets or sets the specified localeID to use when the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> object is executed.</summary>
      <returns>An Integer that represents the locale.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.LogEntryInfos">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100" /> object.</summary>
      <returns>A LogEntryInfos object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.LoggingMode">
      <summary>Gets or sets a valid value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode" /> enumeration that indicates the logging mode of the container.</summary>
      <returns>A DTSLoggingMode enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.LoggingOptions">
      <summary>Gets an object that contains properties that indicates the filtering and logging resource for containers.</summary>
      <returns>An object that contains the available logging provider options and filters for containers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.LogProviders">
      <summary>Gets the collection of log providers associated with the package.</summary>
      <returns>A LogProviders collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.MaxConcurrentExecutables">
      <summary>Gets or sets the number of threads that a package can create.</summary>
      <returns>The number of threads that a package can create.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.MaximumErrorCount">
      <summary>Gets or sets the maximum number of errors that can occur before the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> object stops running.</summary>
      <returns>The maximum number of errors allowed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" />.</summary>
      <returns>The name of the DtsContainer.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.OfflineMode">
      <summary>Gets or sets a value that indicates whether the package is working in offline mode.</summary>
      <returns>true if the package is working in offline mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.PackageFormatVersion">
      <summary>Gets the format version of the package.</summary>
      <returns>The format version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.PackageLocation">
      <summary>Gets the location of the package.</summary>
      <returns>The location of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.PackagePassword">
      <summary>Sets the value of the password for the package.</summary>
      <returns>The value of the password for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.PackagePriorityClass">
      <summary>Gets or sets the Win32 thread priority class of the package thread.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPriorityClass" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.PackageType">
      <summary>Gets or sets a value that identifies the tool that created the package.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.PackageUpgradeOptions">
      <summary>Gets or sets the upgrade options for the package.</summary>
      <returns>The upgrade options for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Parent">
      <summary>Gets the parent container.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object that is the parent of the current DtsContainer.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.PasswordMatch(System.String)">
      <summary>Determines whether the specified password matches with the package password.</summary>
      <returns>true if the specified password matches with the package password; otherwise, false.</returns>
      <param name="bstrPackagePassword">The password to match with the package password.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.PermitUnencryptedSave(System.Boolean)">
      <summary>Permits the unencrypted information to save.</summary>
      <param name="vbPermit">true to permit unencrypted information to save; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.PrecedenceConstraints">
      <summary>Gets a collection of precedence constraints for the package.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" /> collection for the package.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ProcessConfiguration(System.String,System.Object)">
      <summary>Specifies the configuration information for a package and its objects.</summary>
      <param name="bstrPath">The full path to the file.</param>
      <param name="vValue">The location of the configuration file.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Properties">
      <summary>Gets a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> for the package.</summary>
      <returns>A DtsProperties collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ProtectionLevel">
      <summary>Gets or sets the level of protection on the package.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel" /> enumeration.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.RegenerateID">
      <summary>Creates a new GUID for the package and updates the package ID property.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.ResumeExecution">
      <summary>Resumes the execution of the package after pausing.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.SafeRecursiveProjectPackageExecution">
      <summary>Gets or sets a value that indicates whether recursive execution of the package is sage.</summary>
      <returns>true if recursive execution of the package is sage; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.SaveCheckpoints">
      <summary>Gets or sets a value that determines if the package will use checkpoints during package execution.</summary>
      <returns>true if a value determines the package will use checkpoints; otherwise; false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the package to memory in an XML format.</summary>
      <param name="pDoc">The document to which to save the information.</param>
      <param name="pNode">The node within the document to which to save the information.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property.</summary>
      <param name="bstrPropertyName">The name of the property to assign the expression to.</param>
      <param name="bstrExpression">The expression.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.SetProject(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100,System.String)">
      <summary>Sets the specified project.</summary>
      <param name="pProject">The project to set.</param>
      <param name="bstrPackageLocation">The location to the package items.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.SQLFolder">
      <summary>Gets or sets the SQL folder for the package.</summary>
      <returns>The SQL folder for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.StartTime">
      <summary>Gets the time when the package starts execution.</summary>
      <returns>The time when the package starts execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.StopTime">
      <summary>Gets the time when the package stops execution.</summary>
      <returns>The time when the package stops execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.SuppressConfigurationWarnings">
      <summary>Gets or sets a value that indicates whether the warnings generated by configurations are suppressed.</summary>
      <returns>true if the warnings generated by the configurations are suppressed; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.SuspendExecution">
      <summary>Calls when the executable needs to suspend. This method is called by the runtime engine.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.SuspendRequired">
      <summary>Gets or sets a value that indicates whether the tasks should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.TransactionOption">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> enumeration value that indicates whether the package participates in transactions.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> enumeration value that indicates whether the package participates in transactions.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.UpdateObjects">
      <summary>Gets or sets a value that indicates whether the extensible objects can be updated at package load time if an updated version is found.</summary>
      <returns>true if the extensible objects can be updated at package load time if an updated version is found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.UpdatePackage">
      <summary>Gets or sets a value that indicates whether the packages can be updated when an updated version is found.</summary>
      <returns>true if the packages can be updated when an updated version is found; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the package to determine if it contains invalid settings that will prevent it from executing successfully.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the validation.</returns>
      <param name="pConnections">A collection of connections.</param>
      <param name="pVariables">A collection of variables.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.VariableDispenser">
      <summary>Gets the dispenser of the variables in the package.</summary>
      <returns>The dispenser of the variables in the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Variables">
      <summary>Gets a collection that contains the variables associated with the package.</summary>
      <returns>A collection of variables.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.VersionBuild">
      <summary>Gets or sets the build version of the package.</summary>
      <returns>The build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.VersionComments">
      <summary>Gets or sets the version comments associated with the package.</summary>
      <returns>The version comments associated with the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.VersionGUID">
      <summary>Gets the version GUID generated when the package is first created.</summary>
      <returns>The version GUID for the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.VersionMajor">
      <summary>Gets or sets the major build version of the package.</summary>
      <returns>The major build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.VersionMinor">
      <summary>Gets or sets the minor build version of the package.</summary>
      <returns>The minor build version of the package.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class.Warnings">
      <summary>Gets the collection of warnings set on the package.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote64Class" /> collection sets on the package.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Parameter">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass">
      <summary>Represents a parameter class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass.CreationName">
      <summary>Gets the name used to create the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</summary>
      <returns>The creation name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass.DataType">
      <summary>Gets or sets the data type of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</summary>
      <returns>The data type of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass.Description">
      <summary>Gets or sets the description of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</summary>
      <returns>The description of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass.ID">
      <summary>Gets the identifier of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</summary>
      <returns>The identifier of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass.IncludeInDebugDump">
      <summary>Gets or sets a value that indicates whether <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object is included in a debug dump.</summary>
      <returns>True if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object is included in a debug dump; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</summary>
      <returns>The name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass.Required">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object is a required parameter.</summary>
      <returns>True if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object is a required parameter; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass.Sensitive">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object contains sensitive data.</summary>
      <returns>True if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object contains sensitive data; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass.Value">
      <summary>Gets or sets the value of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</summary>
      <returns>The value of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ParameterClass" /> object.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraint">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PrecedenceConstraint" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass.ConstrainedExecutable">
      <summary>Gets the name of the constrained container.</summary>
      <returns>The name of the constrained container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass.EvalOp">
      <summary>Gets or sets the evaluation operations used by the precedence constraint.</summary>
      <returns>The evaluation operations used by the precedence constraint.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass.EvaluatesTrue">
      <summary>Gets the Boolean value of the Value property.</summary>
      <returns>A Boolean that indicates the value of the Value property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass.LogicalAnd">
      <summary>Gets or sets a value that indicates whether multiple constraints work together.</summary>
      <returns>true if multiple constraints work together; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass.Parent">
      <summary>Gets the parent of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" /> object.</summary>
      <returns>The parent of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass.PrecedenceExecutable">
      <summary>Gets the name of the precedence executable.</summary>
      <returns>The name of the precedence executable.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass.Value">
      <summary>Gets a value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreator">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorClass">
      <summary>Represents the project connections creator class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorClass.CreateConnections(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100)">
      <summary>Create connections with a specified project.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> connections.</returns>
      <param name="pProject">The specified project.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorNeutral">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorNeutralClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorNeutralClass">
      <summary>Represents the project connections creator neutral class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorNeutralClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorNeutralClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ProjectConnectionsCreatorNeutralClass.CreateConnections(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProject100)">
      <summary>Creates connections with the specified project.</summary>
      <returns>The created <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100" /> connections.</returns>
      <param name="pProject">The specified project.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ReplacementTask">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ReplacementTaskClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ReplacementTaskClass">
      <summary>Represents a replacement task class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ReplacementTaskClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ReplacementTaskClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ReplacementTaskClass.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the task.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pConnections">A collection of conenctions used by the task.</param>
      <param name="pVariableDispenser">The object for locking variables.</param>
      <param name="pEvents">Implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100" /> interface.</param>
      <param name="pLog">Implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="vTransaction">The transaction object that the container is a part of.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.ReplacementTaskClass.ExecutionValue">
      <summary>Gets a user-defined object.</summary>
      <returns>A user-defined object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ReplacementTaskClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Verifies that the component is properly configured.</summary>
      <returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
      <param name="pConnections">A collection of connections used by the task.</param>
      <param name="pVariableDispenser">The object for locking variables.</param>
      <param name="pEvents">Implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents100" /> interface.</param>
      <param name="pLog">Implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Sequence">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass">
      <summary>Represents a sequence class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)">
      <summary>This method is called by the run-time engine when a task or container is created.</summary>
      <param name="pBreakpointManager">Use for controlling breakpoints on this task or container.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.ComputeExpressions(System.Boolean)">
      <summary>Computes expressions of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass" /> object.</summary>
      <param name="recursive">true to include the compute expressions of the object recursively; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.CreationName">
      <summary>Gets the string that is used to create an instance of the DtsContainer object.</summary>
      <returns>A string that contains the name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.DebugMode">
      <summary>Gets or sets a value that indicates whether the DtsContainer object is in debug mode.</summary>
      <returns>true if the object is in debug mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.DelayValidation">
      <summary>Gets or sets a value that indicates whether validation of the task is delayed until run time.</summary>
      <returns>true if the validation of the task is delayed until run time; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.Description">
      <summary>Gest or sets the description of the DtsContainer object.</summary>
      <returns>The description of the DtsContainer object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.Disable">
      <summary>Gets or sets a value that indicates whether the DtsContainer object is disabled.</summary>
      <returns>true if the object is disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.DisableEventHandlers">
      <summary>Gets or sets a value that indicates whether the event handlers on task are disabled.</summary>
      <returns>true if the event handlers on task are disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.EventHandlers">
      <summary>Gets a collection of event handler objects.</summary>
      <returns>A collection of event handler object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.EventInfos">
      <summary>Gets a collection of EventInfo object.</summary>
      <returns>A collection of EventInfo object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.Executables">
      <summary>Gets a collection of executable objects processed by the run-time engine during execution of this Sequence container.</summary>
      <returns>A collection of executable objects.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the application.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the execution.</returns>
      <param name="pConnections">The connections collection for the container.</param>
      <param name="pVariables">The variables collection for the container.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The transaction object that the container is part of.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.ExecutionDuration">
      <summary>Returns a value that indicates the amount of time that the container spent in execution, in milliseconds.</summary>
      <returns>The amount of time that the container spent in execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.ExecutionResult">
      <summary>Gets a value that indicates the success or failure of the execution of the DtsContainer object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.ExecutionStatus">
      <summary>Gets a value that indicates the current status of the execution of the DtsContainer object at the time of the call.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.FailPackageOnFailure">
      <summary>Gets or sets a value that indicates whether the package fails when a child container fails.</summary>
      <returns>true if the package fails when a child container fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.FailParentOnFailure">
      <summary>Gets or sets a value that indicates whether the parent container fails when a child container fails.</summary>
      <returns>true if the parent container fails when a child container fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.ForcedExecutionValue">
      <summary>Gets or sets an object that contains a container-defined value.</summary>
      <returns>An object that contains a container-defined value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.ForceExecutionResult">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration value that specifies the execution result of the container.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration value that specifies the execution result of the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.ForceExecutionValue">
      <summary>Gets or sets a value that indicates whether the execution value of the container should be forced to contain a particular value.</summary>
      <returns>true if the execution value of the container should be forced to caontain a particular value; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.GetExpression(System.String)">
      <summary>Returns a string that contains the expression for the specified property.</summary>
      <returns>The expression used to evaluate the property.</returns>
      <param name="bstrPropertyName">The name of the property.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.GetParentID">
      <summary>Gets or sets the parent identifier of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass" /> object.</summary>
      <returns>The parent identifier of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.ID">
      <summary>Gets a GUID that identifies the DtsContainer.</summary>
      <returns>A GUID that identifies the DtsContainer.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.IDTSSuspend100_ResumeExecution">
      <summary>Resumes the suspend execution.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.IDTSSuspend100_SuspendExecution">
      <summary>Suspends the execution.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.IDTSSuspend100_SuspendRequired">
      <summary>Gets or sets a value that indicates whether the sequence should suspend.</summary>
      <returns>true if the sequence should suspend; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.IsDefaultLocaleID">
      <summary>Gets or sets a value that indicates whether the container uses the default locale.</summary>
      <returns>true if the container uses the default locale; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction in the DtsContainer object.</summary>
      <returns>The isolation level of the transaction in the DtsContainer object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package saves as XML format.</summary>
      <param name="pNode">Contains the information to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.LocaleID">
      <summary>Gets or sets the locale id to use when the DtsContainer object is executed.</summary>
      <returns>The locale id to use when the DtsContainer object is executed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.LogEntryInfos">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100" /> object.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.LoggingMode">
      <summary>Gets or sets the logging mode of the container.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.LoggingOptions">
      <summary>Gets an object that contains properties that indicates the filtering and logging resource for containers.</summary>
      <returns>An object that contains the available logging provider options and filters for containers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.MaximumErrorCount">
      <summary>Gets or sets the maximum number of errors that can occur before the DtsContainer object stops running.</summary>
      <returns>The maximum number of errors allowed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.Name">
      <summary>Gets or sets the name of the DtsContainer.</summary>
      <returns>The name of the DtsContainer.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.Parent">
      <summary>Gets the parent container.</summary>
      <returns>The parent container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.PrecedenceConstraints">
      <summary>Gets a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" />.</summary>
      <returns>A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints100" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.Properties">
      <summary>Gets a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" />.</summary>
      <returns>A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.RegenerateID">
      <summary>Creates a new GUID for the sequence.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.ResumeExecution">
      <summary>Resumes execution of the task after pausing.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the package to XML format.</summary>
      <param name="pDoc">The XML document to which to save the information.</param>
      <param name="pNode">The node within the above document to which to save the information.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property.</summary>
      <param name="bstrPropertyName">The name of the property to which to assign the expression.</param>
      <param name="bstrExpression">The expression.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.StartTime">
      <summary>Gets the time that the container began execution.</summary>
      <returns>The time that the container began execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.StopTime">
      <summary>Gets the time that the container ended execution.</summary>
      <returns>The time that the container ended execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.SuspendExecution">
      <summary>Called when the executable needs to suspend.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.SuspendRequired">
      <summary>Gets or sets a value that indicates whether tasks should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.TransactionOption">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration value that indicates whether the container participates in transactions.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration that indicates if this container can be part of transactions.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the package to determine if it contains invalid settings that will prevent it from executing successfully.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the validation.</returns>
      <param name="pConnections">The connections collection for the package.</param>
      <param name="pVariables">The variables collection for the package.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.VariableDispenser">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object so variables associated with container can be locked.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.Variables">
      <summary>Gets a collection that contains the variables associated with this container.</summary>
      <returns>A collection that contains the variables associated with this container.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG">
      <summary>Specifies the statistical information about an open storage, stream, or byte array object.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.atime">
      <summary>The last access time for this storage, stream, or byte array.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.cbSize">
      <summary>The size in bytes of the stream or byte array.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.clsid">
      <summary>The class identifier for the storage object; set to CLSID_NULL for new storage objects. This member is not used for streams or byte arrays.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.ctime">
      <summary>The creation time for this storage, stream, or byte array.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.grfLocksSupported">
      <summary>The type of region locking that is supported by the stream or byte array, which can be a value in the LOCKTYPE enumeration. This member is not used for storage objects.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.grfMode">
      <summary>The access mode specified when the object was opened. This member is valid only in calls to Stat methods.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.grfStateBits">
      <summary>The current state bits of the storage object; that is, the value most recently set by the IStorage::SetStateBits method. This member is not valid for streams or byte arrays.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.mtime">
      <summary>The last modification time for this storage, stream, or byte array.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.pwcsName">
      <summary>A pointer to a NULL-terminated Unicode string containing the name.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.reserved">
      <summary>Reserved for future use.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.tagSTATSTG.type">
      <summary>The type of storage, which can be one of the values in the STGTY enumeration.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator32">
      <summary>Represents a 32-bit task creator.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator32Class">
      <summary>Represents a 32-bit task creator class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator32Class.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator32Class" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator32Class.CreateTask(System.String,System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,System.UInt32@,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTask100@)">
      <summary>Creates a task.</summary>
      <param name="bstrMoniker">The moniker for the task.</param>
      <param name="bstrTaskData">The data of the task.</param>
      <param name="pBreakpointManager">The breakpoint manager specific for this task.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface to raise errors, warning, or informational events.</param>
      <param name="pdwCancelEvent">The identifier for cancelling the event.</param>
      <param name="ppTask">The task to create.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator32Class.MarshalConnections(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100@)">
      <summary>Organizes the connections.</summary>
      <param name="pIn">The incoming connections.</param>
      <param name="ppOut">The outgoing connections.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator64">
      <summary>Represents a task creator class.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator64Class">
      <summary>Represents a task creator class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator64Class.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator64Class" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator64Class.CreateTask(System.String,System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100,System.UInt32@,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTask100@)">
      <summary>Creates a task.</summary>
      <param name="bstrMoniker">The moniker of the task.</param>
      <param name="bstrTaskData">The data of the task.</param>
      <param name="pBreakpointManager">The breakpoint manager specific for this task.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents100" /> interface.</param>
      <param name="pdwCancelEvent">The identifier for cancelling the event.</param>
      <param name="ppTask">The task to create.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator64Class.MarshalConnections(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100@)">
      <summary>Organizes the connections.</summary>
      <param name="pIn">The incoming connections.</param>
      <param name="ppOut">The outgoing connections.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHost">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager100)">
      <summary>This method is called by the run-time engine when a task or container is created.</summary>
      <param name="pBreakpointManager">Use for controlling breakpoints on this task or container.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ApartmentThreaded">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ComputeExpressions(System.Boolean)">
      <summary>Computes expressions of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object.</summary>
      <param name="recursive">true to include the compute expressions of the object recursively; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.CreationName">
      <summary>Gets the string that is used to create a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object.</summary>
      <returns>A string that contains the name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.DebugMode">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object is in debug mode.</summary>
      <returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object is in debug mode; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.DelayValidation">
      <summary>Gets or sets a value that indicates whether validation of the task is delayed until run time.</summary>
      <returns>true if validation of the task is delayed until run time; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.Description">
      <summary>Gets or sets the description of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object.</summary>
      <returns>The description of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.Disable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object is disabled.</summary>
      <returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object is disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.DisableEventHandlers">
      <summary>Gets or sets a value that indicates whether the event handlers on task are disabled.</summary>
      <returns>true if the event handlers on task are disabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.EventHandlers">
      <summary>Gets a collection of event handler objects.</summary>
      <returns>A collection of event handler objects.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.EventInfos">
      <summary>Gets a collection of EventInfo objects.</summary>
      <returns>A collection of EventInfo objects.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.Execute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100,System.Object)">
      <summary>Runs the application.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the execution.</returns>
      <param name="pConnections">The connections collection for the container.</param>
      <param name="pVariables">The variables collection for the container.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
      <param name="pTransaction">The transaction object that the container is part of.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ExecutionDuration">
      <summary>Gets a value that indicates the amount of time that the container spent in execution.</summary>
      <returns>The amount of time that the container spent in execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ExecutionResult">
      <summary>Gets a value that indicates the success or failure of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object.</summary>
      <returns>The success or failure of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ExecutionStatus">
      <summary>Gets a value that indicates the current status of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object at the time of the call.</summary>
      <returns>The current status of the execution of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object at the time of the call.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ExecutionValue">
      <summary>Gets the result of the task execution.</summary>
      <returns>A user-defined object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ExecValueVariable">
      <summary>Gets or sets the custom variable that contains the execution value of the task.</summary>
      <returns>The custom variable that contains the execution value of the task.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.FailPackageOnFailure">
      <summary>Gets or sets a value that indicates whether the package fails when a child container fails.</summary>
      <returns>true if the package fails when a child container fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.FailParentOnFailure">
      <summary>Gets or sets a value that indicates whether the parent container fails when a child container fails.</summary>
      <returns>true if the parent container fails when a child container fails; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ForcedExecutionValue">
      <summary>Gets or sets an object that contains a container-defined value.</summary>
      <returns>An object that contains a container-defined value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ForceExecutionResult">
      <summary>Gets or sets the execution result of the container.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" /> enumeration value that specifies the execution result of the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ForceExecutionValue">
      <summary>Gets or sets a value that indicates whether the execution value of the container should be forced to contain a particular value.</summary>
      <returns>true if the execution value of the container should be forced to contain a particular value; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.GetExpression(System.String)">
      <summary>Returns a string that contains the expression for the specified property.</summary>
      <returns>The expression used to evaluate the property.</returns>
      <param name="bstrPropertyName">The name of the property.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.GetParentID">
      <summary>Returns the parent identifier of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object.</summary>
      <returns>The parent identifier of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.HostType">
      <summary>Gets the value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType" /> enumeration that describes the host of the container.</summary>
      <returns>A value from <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType" /> enumerator.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ID">
      <summary>Gets a GUID that identifies the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" />.</summary>
      <returns>A GUID that identifies the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.IDTSContainer100_DelayValidation">
      <summary>Gets or sets a value that indicates whether the validation is delayed.</summary>
      <returns>true if the validation is delayed; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.IDTSSuspend100_ResumeExecution">
      <summary>Resumes the suspend execution.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.IDTSSuspend100_SuspendExecution">
      <summary>Suspends the execution.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.IDTSSuspend100_SuspendRequired">
      <summary>Gets or sets a value that indicates whether the task should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task suspends when it encounters a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.InnerObject">
      <summary>Gets the object that is contained by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</summary>
      <returns>The object that is contained by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.IsDefaultLocaleID">
      <summary>Gets a value that indicates whether the container uses the default locale.</summary>
      <returns>true if the container uses the default; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.IsolationLevel">
      <summary>Gets the isolation level of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package saves as XML format.</summary>
      <param name="pNode">Contains the information to be loaded.</param>
      <param name="pEvents">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.LocaleID">
      <summary>Gets or sets the locale id to use when the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" /> object is executed.</summary>
      <returns>The locale id.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.LogEntryInfos">
      <summary>Gets a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100" /> object.</summary>
      <returns>A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.LoggingMode">
      <summary>Gets or sets the logging mode of the container.</summary>
      <returns>The logging mode of the container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.LoggingOptions">
      <summary>Gets an object that contains properties that indicates the filtering and logging resource for containers.</summary>
      <returns>An object that contains the available logging provider options and filters for containers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.MaximumErrorCount">
      <summary>Gets or sets a value that indicates the maximum number of errors.</summary>
      <returns>The maximum number of errors.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</summary>
      <returns>The name of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.Parent">
      <summary>Gets the parent container.</summary>
      <returns>The parent container.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.Properties">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection that contains the properties associated with the task.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties100" /> collection that contains the properties associated with the task.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.RegenerateID">
      <summary>Creates a new GUID for the sequence.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ResumeExecution">
      <summary>Resumes execution of the task after pausing.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the package to XML format.</summary>
      <param name="pDoc">The XML document to which to save the information.</param>
      <param name="pNode">The node within the above document to which to save the information.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.SetExpression(System.String,System.String)">
      <summary>Assigns the specified expression to the property.</summary>
      <param name="bstrPropertyName">The name of the property to which to assign the expression.</param>
      <param name="bstrExpression">The expression.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.StartTime">
      <summary>Gets the time that the container began execution.</summary>
      <returns>The time that the container began execution.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.StopTime">
      <summary>Gets the time that the container ended execution.</summary>
      <returns>The time that the container ended execution.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.SuspendExecution">
      <summary>Called when the executable needs to suspend.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.SuspendRequired">
      <summary>Gets or set a value that indicates whether the task should suspend when they encounter a breakpoint.</summary>
      <returns>true if the task should suspend when they encounter a breakpoint; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.TransactionOption">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration that indicates whether the container participates in transactions.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption" /> enumeration that indicates whether the container participates in transactions.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.Validate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100)">
      <summary>Allows the package to determine if it contains invalid settings that will prevent it from executing successfully.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult" /> enumeration that indicates the outcome of the validation.</returns>
      <param name="pConnections">The connections collection for the package.</param>
      <param name="pVariables">The variables collection for the package.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface to raise events.</param>
      <param name="pLog">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.VariableDispenser">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object so variables associated with the container can be locked.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.Variables">
      <summary>Gets a collection that contains the variables associated with this container.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100" /> collection.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Variable">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass">
      <summary>Represents a variable class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.CreationName">
      <summary>Gets the string that the runtime engine gives when it creates an instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass" /> object.</summary>
      <returns>A string that contains the name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.DataType">
      <summary>Gets the data type of the variable.</summary>
      <returns>The data type of the variable.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.Description">
      <summary>Gets or sets the description for the variable class.</summary>
      <returns>The description for the variable class.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.EvaluateAsExpression">
      <summary>Gets or sets a value that indicates whether the variable contains an expression.</summary>
      <returns>true if the variable contains an expression; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.Expression">
      <summary>Gets or sets the expression contained in the variable class.</summary>
      <returns>The expression contained in the variable class.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.GetValueWithContext(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvaluatorContext100)">
      <summary>Returns a value of the variable class with a specified context.</summary>
      <returns>A value of the variable class with a specified context.</returns>
      <param name="pContext">The context.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.ID">
      <summary>The identifier of the variable.</summary>
      <returns>The identifier of the variable.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.IncludeInDebugDump">
      <summary>Gets or sets a value that specifies whether the variable value is included in the debug dump files. </summary>
      <returns>A Boolean that specifies whether the variable value is included in the debug dump files.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Loads a package to a XML format.</summary>
      <param name="pNode">The node that contains the metadata to be loaded.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.Name">
      <summary>Gets or sets the name of the variable.</summary>
      <returns>The name of the variable.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.Namespace">
      <summary>Gets or sets the namespace that the variable class belongs to.</summary>
      <returns>The namespace that the variable class belongs to.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.Parent">
      <summary>Gets or sets the parent of the variable class.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer100" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.QualifiedName">
      <summary>Gets the fully qualified name of the variable, including the namespace.</summary>
      <returns>The fully qualified name of the variable, including the namespace.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.RaiseChangedEvent">
      <summary>Gets or sets a value that indicates whether the variable class has been flagged to raise the OnVariableValueChanged event.</summary>
      <returns>True if a change to the variable value is to raise an OnVariableValueChanged event.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.ReadOnly">
      <summary>Gets or sets a value that indicates whether the variable class is read-only and cannot have its value modified.</summary>
      <returns>true if the variable class is read-only; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100)">
      <summary>Saves the package to a XML format.</summary>
      <param name="pDoc">The document to which to save the information.</param>
      <param name="pNode">The node within the document to which to save the information.</param>
      <param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents100" /> interface.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.SystemVariable">
      <summary>Gets a value that indicates whether the variable class is a system variable.</summary>
      <returns>true if the variable class is a system variable; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.Value">
      <summary>Gets or sets the value assigned to the variable.</summary>
      <returns>The value assigned to the variable.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableCreator">
      <summary>Represents the creator of a variable.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableCreatorClass">
      <summary>Represents a variable creator class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableCreatorClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableCreatorClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableCreatorClass.CreateVariable(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSParameter100)">
      <summary>Creates a variable with the specified parameter.</summary>
      <returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable100" /> variable.</returns>
      <param name="pParameter">The specified parameter.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenser">
      <summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass">
      <summary>Represents a variable dispenser class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.Contains(System.String)">
      <summary>Specifies whether an item can be retrieve from the collection by using indexing without throwing an exception.</summary>
      <param name="Variable">The name of the variable to locate in the collection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.GetQualifiedName(System.String)">
      <summary>Returns the qualified name of the variable.</summary>
      <returns>The qualified name of the variable.</returns>
      <param name="Variable">The variable whose fully qualified name you want to know.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.GetVariables(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100@)">
      <summary>Locks the variables that are in the read-only list and the read/write list.</summary>
      <param name="ppVariables">The collection that contains all the variables found in the read-only list and the read/write list.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.LockForRead(System.String)">
      <summary>Adds the variable to the list of variables to be locked for read-only access.</summary>
      <param name="Variable">The name of the variable.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.LockForWrite(System.String)">
      <summary>Adds the variable to the list of variables to be locked for read/write access.</summary>
      <param name="Variable">The name of the variable.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.LockOneForRead(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100@)">
      <summary>Puts the variable in a list, and then locks it for read-only access.</summary>
      <param name="Variable">The variable you want to lock for read-only access.</param>
      <param name="ppVariables">The collection of variables.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.LockOneForWrite(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables100@)">
      <summary>Puts the variable in a list, and then locks it for read/write access.</summary>
      <param name="Variable">The name of the variable to lock for read/write access.</param>
      <param name="ppVariables">A collection of variables.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.Reset">
      <summary>Clears both the read-only list and read/write list.</summary>
    </member>
  </members>
</doc>